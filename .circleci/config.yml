# Root CircleCI configuration
# Configuration for individual packages lives in .circleci/src/{commands,jobs,workflows}

version: 2.1

setup: true

orbs:
  continuation: circleci/continuation@0.3.1
  path-filtering: circleci/path-filtering@0.1.1

parameters:
  workflow:
    type: string
    default: 'main'

commands:
  create_concatenated_patch_file:
    description: 'Concatenate all patch-files. File is used as checksum source for part of caching key.'
    parameters:
      filename:
        type: string
    steps:
      - run:
          name: Combine patch-files to single file
          command: ls -d -- packages/*/patches/*.patch | xargs cat > << parameters.filename >>

jobs:
  # Generate the CircleCI continue_config.yml from .circleci/src
  generate-config:
    docker:
      - image: cimg/base:2021.04
    steps:
      # The circleci cli exposed in the image doesn't support config packing
      # so we install a version that does
      - run:
          name: Install cli
          command: curl -fLSs https://raw.githubusercontent.com/CircleCI-Public/circleci-cli/master/install.sh | DESTDIR=~/cli bash
      - checkout
      - run:
          name: Generate config
          command: ~/cli config pack .circleci/src > .circleci/continue_config.yml
      - persist_to_workspace:
          root: ./
          paths:
            - .circleci/continue_config.yml

  init:
    working_directory: ~/audius-protocol
    docker:
      - image: cimg/node:18.17
    resource_class: large
    context:
      - vercel
    steps:
      - checkout

      - create_concatenated_patch_file:
          filename: combined-patch-file.txt

      - restore_cache:
          keys:
            - cache-{{ checksum "package-lock.json" }}-{{ checksum "combined-patch-file.txt" }}

      - run:
          name: Install dependencies
          command: |
            npm ci

      - save_cache:
          key: cache-{{ checksum "package-lock.json" }}-{{ checksum "combined-patch-file.txt" }}
          paths:
            - ./node_modules
            - ./packages/web/node_modules
            - ./packages/mobile/node_modules
            - ./packages/probers/node_modules
            - ./packages/embed/node_modules
            - ./packages/stems/node_modules
            - ./packages/harmony/node_modules
            - ./packages/common/node_modules
            - ./packages/libs/node_modules

      - save_cache:
          key: cache-{{ .Revision }}
          paths:
            - ./packages/stems/dist
            - ./packages/harmony/dist
            - ./packages/common/dist
            - ./packages/libs/dist

  generate-release:
    working_directory: ~/audius-protocol
    resource_class: small
    docker:
      - image: cimg/base:2023.01
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 'd0:0b:a0:19:ac:46:58:e4:6c:ac:34:99:f6:1b:31:bb' # github.com
      - run:
          name: Set git config
          command: |
            git config --global user.email "audius-infra@audius.co"
            git config --global user.name "audius-infra"
      - run:
          name: Create branch
          command: |
            OLD_VERSION=$(jq -r .version discovery-provider/.version.json)
            NEW_VERSION=$(echo ${OLD_VERSION} | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')

            git checkout main

            jq --arg version "$NEW_VERSION" '.version=$version' mediorum/.version.json > /tmp/.version.json
            mv /tmp/.version.json mediorum/.version.json
            git add mediorum/.version.json

            jq --arg version "$NEW_VERSION" '.version=$version' discovery-provider/.version.json > /tmp/.version.json
            mv /tmp/.version.json discovery-provider/.version.json
            git add discovery-provider/.version.json

            # Escape double quotes in commit message and replace git log's platform-specific newlines with @@DELIM@@
            GIT_DIFF=$(git log --pretty=format:'â€¢ %an - %s [<https://github.com/AudiusProject/audius-protocol/commit/%H|%h>]' --abbrev-commit origin/release-v$OLD_VERSION..HEAD -- mediorum discovery-provider identity-service comms | sed 's/"/\"/g' | tr -d '\r' | sed ':a;N;$!ba;s/\n/@@DELIM@@/g')
            git commit -m "Bump version to $NEW_VERSION"

            git branch "release-v$NEW_VERSION"
            git checkout "release-v$NEW_VERSION"

            git push --set-upstream origin main "release-v$NEW_VERSION"

            # Slack has a limit of 3000 characters per block, so we need to split the diff into multiple blocks
            max_lines=8
            json_content="{ \"blocks\": ["
            json_content+="{ \"type\": \"header\", \"text\": { \"type\": \"plain_text\", \"text\": \"New Protocol Release Branch (v0.4.9)\n\" } },"
            json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"*These changes will be released to SPs at 11am PST:*\n\" } },"
            line_count=0
            block_content=""

            # Use @@ as Internal Field Separator, so @@DELIM@@ effectively becomes the delimiter for us to build blocks
            IFS='@@'
            read -ra ADDR \<<< "$GIT_DIFF"
            for line in "${ADDR[@]}"; do
                if [[ $line == "DELIM" ]]; then
                    continue
                fi

                block_content+="$line\n"
                line_count=$((line_count+1))

                if (( line_count == max_lines )); then
                    json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"${block_content}\" } },"
                    line_count=0
                    block_content=""
                fi
            done

            if (( line_count > 0 )); then
                json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"${block_content}\" } },"
            fi

            json_content=${json_content%,}
            json_content+="]}"
            
            # The next step of this job will read this file and send it to Slack
            echo $json_content > /tmp/slack_message.json
      - run:
          name: Send Slack Daily Deploy Message
          command: |
            curl -f -X POST -H 'Content-type: application/json' \
              --data @/tmp/slack_message.json \
              $SLACK_DAILY_DEPLOY_WEBHOOK

  generate-client-release:
    working_directory: ~/audius-protocol
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 'a4:99:2e:fa:80:31:dc:23:25:7b:a5:70:3f:08:5f:fa'
      - run:
          name: Bump version
          command: |
            git config --global user.email "audius-infra@audius.co"
            git config --global user.name "audius-infra"
            PREV_VERSION=$(jq -r .version ./package.json)
            CHANGELOG=$(git log --pretty=format:"[%h] %s %an" --date=short v${PREV_VERSION}..HEAD)
            npm i --ignore-scripts
            npm version patch -ws --include-workspace-root --no-git-tag-version
            git add .
            VERSION=$(jq -r .version ./package.json)
            MESSAGE="v${VERSION}

            ${CHANGELOG}"
            git commit -m "${MESSAGE}"
            git push -u origin main
            git tag client-v${VERSION}
            git push origin client-v${VERSION}
      - run:
          name: Create release branch
          command: |
            VERSION=$(jq -r .version ./package.json)
            git checkout -b release-client-v${VERSION}
            git push -u origin release-client-v${VERSION}

workflows:
  setup:
    when:
      not:
        equal: [scheduled_pipeline, << pipeline.trigger_source >>]
    jobs:
      - generate-config
      - init
      - path-filtering/filter:
          name: trigger-relevant-workflows
          filters:
            branches:
              ignore:
                - main
                - /^release.*$/
          base-revision: main
          config-path: ../workspace/.circleci/continue_config.yml
          mapping: |
            discovery-provider/.* run-discovery-workflow true
            discovery-provider/.* run-integration-workflow true
            discovery-provider/.* run-gcp-workflow true
            comms/.* run-discovery-workflow true
            comms/.* run-integration-workflow true
            comms/.* run-gcp-workflow true
            mediorum/.* run-creator-workflow true
            mediorum/.* run-integration-workflow true
            mediorum/.* run-gcp-workflow true
            identity-service/.* run-identity-workflow true
            identity-service/.* run-integration-workflow true
            identity-service/.* run-gcp-workflow true
            libs/.* run-creator-workflow true
            libs/.* run-identity-workflow true
            libs/.* run-sdk-workflow true
            libs/.* run-integration-workflow true
            libs/.* run-gcp-workflow true
            eth-contracts/.* run-eth-contracts-workflow true
            eth-contracts/.* run-integration-workflow true
            eth-contracts/.* run-gcp-workflow true
            contracts/.* run-contracts-workflow true
            contracts/.* run-integration-workflow true
            contracts/.* run-gcp-workflow true
            .circleci/.* run-discovery-workflow true
            .circleci/.* run-creator-workflow true
            .circleci/.* run-identity-workflow true
            .circleci/.* run-eth-contracts-workflow true
            .circleci/.* run-contracts-workflow true
            .circleci/.* run-sdk-workflow true
            .circleci/.* run-web-workflow true
            .circleci/.* run-mobile-workflow true
            .circleci/.* run-stems-workflow true
            .circleci/.* run-embed-workflow true
            .* run-release-workflow false
            packages/web/.* run-web-workflow true
            packages/mobile/.* run-mobile-workflow true
            packages/probers/.* run-web-workflow true
            packages/embed/.* run-embed-workflow true
            packages/common/.* run-web-workflow true
            packages/common/.* run-mobile-workflow true
            packages/stems/.* run-stems-workflow true
            packages/stems/.* run-web-workflow true
            packages/harmony/.* run-harmony-workflow true
            packages/harmony/.* run-web-workflow true
            packages/eslint-config-audius/.* run-web-workflow true
            packages/eslint-config-audius/.* run-mobile-workflow true
            packages/eslint-config-audius/.* run-stems-workflow true
          requires:
            - generate-config
            - init
          workspace_path: ../workspace

      - path-filtering/filter:
          name: trigger-main-workflows
          filters:
            branches:
              only: /^main$/
          base-revision: main~1
          config-path: ../workspace/.circleci/continue_config.yml
          mapping: |
            .* run-gcp-workflow true
            .* run-integration-workflow true
            .* run-discovery-workflow true
            .* run-creator-workflow true
            .* run-identity-workflow true
            .* run-eth-contracts-workflow true
            .* run-contracts-workflow true
            .* run-release-workflow false
            libs/.* run-sdk-workflow true
            .* run-web-workflow true
            .* run-mobile-workflow true
            .* run-stems-workflow true
            .* run-probers-workflow true
          requires:
            - generate-config
            - init
          workspace_path: ../workspace

      - path-filtering/filter:
          name: trigger-release-workflows
          filters:
            branches:
              only: /^release-v.*$/
          base-revision: main
          config-path: ../workspace/.circleci/continue_config.yml
          mapping: |
            .* run-gcp-workflow true
            .* run-integration-workflow true
            .* run-discovery-workflow true
            .* run-creator-workflow true
            .* run-identity-workflow true
            .* run-eth-contracts-workflow true
            .* run-contracts-workflow true
            .* run-release-workflow true
            .* run-sdk-workflow true
          requires:
            - generate-config
            - init
          workspace_path: ../workspace

      - path-filtering/filter:
          name: trigger-release-client-workflows
          filters:
            branches:
              only: /^release-client.*$/
          base-revision: main
          config-path: ../workspace/.circleci/continue_config.yml
          mapping: |
            .* run-web-workflow true
            .* run-mobile-workflow true
            .* run-stems-workflow true
            .* run-harmony-workflow true
            .* run-probers-workflow false
          requires:
            - generate-config
            - init
          workspace_path: ../workspace

  release-create-branch:
    when:
      and:
        - equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - equal: ['release-create-branch', << pipeline.schedule.name >>]
    jobs:
      - generate-release:
          context: slack-secrets

  release-client-create-branch:
    when:
      and:
        - equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - equal: ['release-client-create-branch', << pipeline.schedule.name >>]
    jobs:
      - generate-client-release
