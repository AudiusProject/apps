resource_class: small
docker:
  - image: cimg/base:2023.01
steps:
  - checkout
  - gh/setup
  - run:
      name: Checks
      command: |
        CN_VERSION="$(jq -r .version creator-node/.version.json)"
        DP_VERSION="$(jq -r .version discovery-provider/.version.json)"
        if [[ "$CN_VERSION" != "$DP_VERSION" ]]; then
          echo "Existing creator-node ($CN_VERSION) and discovery-provider ($DP_VERSION) versions don't match"
          exit 1
        fi

        OLD_VERSION="$CN_VERSION"
        echo "export OLD_VERSION='$OLD_VERSION'" >> "$BASH_ENV"

        NEW_VERSION="$(echo "$CIRCLE_BRANCH" > sed 's/^release-v//')"
        echo "export NEW_VERSION='$NEW_VERSION'" >> "$BASH_ENV"

        if ! dpkg --compare-versions "$OLD_VERSION" lt "$NEW_VERSION"; then
          echo "Version in branch name is older than current version"
          exit 1
        fi
  - run:
      name: Set git config
      command: |
        git config --global user.email "audius-infra@audius.co"
        git config --global user.name "audius-infra"
  - run:
      name: Generate Changelog
      command: |
        generate-changelog() {
          service="$1"
          start_commit=$(git show-ref --hash "refs/tags/@audius/$service@$OLD_VERSION")
          printf "Full Changelog:\n"
          git log --pretty='[%h] - %s' --abbrev-commit "$start_commit..HEAD" "$service"
        }

        generate-changelog creator-node | tee /tmp/creator-node-changelog
        generate-changelog discovery-provider | tee /tmp/discovery-provider-changelog
  - run:
      name: Update .version.json
      command: |
        jq --arg version "$NEW_VERSION" '.version=$version' creator-node/.version.json > /tmp/.version.json
        mv /tmp/.version.json creator-node/.version.json
        git add creator-node/.version.json

        jq --arg version "$NEW_VERSION" '.version=$version' discovery-provider/.version.json > /tmp/.version.json
        mv /tmp/.version.json discovery-provider/.version.json
        git add discovery-provider/.version.json

        git commit -m "[skip ci] Bump version to $NEW_VERSION"
        git push
  - run:
      name: Make release
        gh release create -d --target "$CIRCLE_BRANCH" -F /tmp/creator-node-changelog "@audius/creator-node-$NEW_VERSION"
        gh release create -d --target "$CIRCLE_BRANCH" -F /tmp/discovery-provider-changelog "@audius/discovery-provider-$NEW_VERSION"
