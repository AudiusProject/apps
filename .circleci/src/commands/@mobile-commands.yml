mobile-halt-if-no-native-changes:
  steps:
    - run:
        name: don't do anything if no native changes
        command: |
          ! git diff --quiet origin/main... -- 'apps/mobile' ':!apps/mobile/src' || circleci-agent step halt

mobile-halt-if-codepush-release-ios:
  steps:
    - run:
        name: fastlane build
        command: cd apps/mobile/ios && bundle exec fastlane haltIfCodePushEligible

mobile-halt-if-codepush-release-android:
  steps:
    - run:
        name: fastlane build
        command: cd apps/mobile/android && bundle exec fastlane haltIfCodePushEligible

# Bundle ios app and prepare to build/upload/release
mobile-prepare-ios:
  parameters:
    build-directory:
      default: 'build-mobile-production'
      type: string
    bundle-id:
      default: 'co.audius.audiusmusic'
      type: string
    env:
      default: '.env.prod'
      type: string
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: install cocoapods
        command: sudo gem install cocoapods:1.12.0
    - run:
        name: copy bundle
        command: cd apps/mobile && npm run bundle:ios
    - run:
        name: Install Sentry CLI
        command: |
          curl -sL https://sentry.io/get-cli/ | bash
          echo export SENTRY_BINARY=/usr/local/bin/sentry-cli >> "$BASH_ENV"
    - restore_cache:
        key: pods-{{ checksum "apps/mobile/ios/Podfile.lock" }}
    - run:
        name: Symlink react-native
        command: |
          ln -s $PWD/node_modules/.bin/react-native $PWD/app/mobile/node_modules/.bin/react-native
          ln -s $PWD/node_modules/react-native $PWD/app/mobile/node_modules/react-native
    - run:
        name: install pods
        command: |
          cd apps/mobile/ios
          pod install --deployment
    - save_cache:
        key: pods-{{ checksum "apps/mobile/ios/Podfile.lock" }}
        paths:
          - apps/mobile/ios/pods
    - run:
        name: update bundler
        command: sudo gem install bundler:1.17.3
    - restore_cache:
        key: 1-gems-{{ checksum "apps/mobile/ios/Gemfile.lock" }}
    - run: cd apps/mobile/ios && (bundle check || bundle install --path vendor/bundle)
    - save_cache:
        key: 1-gems-{{ checksum "apps/mobile/ios/Gemfile.lock" }}
        paths:
          - apps/mobile/ios/vendor/bundle
    - run:
        name: update fastlane
        command: cd apps/mobile/ios && bundle update fastlane

# Build ios app
mobile-build-ios:
  parameters:
    build-directory:
      default: 'build-mobile-production'
      type: string
    bundle-id:
      default: 'co.audius.audiusmusic'
      type: string
    env:
      default: '.env.prod'
      type: string
  steps:
    - run:
        name: fastlane build
        command: cp apps/mobile/<<parameters.env>> apps/mobile/ios/ && cd apps/mobile/ios && bundle exec fastlane build bundle_id:<<parameters.bundle-id>>
    - store_artifacts:
        path: apps/mobile/output
    - store_test_results:
        path: apps/mobile/output/scan

# If the app can be released via CodePush, release it via CodePush.
# Otherwise, build and upload it to the App Store.
mobile-release-ios:
  parameters:
    build-directory:
      default: 'build-mobile-production'
      type: string
    bundle-id:
      default: 'co.audius.audiusmusic'
      type: string
    env:
      default: '.env.prod'
      type: string
  steps:
    - run:
        name: Symlink react-native binary
        command: ln -s $PWD/node_modules/.bin/react-native $PWD/apps/mobile/node_modules/.bin/react-native
    - run:
        name: fastlane build and upload
        command: cd apps/mobile/ios && bundle exec fastlane build_and_upload bundle_id:<<parameters.bundle-id>>

# Prepare to build/upload/release Android
mobile-prepare-android:
  parameters:
    build-directory:
      default: 'build-mobile-production'
      type: string
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: migrate support libraries for androidX packages
        command: |
          cd apps/mobile && npm run jetifier
    - run:
        name: update bundler
        command: sudo gem install bundler:1.17.3
    - run:
        name: install pip
        command: sudo apt install python3-pip
    - restore_cache:
        key: 1-gems-{{ checksum "apps/mobile/android/Gemfile.lock" }}
    - run: cd apps/mobile/android && (bundle check || bundle install --path vendor/bundle)
    - save_cache:
        key: 1-gems-{{ checksum "apps/mobile/android/Gemfile.lock" }}
        paths:
          - apps/mobile/android/vendor/bundle
    - run:
        name: fetch app fastlane json config to upload to play store
        command: |
          echo "$FASTLANE_PLAYSTORE_JSON" > apps/mobile/android/app/api.txt
          base64 --decode apps/mobile/android/app/api.txt > apps/mobile/android/app/api.json

# Build the android app
mobile-build-android:
  parameters:
    build-directory:
      default: 'build-mobile-production'
      type: string
    build-type:
      default: 'bundleRelease'
      type: string
    bundle-id:
      default: 'co.audius.app'
      type: string
    track:
      default: 'alpha'
      type: string
    remote-directory:
      default: 'audius-mobile'
      type: string
  steps:
    # TODO: Create Fastlane lane for building Android and call that instead
    # (since we already have these same commands in the Fastlane file).
    - run:
        name: increment version code
        command: |
          cd apps/mobile/android
          bundle exec fastlane incrementVersionCode package_name:<<parameters.bundle-id>> track:<<parameters.track>>
    - run:
        name: generating the release apk & bundle
        command: |
          echo "yes" | sdkmanager "platforms;android-30" && cd apps/mobile/android && ./gradlew <<parameters.build-type>>

# If the app can be released via CodePush, release it via CodePush.
# Otherwise, build and upload it to the App Store.
mobile-release-android:
  parameters:
    build-directory:
      default: 'build-mobile-production'
      type: string
    upload-type:
      default: 'prod'
      type: string
    track:
      default: 'alpha'
      type: string
  steps:
    - run:
        name: Symlink react-native binary
        command: ln -s $PWD/node_modules/.bin/react-native $PWD/apps/mobile/node_modules/.bin/react-native
    - run:
        name: release android
        command: |
          cd apps/mobile/android
          bundle exec fastlane <<parameters.upload-type>> track:<<parameters.track>>

# Deploy Solana saga dApp store
mobile-release-saga-dapp-store:
  parameters:
    bundle-id:
      default: 'co.audius.app'
      type: string
    track:
      default: 'alpha'
      type: string
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: Add Java to PATH
        command: |
          echo 'export PATH=$PATH:$JAVA_HOME/bin' >> ~/.bashrc
          source ~/.bashrc
    - run:
        name: Install nvm
        command: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
          echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --install' >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Install dependencies
        command: |
          cd apps/mobile/dapp-store
          nvm install
          nvm use
          corepack enable
          corepack prepare pnpm@`npm info pnpm --json | jq -r .version` --activate
          pnpm install
    - run:
        name: Install solana
        command: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.16.3/install)"
    - run:
        name: Recover key
        command: |
          cd apps/mobile/dapp-store
          echo $SOLANA_DAPP_STORE_PRIVATE_KEY > app-keypair.json
    - run:
        name: Increment version code
        command: |
          cd apps/mobile/android
          bundle exec fastlane incrementVersionCode package_name:<<parameters.bundle-id>> track:<<parameters.track>>
    - run:
        name: Build Android
        command: |
          cd apps/mobile/android
          ./gradlew app:assembleRelease
    - run:
        name: Validate release
        command: |
          cd apps/mobile/dapp-store
          nvm use
          npx dapp-store validate release -k app-keypair.json -b $ANDROID_HOME/build-tools/33.0.0
    - run:
        name: Publish APK
        command: |
          cd apps/mobile/dapp-store
          nvm use
          npx dapp-store create release -k app-keypair.json -b $ANDROID_HOME/build-tools/33.0.0 -u https://solana-mainnet.g.alchemy.com/v2/9j3Y1hc042MCH0_TqunwotlaFLHF6K4l
    - run:
        name: Issue update to dapp store
        command: |
          cd apps/mobile/dapp-store
          nvm use
          npx dapp-store publish update -k app-keypair.json -u https://solana-mainnet.g.alchemy.com/v2/9j3Y1hc042MCH0_TqunwotlaFLHF6K4l --requestor-is-authorized --complies-with-solana-dapp-store-policies
    - run:
        name: Commit changes
        command: |
          git config --global user.email "audius-infra@audius.co"
          git config --global user.name "audius-infra"
          git add apps/mobile/dapp-store/.asset-manifest.json apps/mobile/dapp-store/config.yaml
          git checkout .
          git reset
          git checkout main
          git pull
          git add apps/mobile/dapp-store/.asset-manifest.json apps/mobile/dapp-store/config.yaml
          git commit -m 'Update dapp-store build artifacts'
          git push origin main
