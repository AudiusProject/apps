lint-discovery-provider:
  working_directory: ~/audius-protocol
  docker:
    - image: cimg/python:3.11
  steps:
    - checkout

    - attach_workspace:
        at: ./

    - create_concatenated_patch_file:
        filename: combined-patch-file.txt

    - restore_cache:
        keys:
          - cache-{{ checksum "package-lock.json" }}-{{ checksum "combined-patch-file.txt" }}

    - restore_cache:
        key: python-requirements-{{ checksum "packages/discovery-provider/requirements.txt" }}

    - run:
        name: Install Python dependencies
        command: |
          cd packages/discovery-provider
          pip install -r requirements.txt

    - save_cache:
        key: python-requirements-{{ checksum "packages/discovery-provider/requirements.txt" }}
        paths:
          - '~/.cache/pip'
          - '/usr/local/lib/python3.11/site-packages'
          - '/usr/local/lib/site-python'

    - run:
        name: Lint
        command: |
          cd packages/discovery-provider
          isort .
          flake8 .
          black .

    - run:
        name: Typecheck
        command: |
          cd packages/discovery-provider
          mypy .

    - persist_to_workspace:
        root: ./
        paths:
          - node_modules

test-discovery-api:
  working_directory: ~/audius-protocol
  executor: newman/postman-newman-docker
  steps:
    - checkout
    - run:
        name: Run API Tests
        command: |
          # Run API tests but ignore any errors
          set +e
          newman run ./packages/discovery-provider/api-tests/Discovery\ API\ Tests.postman_collection.json --environment ./packages/discovery-provider/api-tests/Test\ Sandbox.postman_environment.json
          set -e

verify-sdk-types:
  machine: true
  resource_class: audiusproject/gcp-n2-standard-4
  working_directory: ~/audius-protocol
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run: AUDIUS_DEV=false bash ~/audius-protocol/dev-tools/setup.sh
    - run:
        name: Verify types
        command: |
          . ~/.profile
          audius-compose up --prod
          npm run verify-sdk-types -w @audius/sdk
    - run:
        name: cleanup
        no_output_timeout: 5m
        command: . ~/.profile; audius-compose down
        when: always
    - docker-prune
