mobile-init:
  working_directory: ~/audius-protocol
  docker:
    - image: cimg/node:18.17
  steps:
    - checkout
    - run:
        name: copy staging env
        command: |
          cd packages/mobile
          echo -e "\nAMPLITUDE_WRITE_KEY=$AMPLITUDE_WRITE_KEY_STAGE" >> .env.stage
    - run:
        name: copy production env
        command: |
          cd packages/mobile
          echo -e "\nAMPLITUDE_WRITE_KEY=$AMPLITUDE_WRITE_KEY_PROD" >> .env.prod

    - create_concatenated_patch_file:
        filename: combined-patch-file.txt

    - restore_cache:
        keys:
          - npm-cache-0529-{{ checksum "package-lock.json" }}-{{ checksum "combined-patch-file.txt" }}

    - run:
        name: lint & typecheck
        command: |
          npx turbo run verify --filter=@audius/mobile

    - persist_to_workspace:
        root: ./
        paths:
          - node_modules
          - packages/web/node_modules
          - packages/mobile/node_modules
          - packages/common/node_modules
          - packages/libs/node_modules
          - packages/libs/dist
          - packages/sdk/node_modules
          - packages/sdk/dist
          - packages/mobile/.env.stage
          - packages/mobile/.env.prod
          - packages/mobile/android/libs

mobile-build-staging-ios:
  working_directory: ~/audius-protocol
  # run on macos so app can be created and signed.
  resource_class: macos.m1.medium.gen1
  macos:
    xcode: '16.2.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-prepare-ios:
        build-directory: 'build-mobile-staging'
        bundle-id: 'co.audius.audiusmusic.staging'
        env: '.env.stage'
    - mobile-build-ios:
        build-directory: 'build-mobile-staging'
        bundle-id: 'co.audius.audiusmusic.staging'
        env: '.env.stage'

mobile-build-upload-staging-ios:
  working_directory: ~/audius-protocol
  # run on macos so app can be created and signed.
  resource_class: macos.m1.medium.gen1
  macos:
    xcode: '16.2.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-prepare-ios:
        build-directory: 'build-mobile-staging'
        bundle-id: 'co.audius.audiusmusic.staging'
        env: '.env.stage'
    - mobile-release-ios:
        build-directory: 'build-mobile-staging'
        bundle-id: 'co.audius.audiusmusic.staging'
        env: '.env.stage'

mobile-build-production-ios:
  working_directory: ~/audius-protocol
  # run on macos so app can be created and signed.
  resource_class: macos.m1.medium.gen1
  macos:
    xcode: '16.2.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-prepare-ios:
        build-directory: 'build-mobile-production'
        bundle-id: 'co.audius.audiusmusic'
        env: '.env.prod'
    - mobile-build-ios:
        build-directory: 'build-mobile-production'
        bundle-id: 'co.audius.audiusmusic'
        env: '.env.prod'

mobile-build-upload-production-ios-if-full-release:
  working_directory: ~/audius-protocol
  # run on macos so app can be created and signed.
  resource_class: macos.m1.medium.gen1
  macos:
    xcode: '16.2.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-prepare-ios:
        build-directory: 'build-mobile-production'
        bundle-id: 'co.audius.audiusmusic'
        env: '.env.prod'
    - mobile-release-ios:
        build-directory: 'build-mobile-production'
        bundle-id: 'co.audius.audiusmusic'
        env: '.env.prod'
        slack-notify: false

mobile-build-upload-releasecandidate-ios:
  working_directory: ~/audius-protocol
  # run on macos so app can be created and signed.
  resource_class: macos.m1.medium.gen1
  macos:
    xcode: '16.2.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-prepare-ios:
        build-directory: 'build-mobile-releasecandidate'
        bundle-id: 'co.audius.audiusmusic.releasecandidate'
        env: '.env.prod'
    - mobile-release-ios:
        build-directory: 'build-mobile-releasecandidate'
        bundle-id: 'co.audius.audiusmusic.releasecandidate'
        env: '.env.prod'

mobile-build-upload-staging-releasecandidate-ios:
  working_directory: ~/audius-protocol
  # run on macos so app can be created and signed.
  resource_class: macos.m1.medium.gen1
  macos:
    xcode: '16.2.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-prepare-ios:
        build-directory: 'build-mobile-staging-releasecandidate'
        bundle-id: 'co.audius.audiusmusic.staging.releasecandidate'
        env: '.env.prod'
    - mobile-release-ios:
        build-directory: 'build-mobile-staging-releasecandidate'
        bundle-id: 'co.audius.audiusmusic.staging.releasecandidate'
        env: '.env.prod'

mobile-build-staging-android:
  working_directory: ~/audius-protocol
  resource_class: xlarge
  docker:
    - image: cimg/android:2023.08-node
  steps:
    - mobile-prepare-android:
        build-directory: 'build-mobile-staging'
    - mobile-build-android:
        build-directory: 'build-mobile-staging'
        build-type: 'bundleStagingRelease'
        bundle-id: 'co.audius.app.staging'
        track: 'internal'
        remote-directory: 'audius-mobile-staging'

mobile-build-upload-staging-android:
  working_directory: ~/audius-protocol
  resource_class: xlarge
  docker:
    - image: cimg/android:2023.08-node
  steps:
    - mobile-prepare-android:
        build-directory: 'build-mobile-staging'
    - mobile-release-android:
        build-directory: 'build-mobile-staging'
        upload-type: 'staging'
        track: 'internal'

mobile-build-upload-staging-releasecandidate-android:
  working_directory: ~/audius-protocol
  resource_class: xlarge
  docker:
    - image: cimg/android:2023.08-node
  steps:
    - mobile-prepare-android:
        build-directory: 'build-mobile-staging-releasecandidate'
    - mobile-release-android:
        build-directory: 'build-mobile-staging-releasecandidate'
        upload-type: 'stagingReleaseCandidate'
        track: 'internal'

mobile-build-upload-releasecandidate-android:
  working_directory: ~/audius-protocol
  resource_class: xlarge
  docker:
    - image: cimg/android:2023.08-node
  steps:
    - mobile-prepare-android:
        build-directory: 'build-mobile-releasecandidate'
    - mobile-release-android:
        build-directory: 'build-mobile-releasecandidate'
        upload-type: 'releaseCandidate'
        track: 'internal'

mobile-build-production-android:
  working_directory: ~/audius-protocol
  resource_class: xlarge
  docker:
    - image: cimg/android:2023.08-node
  steps:
    - mobile-prepare-android:
        build-directory: 'build-mobile-production'
    - mobile-build-android:
        build-directory: 'build-mobile-production'
        build-type: 'bundleRelease'
        bundle-id: 'co.audius.app'
        track: 'alpha'
        remote-directory: 'audius-mobile'

mobile-build-upload-production-android-if-full-release:
  working_directory: ~/audius-protocol
  resource_class: xlarge
  docker:
    - image: cimg/android:2023.08-node
  steps:
    - mobile-prepare-android:
        build-directory: 'build-mobile-production'
    - mobile-release-android:
        build-directory: 'build-mobile-production'
        upload-type: 'prod'
        track: 'alpha'
        slack-notify: false

mobile-deploy-saga-dapp-store:
  working_directory: ~/audius-protocol
  resource_class: xlarge
  docker:
    - image: cimg/android:2023.08-node
  steps:
    - mobile-prepare-android:
        build-directory: 'build-mobile-production'
    - mobile-release-saga-dapp-store:
        bundle-id: 'co.audius.app'
        track: 'alpha'
