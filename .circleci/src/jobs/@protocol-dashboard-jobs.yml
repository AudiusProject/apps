protocol-dashboard-init:
  working_directory: ~/apps
  docker:
    - image: cimg/node:18.17

  steps:
    - checkout
    - attach_workspace:
        at: ./

    - create_concatenated_patch_file:
        filename: combined-patch-file.txt

    # Download and cache dependencies
    - restore_cache:
        keys:
          - npm-cache-v1-{{ checksum "package-lock.json" }}-{{ checksum "combined-patch-file.txt" }}

    # Lint
    - run:
        name: lint
        command: |
          npx turbo run verify --filter=@audius/protocol-dashboard

    # Persist node modules
    - persist_to_workspace:
        root: ./
        paths:
          - node_modules
          - packages/protocol-dashboard/node_modules
          - packages/harmony/node_modules
          - packages/common/node_modules
          - packages/libs/node_modules
          - packages/sdk/node_modules

protocol-dashboard-build-staging:
  working_directory: ~/apps
  resource_class: xlarge
  docker:
    - image: cimg/node:18.17
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: build
        command: |
          cd packages/protocol-dashboard
          npm install dotenv@16.3.1
          npm run build:stage
    - persist_to_workspace:
        root: ./
        paths:
          - packages/protocol-dashboard/*

protocol-dashboard-deploy-staging:
  working_directory: ~/apps
  docker:
    - image: cimg/node:18.17
  steps:
    - attach_workspace:
        at: ./
    - run:
        name: deploy to staging
        command: |
          cd packages/protocol-dashboard
          npm run deploy:stage

protocol-dashboard-build-prod:
  working_directory: ~/apps
  resource_class: xlarge
  docker:
    - image: cimg/node:18.17
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: build
        command: |
          cd packages/protocol-dashboard
          npm install dotenv@16.3.1
          npm run build:prod
    - persist_to_workspace:
        root: ./
        paths:
          - packages/protocol-dashboard/*

protocol-dashboard-deploy-prod:
  working_directory: ~/apps
  docker:
    - image: cimg/node:18.17
  steps:
    - attach_workspace:
        at: ./
    - run:
        name: deploy to prod
        command: |
          cd packages/protocol-dashboard
          npm run deploy:prod
