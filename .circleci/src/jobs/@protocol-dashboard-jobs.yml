protocol-dashboard-init:
  working_directory: ~/audius-protocol
  docker:
    - image: cimg/node:18.17

  steps:
    - checkout
    - attach_workspace:
        at: ./

    - create_concatenated_patch_file:
        filename: combined-patch-file.txt

    # Download and cache dependencies
    - restore_cache:
        keys:
          - cache-{{ checksum "package-lock.json" }}-{{ checksum "combined-patch-file.txt" }}

    # Lint
    - run:
        name: lint
        command: |
          cd protocol-dashboard
          npx turbo run verify --filter=audius-protocol-dashboard

    # Persist node modules
    - persist_to_workspace:
        root: ./
        paths:
          - node_modules
          - packages/harmony/node_modules
          - packages/common/node_modules
          - packages/libs/node_modules

protocol-dashboard-build-staging:
  working_directory: ~/audius-protocol
  resource_class: xlarge
  docker:
    - image: cimg/node:18.17
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: build
        command: |
          cd protocol-dashboard
          npm install dotenv@16.3.1
          npm run build:stage
    - run:
        name: armada bundle
        command: |
          cd protocol-dashboard
          timestamp=$(date +%s)
          filename="$(npx armada-cli bundle create dist${timestamp} dist)"
          hash="$(npx armada-cli bundle checksum $filename)"
          echo "export FILENAME='$filename'" >> tmp.env
          echo "export HASH='$hash'" >> tmp.env
    - persist_to_workspace:
        root: ./
        paths:
          - protocol-dashboard/*

protocol-dashboard-pin-staging:
  working_directory: ~/audius-protocol
  docker:
    - image: circleci/python:2.7-jessie
  steps:
    - run:
        name: install-awscli
        command: sudo pip install awscli
    - attach_workspace:
        at: ./
    - run:
        name: deploy to s3
        command: |
          cd protocol-dashboard
          source tmp.env
          aws s3 cp ${FILENAME} s3://dashboard.staging.audius.org/${FILENAME} --cache-control max-age=0

protocol-dashboard-deploy-staging:
  working_directory: ~/audius-protocol
  docker:
    - image: cimg/ruby:2.6-node
  steps:
    - attach_workspace:
        at: ./
    - run:
        name: install deps
        command: sudo apt update && sudo apt install -y libsecret-1-0
    - run:
        name: armada publish
        command: |
          cd protocol-dashboard
          source tmp.env
          npx armada-cli project publish 0x3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc1 https://s3.us-west-1.amazonaws.com/dashboard.staging.audius.org/${FILENAME} ${HASH} --key=${ARMADA_ADMIN_PRIVATE_KEY}

protocol-dashboard-build-prod:
  working_directory: ~/audius-protocol
  docker:
    - image: cimg/node:18.17
  resource_class: xlarge
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: build
        command: |
          cd protocol-dashboard
          npm install dotenv@16.3.1
          npm run build:prod
    - run:
        name: zip dist
        command: |
          cd protocol-dashboard
          zip -r dist.zip ./dist
    - persist_to_workspace:
        root: ./
        paths:
          - protocol-dashboard/*

protocol-dashboard-deploy-prod:
  working_directory: ~/audius-protocol
  docker:
    - image: circleci/python:2.7-jessie
  steps:
    - run:
        name: install-awscli
        command: sudo pip install awscli
    - attach_workspace:
        at: ./
    - run:
        name: Deploy to S3
        command: |
          cd protocol-dashboard
          aws s3 sync dist s3://dashboard.audius.org --delete --cache-control max-age=604800
          aws s3 cp s3://dashboard.audius.org/index.html s3://dashboard.audius.org/index.html --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --metadata-directive REPLACE --acl public-read
          aws s3 cp dist.zip s3://dashboard.audius.org/dist.zip --cache-control max-age=0

protocol-dashboard-update-prod-build:
  working_directory: ~/audius-protocol
  docker:
    - image: cimg/ruby:2.6-node
  steps:
    - attach_workspace:
        at: ./
    - run:
        name: update pinata pin
        command: |
          cd protocol-dashboard
          npm run update-build:prod
    - persist_to_workspace:
        root: ./
        paths:
          - protocol-dashboard/build_cid.txt

protocol-dashboard-publish-prod-build-cids:
  working_directory: ~/audius-protocol
  docker:
    - image: circleci/python:2.7-jessie
  steps:
    - run:
        name: install-awscli
        command: sudo pip install awscli
    - attach_workspace:
        at: ./
    - run:
        name: Push to S3
        command: |
          cd protocol-dashboard
          aws s3 cp build_cid.txt s3://dashboard.audius.org/build_cid.txt

protocol-dashboard-update-prod-records:
  working_directory: ~/audius-protocol
  docker:
    - image: cimg/ruby:2.6-node
  steps:
    - attach_workspace:
        at: ./
    - run:
        name: Update Cloudflare records
        command: |
          cd protocol-dashboard
          DNS_NAME=_dnslink.dashboard.audius.org
          CID=$(cat ./build_cid.txt)
          curl -X PUT "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE}/dns_records/${CLOUDFLARE_PROD_DASHBOARD_DNS_ID}" \
            -H "X-Auth-Email: ${CLOUDFLARE_AUTH_EMAIL}" \
            -H "Authorization: Bearer ${CLOUDFLARE_AUTH_KEY}" \
            -H "Content-Type: application/json" \
            --data '{"type":"TXT","name":"'"$DNS_NAME"'","content":"\"dnslink=/ipfs/'"$CID"'\"","ttl":1,"proxied":false}'
