resource_class: small
docker:
  - image: cimg/base:2023.01
steps:
  - gh/setup:
      version: 2.23.0
  - add_ssh_keys:
      fingerprints:
        - 'd0:0b:a0:19:ac:46:58:e4:6c:ac:34:99:f6:1b:31:bb' # github.com
  - run:
      name: Add github.com to known_hosts
      command: |
        echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' >> ~/.ssh/known_hosts
  - run:
      name: Set git config
      command: |
        git config --global user.email "audius-infra@audius.co"
        git config --global user.name "audius-infra"
  - run:
      name: Set tag in audius-docker-compose and alert Slack of changelog
      command: |
        generate_json_content() {
          GIT_DIFF="$1"
          # Ensure GIT_DIFF ends with the delimiter so the final commit is included
          if [ ! -z "$GIT_DIFF" ] && [ "${GIT_DIFF: -7}" != "=DELIM@" ]; then
              GIT_DIFF="${GIT_DIFF}=DELIM@"
          fi

          json_content=""
          max_lines=8
          line_count=0
          block_content=""
          buffer=""
          IFS="@"

          # Slack has a limit of 3000 characters per block, so we need to split the diff into multiple blocks
          read -ra ADDR \<<< "$GIT_DIFF"
          for line in "${ADDR[@]}"; do
            line="${buffer}${line}"

            if [ "${line: -6}" = "=DELIM" ]; then
              line="${line%=DELIM}"
              buffer=""

              author_name=$(echo "$line" | awk -F ' - ' '{print $1}')
              env_key_name="SLACK_ID_FOR_GH_$(echo $author_name | tr ' ' '_' | tr '-' '_' | tr '[:upper:]' '[:lower:]')"
              env_var_value=$(eval echo \$$env_key_name)
              if [ ! -z "$env_var_value" ]; then
                line=$(echo "$line" | sed "s/$author_name/<@$env_var_value>/")
              fi

              block_content+="â€¢ $line\n"
              line_count=$((line_count+1))

              if (( line_count == max_lines )); then
                json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"${block_content}\" } },"
                line_count=0
                block_content=""
              fi
            else
              buffer+="${line}@"
            fi
          done

          if (( line_count > 0 )); then
            json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"${block_content}\" } },"
          fi

          echo "$json_content"
        }

        handle_error() {
          failure_content="{ \"blocks\": ["
          failure_content+="{ \"type\": \"section\", \"text\": { \"type\": \"plain_text\", \"text\": \"Failed to generate changelog for today's release. Please check the release branch in CircleCI.\n\" } }"
          failure_content+="]}"
          echo "Sending error message to Slack: $failure_content"
          
          curl -f -X POST -H 'Content-type: application/json' \
            --data "$failure_content" \
            $SLACK_DAILY_DEPLOY_WEBHOOK
        }

        (
          set -e

          git clone --branch $CIRCLE_BRANCH https://github.com/AudiusProject/audius-protocol.git audius-protocol
          cd audius-protocol
          git checkout $CIRCLE_BRANCH

          VERSION_REGEX="release-v(.+)"
          if [[ $CIRCLE_BRANCH =~ $VERSION_REGEX ]]; then
              NEW_VERSION=${BASH_REMATCH[1]}
          else
              echo "No version found in branch name"
              exit 1
          fi
          OLD_VERSION=$(echo ${NEW_VERSION} | awk -F. '{$NF = $NF - 1;} 1' | sed 's/ /./g')

          # Generate diff for audius-protocol repo commits from last release to HEAD (we're on the new release branch thanks to the checkout step)
          GIT_DIFF=$(git log --pretty=format:'%an - %s [<https://github.com/AudiusProject/audius-protocol/commit/%H|%h>]' --abbrev-commit origin/release-v$OLD_VERSION..HEAD -- mediorum packages/discovery-provider packages/identity-service packages/ddex* comms monitoring/healthz monitoring/uptime protocol-dashboard | sed 's/"/\\"/g' | tr -d '\r' | sed ':a;N;$!ba;s/\n/=DELIM@/g')
          json_content="{ \"blocks\": ["
          json_content+="{ \"type\": \"header\", \"text\": { \"type\": \"plain_text\", \"text\": \"New Protocol Release (v$NEW_VERSION)\n\" } },"
          audius_protocol_commit_blocks=$(generate_json_content "$GIT_DIFF")
          if [ -z "$audius_protocol_commit_blocks" ]; then
            json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"No new audius-protocol commits.\n\" } },"
          else
            json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"Commits in audius-protocol:\n\" } },"
            json_content+="$audius_protocol_commit_blocks"
          fi


          # Update tags in audius-docker-compose stage branch
          cd ..
          git clone --branch stage https://github.com/AudiusProject/audius-docker-compose.git audius-docker-compose
          cd audius-docker-compose
          last_release_commit=$(git log --format=format:%H --grep='^release-v.*auto-deploy$' -1)
          sed -i "s/\({TAG:-\)[^}]*\}/\1$CIRCLE_SHA1}/" creator-node/docker-compose*.yml
          sed -i "s/\({TAG:-\)[^}]*\}/\1$CIRCLE_SHA1}/" discovery-provider/docker-compose*.yml
          sed -i "s/\({TAG:-\)[^}]*\}/\1$CIRCLE_SHA1}/" identity-service/docker-compose*.yml
          sed -i "s/\({TAG:-\)[^}]*\}/\1$CIRCLE_SHA1}/" ddex/docker-compose*.yml
          git add */docker-compose*.yml
          git commit -m "$CIRCLE_BRANCH auto-deploy"
          git push origin stage

          # Generate git diff for audius-docker-compose commits from last "release-vX.Y.Z auto-deploy" commit to HEAD
          GIT_DIFF=$(git log --pretty=format:'%an - %s [<https://github.com/AudiusProject/audius-docker-compose/commit/%H|%h>]' --abbrev-commit $last_release_commit..HEAD | grep -v '^audius-infra - Update tag to' | sed 's/"/\\"/g' | tr -d '\r' | sed ':a;N;$!ba;s/\n/=DELIM@/g')
          most_recent_commit=$(git rev-parse --verify HEAD)
          audius_docker_compose_commit_blocks=$(generate_json_content "$GIT_DIFF")
          if [ -z "$audius_docker_compose_commit_blocks" ]; then
            json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"No new audius-docker-compose commits.\n\" } },"
          else
            json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"Commits in audius-docker-compose:\n\" } },"
            json_content+="$audius_docker_compose_commit_blocks"
          fi

          json_content+="{ \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"At 11am PST, I'll set the audius-docker-compose \`foundation\` branch to the <https://github.com/AudiusProject/audius-docker-compose/commit/$most_recent_commit|$CIRCLE_BRANCH commit>. See <https://www.notion.so/audiusproject/Protocol-Services-Deployment-Guide-708a8f64881740219d3f77707e73a097|here> for details.\n\" } }"
          json_content+="]}"

          # Send Slack daily deploy message
          echo "Sending message to Slack: $json_content"
          curl -f -X POST -H 'Content-type: application/json' \
            --data "$json_content" \
            $SLACK_DAILY_DEPLOY_WEBHOOK
        ) || handle_error
