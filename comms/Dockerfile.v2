FROM golang:alpine AS builder

RUN apk add build-base make ffmpeg
RUN export GO111MODULE=on && \
  go install github.com/nats-io/nats-server/v2@latest && \
  go install github.com/nats-io/natscli/nats@latest && \
  go install github.com/nats-io/nkeys/nk@latest && \
  go install github.com/nats-io/nsc/v2@latest && \
  go install github.com/cosmtrek/air@latest

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod graph | awk '{if ($1 !~ "@") print $2}' | xargs go get

COPY . .
RUN make build.alpine

RUN apk add curl && cd /tmp && \
  curl -fsSL -o /usr/local/bin/dbmate https://github.com/amacneil/dbmate/releases/latest/download/dbmate-linux-amd64 && \
  chmod +x /usr/local/bin/dbmate

EXPOSE 4222
# Cluster name is comms, so empty dir means nats will try (and fail) to store files at comms, which is a binary
# TODO: Just use envconfig for NATS_STORE_DIR and set its default to nats_store so we don't do env here
ENV NATS_STORE_DIR="nats_store"
VOLUME ["/tmp"]
ENTRYPOINT ["air"]

FROM alpine AS final

RUN apk add curl ffmpeg && cd /tmp && \
  curl -fsSL -o /usr/local/bin/dbmate https://github.com/amacneil/dbmate/releases/latest/download/dbmate-linux-amd64 && \
  chmod +x /usr/local/bin/dbmate

COPY --from=builder /go/bin/* /bin
COPY --from=builder /app/comms /bin/comms

VOLUME ["/tmp"]
ENTRYPOINT ["comms"]
