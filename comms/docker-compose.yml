version: '3'

services:
  autoheal:
    image: willfarrell/autoheal:latest
    tty: true
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Storage Nodes

  nats-storage:
    build:
      context: .
      target: builder
    command: sh -c ". /tmp/dev-tools/startup/comms.sh && air nats"
    env_file: ../.env # used by the startup script
    volumes:
      - ./natsd:/app/natsd
      - ./shared:/app/shared
      - ../dev-tools:/tmp/dev-tools
    healthcheck:
      # TODO: make this a single node healthcheck
      # does the cluster have at least 7 nodes peered (4 storage, 3 discovery)?
      test: wget -qO- http://localhost:8924/nats/jsz | grep -o '"cluster_size":[[:space:]]*[0-9]*' | awk '{if ($$2 < 7) {exit 1}}'
      interval: 5s
      retries: 15
      start_period: 10s
      timeout: 1s
    deploy:
      mode: replicated
      replicas: 4

  storage:
    build:
      context: .
      target: builder
    command: sh -c ". /tmp/dev-tools/startup/comms.sh && air storage"
    env_file: ../.env # used by the startup script
    volumes:
      - ./storage:/app/storage
      - ./shared:/app/shared
      - /app/storage/storageserver/weather-map # exclude weather-map and its heavy node_modules
      - ./storage/storageserver/weather-map/dist:/app/storage/storageserver/weather-map/dist
      - ../dev-tools:/tmp/dev-tools
    depends_on:
      nats-storage:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8926/storage || exit 1
      interval: 3s
      retries: 10
      start_period: 20s
      timeout: 1s
    deploy:
      mode: replicated
      replicas: 4

  storage-ingress:
    image: nginx:1.23.3-alpine
    command: sh /tmp/dev-tools/startup/comms-ingress.sh
    env_file: ../.env # used by the startup script
    volumes:
      - ../dev-tools:/tmp/dev-tools
    deploy:
      mode: replicated
      replicas: 4

  # Discovery Nodes

  comms-db:
    image: postgres:13.6
    ports:
      - 5454:5432
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./discovery/db/docker-initdb:/docker-entrypoint-initdb.d

  nats-discovery:
    build:
      context: .
      target: builder
    command: sh -c ". /tmp/dev-tools/startup/comms.sh && air nats"
    env_file: ../.env # used by the startup script
    volumes:
      - ./natsd:/app/natsd
      - ./shared:/app/shared
      - ../dev-tools:/tmp/dev-tools
    healthcheck:
      # TODO: make this a single node healthcheck
      # does the cluster have at least 7 nodes peered (4 storage, 3 discovery)?
      test: wget -qO- http://localhost:8924/nats/jsz | grep -o '"cluster_size":[[:space:]]*[0-9]*' | awk '{if ($$2 < 7) {exit 1}}'
      interval: 5s
      retries: 15
      start_period: 10s
      timeout: 1s
    depends_on:
      comms-db:
        condition: service_started
    deploy:
      mode: replicated
      replicas: 3

  discovery:
    build:
      context: .
      target: builder
    command: sh -c ". /tmp/dev-tools/startup/comms.sh && air discovery"
    environment:
      audius_db_url: "postgresql://postgres:postgres@comms-db:5432/com1?sslmode=disable"
    env_file: ../.env # used by the startup script
    volumes:
      - ./discovery:/app/discovery
      - ./shared:/app/shared
      - ../dev-tools:/tmp/dev-tools
    depends_on:
      nats-discovery:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 3

  discovery-ingress:
    image: nginx:1.23.3-alpine
    command: sh /tmp/dev-tools/startup/comms-ingress.sh
    env_file: ../.env # used by the startup script
    volumes:
      - ../dev-tools:/tmp/dev-tools
    deploy:
      mode: replicated
      replicas: 3

  # tests

  test:
    build:
      context: .
      target: builder
    command: sh -c ". /tmp/dev-tools/startup/comms.sh && air -c .air.test.toml"
    env_file: ../.env # used by the startup script
    environment:
      audius_db_url: "postgresql://postgres:postgres@comms-db:5432/audius_discovery?sslmode=disable"
    volumes:
      - ./:/app
      - ../dev-tools:/tmp/dev-tools
    depends_on:
      comms-db:
        condition: service_started
      storage:
        condition: service_healthy
      nats-storage:
        condition: service_healthy
      nats-discovery:
        condition: service_healthy
