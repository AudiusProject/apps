/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the BulkSubscribersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkSubscribersResponse{}

// BulkSubscribersResponse struct for BulkSubscribersResponse
type BulkSubscribersResponse struct {
	Data []UserSubscribers `json:"data,omitempty"`
}

// NewBulkSubscribersResponse instantiates a new BulkSubscribersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkSubscribersResponse() *BulkSubscribersResponse {
	this := BulkSubscribersResponse{}
	return &this
}

// NewBulkSubscribersResponseWithDefaults instantiates a new BulkSubscribersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkSubscribersResponseWithDefaults() *BulkSubscribersResponse {
	this := BulkSubscribersResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BulkSubscribersResponse) GetData() []UserSubscribers {
	if o == nil || IsNil(o.Data) {
		var ret []UserSubscribers
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSubscribersResponse) GetDataOk() ([]UserSubscribers, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BulkSubscribersResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []UserSubscribers and assigns it to the Data field.
func (o *BulkSubscribersResponse) SetData(v []UserSubscribers) {
	o.Data = v
}

func (o BulkSubscribersResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkSubscribersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableBulkSubscribersResponse struct {
	value *BulkSubscribersResponse
	isSet bool
}

func (v NullableBulkSubscribersResponse) Get() *BulkSubscribersResponse {
	return v.value
}

func (v *NullableBulkSubscribersResponse) Set(val *BulkSubscribersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkSubscribersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkSubscribersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkSubscribersResponse(val *BulkSubscribersResponse) *NullableBulkSubscribersResponse {
	return &NullableBulkSubscribersResponse{value: val, isSet: true}
}

func (v NullableBulkSubscribersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkSubscribersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


