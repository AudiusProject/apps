/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the ConnectedWallets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectedWallets{}

// ConnectedWallets struct for ConnectedWallets
type ConnectedWallets struct {
	ErcWallets []string `json:"erc_wallets"`
	SplWallets []string `json:"spl_wallets"`
}

// NewConnectedWallets instantiates a new ConnectedWallets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectedWallets(ercWallets []string, splWallets []string) *ConnectedWallets {
	this := ConnectedWallets{}
	this.ErcWallets = ercWallets
	this.SplWallets = splWallets
	return &this
}

// NewConnectedWalletsWithDefaults instantiates a new ConnectedWallets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectedWalletsWithDefaults() *ConnectedWallets {
	this := ConnectedWallets{}
	return &this
}

// GetErcWallets returns the ErcWallets field value
func (o *ConnectedWallets) GetErcWallets() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ErcWallets
}

// GetErcWalletsOk returns a tuple with the ErcWallets field value
// and a boolean to check if the value has been set.
func (o *ConnectedWallets) GetErcWalletsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErcWallets, true
}

// SetErcWallets sets field value
func (o *ConnectedWallets) SetErcWallets(v []string) {
	o.ErcWallets = v
}

// GetSplWallets returns the SplWallets field value
func (o *ConnectedWallets) GetSplWallets() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SplWallets
}

// GetSplWalletsOk returns a tuple with the SplWallets field value
// and a boolean to check if the value has been set.
func (o *ConnectedWallets) GetSplWalletsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SplWallets, true
}

// SetSplWallets sets field value
func (o *ConnectedWallets) SetSplWallets(v []string) {
	o.SplWallets = v
}

func (o ConnectedWallets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectedWallets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["erc_wallets"] = o.ErcWallets
	toSerialize["spl_wallets"] = o.SplWallets
	return toSerialize, nil
}

type NullableConnectedWallets struct {
	value *ConnectedWallets
	isSet bool
}

func (v NullableConnectedWallets) Get() *ConnectedWallets {
	return v.value
}

func (v *NullableConnectedWallets) Set(val *ConnectedWallets) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectedWallets) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectedWallets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectedWallets(val *ConnectedWallets) *NullableConnectedWallets {
	return &NullableConnectedWallets{value: val, isSet: true}
}

func (v NullableConnectedWallets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectedWallets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


