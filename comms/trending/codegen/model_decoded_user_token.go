/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the DecodedUserToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DecodedUserToken{}

// DecodedUserToken struct for DecodedUserToken
type DecodedUserToken struct {
	UserId string `json:"userId"`
	Email string `json:"email"`
	Name string `json:"name"`
	Handle string `json:"handle"`
	Verified bool `json:"verified"`
	ProfilePicture *ProfilePicture `json:"profilePicture,omitempty"`
	Sub string `json:"sub"`
	Iat string `json:"iat"`
}

// NewDecodedUserToken instantiates a new DecodedUserToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecodedUserToken(userId string, email string, name string, handle string, verified bool, sub string, iat string) *DecodedUserToken {
	this := DecodedUserToken{}
	this.UserId = userId
	this.Email = email
	this.Name = name
	this.Handle = handle
	this.Verified = verified
	this.Sub = sub
	this.Iat = iat
	return &this
}

// NewDecodedUserTokenWithDefaults instantiates a new DecodedUserToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecodedUserTokenWithDefaults() *DecodedUserToken {
	this := DecodedUserToken{}
	return &this
}

// GetUserId returns the UserId field value
func (o *DecodedUserToken) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *DecodedUserToken) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *DecodedUserToken) SetUserId(v string) {
	o.UserId = v
}

// GetEmail returns the Email field value
func (o *DecodedUserToken) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *DecodedUserToken) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *DecodedUserToken) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value
func (o *DecodedUserToken) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DecodedUserToken) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DecodedUserToken) SetName(v string) {
	o.Name = v
}

// GetHandle returns the Handle field value
func (o *DecodedUserToken) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *DecodedUserToken) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *DecodedUserToken) SetHandle(v string) {
	o.Handle = v
}

// GetVerified returns the Verified field value
func (o *DecodedUserToken) GetVerified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value
// and a boolean to check if the value has been set.
func (o *DecodedUserToken) GetVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verified, true
}

// SetVerified sets field value
func (o *DecodedUserToken) SetVerified(v bool) {
	o.Verified = v
}

// GetProfilePicture returns the ProfilePicture field value if set, zero value otherwise.
func (o *DecodedUserToken) GetProfilePicture() ProfilePicture {
	if o == nil || IsNil(o.ProfilePicture) {
		var ret ProfilePicture
		return ret
	}
	return *o.ProfilePicture
}

// GetProfilePictureOk returns a tuple with the ProfilePicture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecodedUserToken) GetProfilePictureOk() (*ProfilePicture, bool) {
	if o == nil || IsNil(o.ProfilePicture) {
		return nil, false
	}
	return o.ProfilePicture, true
}

// HasProfilePicture returns a boolean if a field has been set.
func (o *DecodedUserToken) HasProfilePicture() bool {
	if o != nil && !IsNil(o.ProfilePicture) {
		return true
	}

	return false
}

// SetProfilePicture gets a reference to the given ProfilePicture and assigns it to the ProfilePicture field.
func (o *DecodedUserToken) SetProfilePicture(v ProfilePicture) {
	o.ProfilePicture = &v
}

// GetSub returns the Sub field value
func (o *DecodedUserToken) GetSub() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sub
}

// GetSubOk returns a tuple with the Sub field value
// and a boolean to check if the value has been set.
func (o *DecodedUserToken) GetSubOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sub, true
}

// SetSub sets field value
func (o *DecodedUserToken) SetSub(v string) {
	o.Sub = v
}

// GetIat returns the Iat field value
func (o *DecodedUserToken) GetIat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Iat
}

// GetIatOk returns a tuple with the Iat field value
// and a boolean to check if the value has been set.
func (o *DecodedUserToken) GetIatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Iat, true
}

// SetIat sets field value
func (o *DecodedUserToken) SetIat(v string) {
	o.Iat = v
}

func (o DecodedUserToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DecodedUserToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	toSerialize["email"] = o.Email
	toSerialize["name"] = o.Name
	toSerialize["handle"] = o.Handle
	toSerialize["verified"] = o.Verified
	if !IsNil(o.ProfilePicture) {
		toSerialize["profilePicture"] = o.ProfilePicture
	}
	toSerialize["sub"] = o.Sub
	toSerialize["iat"] = o.Iat
	return toSerialize, nil
}

type NullableDecodedUserToken struct {
	value *DecodedUserToken
	isSet bool
}

func (v NullableDecodedUserToken) Get() *DecodedUserToken {
	return v.value
}

func (v *NullableDecodedUserToken) Set(val *DecodedUserToken) {
	v.value = val
	v.isSet = true
}

func (v NullableDecodedUserToken) IsSet() bool {
	return v.isSet
}

func (v *NullableDecodedUserToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecodedUserToken(val *DecodedUserToken) *NullableDecodedUserToken {
	return &NullableDecodedUserToken{value: val, isSet: true}
}

func (v NullableDecodedUserToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecodedUserToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


