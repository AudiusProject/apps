/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the GetSupporter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSupporter{}

// GetSupporter struct for GetSupporter
type GetSupporter struct {
	Data *Supporter `json:"data,omitempty"`
}

// NewGetSupporter instantiates a new GetSupporter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSupporter() *GetSupporter {
	this := GetSupporter{}
	return &this
}

// NewGetSupporterWithDefaults instantiates a new GetSupporter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSupporterWithDefaults() *GetSupporter {
	this := GetSupporter{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetSupporter) GetData() Supporter {
	if o == nil || IsNil(o.Data) {
		var ret Supporter
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSupporter) GetDataOk() (*Supporter, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetSupporter) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given Supporter and assigns it to the Data field.
func (o *GetSupporter) SetData(v Supporter) {
	o.Data = &v
}

func (o GetSupporter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSupporter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGetSupporter struct {
	value *GetSupporter
	isSet bool
}

func (v NullableGetSupporter) Get() *GetSupporter {
	return v.value
}

func (v *NullableGetSupporter) Set(val *GetSupporter) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSupporter) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSupporter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSupporter(val *GetSupporter) *NullableGetSupporter {
	return &NullableGetSupporter{value: val, isSet: true}
}

func (v NullableGetSupporter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSupporter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


