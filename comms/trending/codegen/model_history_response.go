/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the HistoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HistoryResponse{}

// HistoryResponse struct for HistoryResponse
type HistoryResponse struct {
	LatestChainBlock int32 `json:"latest_chain_block"`
	LatestIndexedBlock int32 `json:"latest_indexed_block"`
	LatestChainSlotPlays int32 `json:"latest_chain_slot_plays"`
	LatestIndexedSlotPlays int32 `json:"latest_indexed_slot_plays"`
	Signature string `json:"signature"`
	Timestamp string `json:"timestamp"`
	Version VersionMetadata `json:"version"`
	Data []Activity `json:"data,omitempty"`
}

// NewHistoryResponse instantiates a new HistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoryResponse(latestChainBlock int32, latestIndexedBlock int32, latestChainSlotPlays int32, latestIndexedSlotPlays int32, signature string, timestamp string, version VersionMetadata) *HistoryResponse {
	this := HistoryResponse{}
	this.LatestChainBlock = latestChainBlock
	this.LatestIndexedBlock = latestIndexedBlock
	this.LatestChainSlotPlays = latestChainSlotPlays
	this.LatestIndexedSlotPlays = latestIndexedSlotPlays
	this.Signature = signature
	this.Timestamp = timestamp
	this.Version = version
	return &this
}

// NewHistoryResponseWithDefaults instantiates a new HistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoryResponseWithDefaults() *HistoryResponse {
	this := HistoryResponse{}
	return &this
}

// GetLatestChainBlock returns the LatestChainBlock field value
func (o *HistoryResponse) GetLatestChainBlock() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LatestChainBlock
}

// GetLatestChainBlockOk returns a tuple with the LatestChainBlock field value
// and a boolean to check if the value has been set.
func (o *HistoryResponse) GetLatestChainBlockOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestChainBlock, true
}

// SetLatestChainBlock sets field value
func (o *HistoryResponse) SetLatestChainBlock(v int32) {
	o.LatestChainBlock = v
}

// GetLatestIndexedBlock returns the LatestIndexedBlock field value
func (o *HistoryResponse) GetLatestIndexedBlock() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LatestIndexedBlock
}

// GetLatestIndexedBlockOk returns a tuple with the LatestIndexedBlock field value
// and a boolean to check if the value has been set.
func (o *HistoryResponse) GetLatestIndexedBlockOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestIndexedBlock, true
}

// SetLatestIndexedBlock sets field value
func (o *HistoryResponse) SetLatestIndexedBlock(v int32) {
	o.LatestIndexedBlock = v
}

// GetLatestChainSlotPlays returns the LatestChainSlotPlays field value
func (o *HistoryResponse) GetLatestChainSlotPlays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LatestChainSlotPlays
}

// GetLatestChainSlotPlaysOk returns a tuple with the LatestChainSlotPlays field value
// and a boolean to check if the value has been set.
func (o *HistoryResponse) GetLatestChainSlotPlaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestChainSlotPlays, true
}

// SetLatestChainSlotPlays sets field value
func (o *HistoryResponse) SetLatestChainSlotPlays(v int32) {
	o.LatestChainSlotPlays = v
}

// GetLatestIndexedSlotPlays returns the LatestIndexedSlotPlays field value
func (o *HistoryResponse) GetLatestIndexedSlotPlays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LatestIndexedSlotPlays
}

// GetLatestIndexedSlotPlaysOk returns a tuple with the LatestIndexedSlotPlays field value
// and a boolean to check if the value has been set.
func (o *HistoryResponse) GetLatestIndexedSlotPlaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestIndexedSlotPlays, true
}

// SetLatestIndexedSlotPlays sets field value
func (o *HistoryResponse) SetLatestIndexedSlotPlays(v int32) {
	o.LatestIndexedSlotPlays = v
}

// GetSignature returns the Signature field value
func (o *HistoryResponse) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *HistoryResponse) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *HistoryResponse) SetSignature(v string) {
	o.Signature = v
}

// GetTimestamp returns the Timestamp field value
func (o *HistoryResponse) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *HistoryResponse) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *HistoryResponse) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetVersion returns the Version field value
func (o *HistoryResponse) GetVersion() VersionMetadata {
	if o == nil {
		var ret VersionMetadata
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *HistoryResponse) GetVersionOk() (*VersionMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *HistoryResponse) SetVersion(v VersionMetadata) {
	o.Version = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *HistoryResponse) GetData() []Activity {
	if o == nil || IsNil(o.Data) {
		var ret []Activity
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryResponse) GetDataOk() ([]Activity, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *HistoryResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Activity and assigns it to the Data field.
func (o *HistoryResponse) SetData(v []Activity) {
	o.Data = v
}

func (o HistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HistoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["latest_chain_block"] = o.LatestChainBlock
	toSerialize["latest_indexed_block"] = o.LatestIndexedBlock
	toSerialize["latest_chain_slot_plays"] = o.LatestChainSlotPlays
	toSerialize["latest_indexed_slot_plays"] = o.LatestIndexedSlotPlays
	toSerialize["signature"] = o.Signature
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["version"] = o.Version
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableHistoryResponse struct {
	value *HistoryResponse
	isSet bool
}

func (v NullableHistoryResponse) Get() *HistoryResponse {
	return v.value
}

func (v *NullableHistoryResponse) Set(val *HistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoryResponse(val *HistoryResponse) *NullableHistoryResponse {
	return &NullableHistoryResponse{value: val, isSet: true}
}

func (v NullableHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


