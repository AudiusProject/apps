/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the Supporter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Supporter{}

// Supporter struct for Supporter
type Supporter struct {
	Rank int32 `json:"rank"`
	Amount string `json:"amount"`
	Sender User `json:"sender"`
}

// NewSupporter instantiates a new Supporter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupporter(rank int32, amount string, sender User) *Supporter {
	this := Supporter{}
	this.Rank = rank
	this.Amount = amount
	this.Sender = sender
	return &this
}

// NewSupporterWithDefaults instantiates a new Supporter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupporterWithDefaults() *Supporter {
	this := Supporter{}
	return &this
}

// GetRank returns the Rank field value
func (o *Supporter) GetRank() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Rank
}

// GetRankOk returns a tuple with the Rank field value
// and a boolean to check if the value has been set.
func (o *Supporter) GetRankOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rank, true
}

// SetRank sets field value
func (o *Supporter) SetRank(v int32) {
	o.Rank = v
}

// GetAmount returns the Amount field value
func (o *Supporter) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *Supporter) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *Supporter) SetAmount(v string) {
	o.Amount = v
}

// GetSender returns the Sender field value
func (o *Supporter) GetSender() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *Supporter) GetSenderOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *Supporter) SetSender(v User) {
	o.Sender = v
}

func (o Supporter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Supporter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rank"] = o.Rank
	toSerialize["amount"] = o.Amount
	toSerialize["sender"] = o.Sender
	return toSerialize, nil
}

type NullableSupporter struct {
	value *Supporter
	isSet bool
}

func (v NullableSupporter) Get() *Supporter {
	return v.value
}

func (v *NullableSupporter) Set(val *Supporter) {
	v.value = val
	v.isSet = true
}

func (v NullableSupporter) IsSet() bool {
	return v.isSet
}

func (v *NullableSupporter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupporter(val *Supporter) *NullableSupporter {
	return &NullableSupporter{value: val, isSet: true}
}

func (v NullableSupporter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupporter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


