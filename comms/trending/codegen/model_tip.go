/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the Tip type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Tip{}

// Tip struct for Tip
type Tip struct {
	Amount string `json:"amount"`
	Sender *User `json:"sender,omitempty"`
	Receiver *User `json:"receiver,omitempty"`
	CreatedAt string `json:"created_at"`
}

// NewTip instantiates a new Tip object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTip(amount string, createdAt string) *Tip {
	this := Tip{}
	this.Amount = amount
	this.CreatedAt = createdAt
	return &this
}

// NewTipWithDefaults instantiates a new Tip object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTipWithDefaults() *Tip {
	this := Tip{}
	return &this
}

// GetAmount returns the Amount field value
func (o *Tip) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *Tip) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *Tip) SetAmount(v string) {
	o.Amount = v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *Tip) GetSender() User {
	if o == nil || IsNil(o.Sender) {
		var ret User
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tip) GetSenderOk() (*User, bool) {
	if o == nil || IsNil(o.Sender) {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *Tip) HasSender() bool {
	if o != nil && !IsNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given User and assigns it to the Sender field.
func (o *Tip) SetSender(v User) {
	o.Sender = &v
}

// GetReceiver returns the Receiver field value if set, zero value otherwise.
func (o *Tip) GetReceiver() User {
	if o == nil || IsNil(o.Receiver) {
		var ret User
		return ret
	}
	return *o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tip) GetReceiverOk() (*User, bool) {
	if o == nil || IsNil(o.Receiver) {
		return nil, false
	}
	return o.Receiver, true
}

// HasReceiver returns a boolean if a field has been set.
func (o *Tip) HasReceiver() bool {
	if o != nil && !IsNil(o.Receiver) {
		return true
	}

	return false
}

// SetReceiver gets a reference to the given User and assigns it to the Receiver field.
func (o *Tip) SetReceiver(v User) {
	o.Receiver = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Tip) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Tip) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Tip) SetCreatedAt(v string) {
	o.CreatedAt = v
}

func (o Tip) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Tip) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}
	if !IsNil(o.Receiver) {
		toSerialize["receiver"] = o.Receiver
	}
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

type NullableTip struct {
	value *Tip
	isSet bool
}

func (v NullableTip) Get() *Tip {
	return v.value
}

func (v *NullableTip) Set(val *Tip) {
	v.value = val
	v.isSet = true
}

func (v NullableTip) IsSet() bool {
	return v.isSet
}

func (v *NullableTip) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTip(val *Tip) *NullableTip {
	return &NullableTip{value: val, isSet: true}
}

func (v NullableTip) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTip) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


