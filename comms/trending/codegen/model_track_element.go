/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the TrackElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackElement{}

// TrackElement struct for TrackElement
type TrackElement struct {
	ParentTrackId string `json:"parent_track_id"`
}

// NewTrackElement instantiates a new TrackElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackElement(parentTrackId string) *TrackElement {
	this := TrackElement{}
	this.ParentTrackId = parentTrackId
	return &this
}

// NewTrackElementWithDefaults instantiates a new TrackElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackElementWithDefaults() *TrackElement {
	this := TrackElement{}
	return &this
}

// GetParentTrackId returns the ParentTrackId field value
func (o *TrackElement) GetParentTrackId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentTrackId
}

// GetParentTrackIdOk returns a tuple with the ParentTrackId field value
// and a boolean to check if the value has been set.
func (o *TrackElement) GetParentTrackIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentTrackId, true
}

// SetParentTrackId sets field value
func (o *TrackElement) SetParentTrackId(v string) {
	o.ParentTrackId = v
}

func (o TrackElement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["parent_track_id"] = o.ParentTrackId
	return toSerialize, nil
}

type NullableTrackElement struct {
	value *TrackElement
	isSet bool
}

func (v NullableTrackElement) Get() *TrackElement {
	return v.value
}

func (v *NullableTrackElement) Set(val *TrackElement) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackElement) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackElement(val *TrackElement) *NullableTrackElement {
	return &NullableTrackElement{value: val, isSet: true}
}

func (v NullableTrackElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


