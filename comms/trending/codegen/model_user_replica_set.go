/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the UserReplicaSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserReplicaSet{}

// UserReplicaSet struct for UserReplicaSet
type UserReplicaSet struct {
	UserId int32 `json:"user_id"`
	Wallet string `json:"wallet"`
	Primary *string `json:"primary,omitempty"`
	Secondary1 *string `json:"secondary1,omitempty"`
	Secondary2 *string `json:"secondary2,omitempty"`
	PrimarySpID *int32 `json:"primarySpID,omitempty"`
	Secondary1SpID *int32 `json:"secondary1SpID,omitempty"`
	Secondary2SpID *int32 `json:"secondary2SpID,omitempty"`
}

// NewUserReplicaSet instantiates a new UserReplicaSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserReplicaSet(userId int32, wallet string) *UserReplicaSet {
	this := UserReplicaSet{}
	this.UserId = userId
	this.Wallet = wallet
	return &this
}

// NewUserReplicaSetWithDefaults instantiates a new UserReplicaSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserReplicaSetWithDefaults() *UserReplicaSet {
	this := UserReplicaSet{}
	return &this
}

// GetUserId returns the UserId field value
func (o *UserReplicaSet) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *UserReplicaSet) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *UserReplicaSet) SetUserId(v int32) {
	o.UserId = v
}

// GetWallet returns the Wallet field value
func (o *UserReplicaSet) GetWallet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Wallet
}

// GetWalletOk returns a tuple with the Wallet field value
// and a boolean to check if the value has been set.
func (o *UserReplicaSet) GetWalletOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Wallet, true
}

// SetWallet sets field value
func (o *UserReplicaSet) SetWallet(v string) {
	o.Wallet = v
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *UserReplicaSet) GetPrimary() string {
	if o == nil || IsNil(o.Primary) {
		var ret string
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserReplicaSet) GetPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.Primary) {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *UserReplicaSet) HasPrimary() bool {
	if o != nil && !IsNil(o.Primary) {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given string and assigns it to the Primary field.
func (o *UserReplicaSet) SetPrimary(v string) {
	o.Primary = &v
}

// GetSecondary1 returns the Secondary1 field value if set, zero value otherwise.
func (o *UserReplicaSet) GetSecondary1() string {
	if o == nil || IsNil(o.Secondary1) {
		var ret string
		return ret
	}
	return *o.Secondary1
}

// GetSecondary1Ok returns a tuple with the Secondary1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserReplicaSet) GetSecondary1Ok() (*string, bool) {
	if o == nil || IsNil(o.Secondary1) {
		return nil, false
	}
	return o.Secondary1, true
}

// HasSecondary1 returns a boolean if a field has been set.
func (o *UserReplicaSet) HasSecondary1() bool {
	if o != nil && !IsNil(o.Secondary1) {
		return true
	}

	return false
}

// SetSecondary1 gets a reference to the given string and assigns it to the Secondary1 field.
func (o *UserReplicaSet) SetSecondary1(v string) {
	o.Secondary1 = &v
}

// GetSecondary2 returns the Secondary2 field value if set, zero value otherwise.
func (o *UserReplicaSet) GetSecondary2() string {
	if o == nil || IsNil(o.Secondary2) {
		var ret string
		return ret
	}
	return *o.Secondary2
}

// GetSecondary2Ok returns a tuple with the Secondary2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserReplicaSet) GetSecondary2Ok() (*string, bool) {
	if o == nil || IsNil(o.Secondary2) {
		return nil, false
	}
	return o.Secondary2, true
}

// HasSecondary2 returns a boolean if a field has been set.
func (o *UserReplicaSet) HasSecondary2() bool {
	if o != nil && !IsNil(o.Secondary2) {
		return true
	}

	return false
}

// SetSecondary2 gets a reference to the given string and assigns it to the Secondary2 field.
func (o *UserReplicaSet) SetSecondary2(v string) {
	o.Secondary2 = &v
}

// GetPrimarySpID returns the PrimarySpID field value if set, zero value otherwise.
func (o *UserReplicaSet) GetPrimarySpID() int32 {
	if o == nil || IsNil(o.PrimarySpID) {
		var ret int32
		return ret
	}
	return *o.PrimarySpID
}

// GetPrimarySpIDOk returns a tuple with the PrimarySpID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserReplicaSet) GetPrimarySpIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PrimarySpID) {
		return nil, false
	}
	return o.PrimarySpID, true
}

// HasPrimarySpID returns a boolean if a field has been set.
func (o *UserReplicaSet) HasPrimarySpID() bool {
	if o != nil && !IsNil(o.PrimarySpID) {
		return true
	}

	return false
}

// SetPrimarySpID gets a reference to the given int32 and assigns it to the PrimarySpID field.
func (o *UserReplicaSet) SetPrimarySpID(v int32) {
	o.PrimarySpID = &v
}

// GetSecondary1SpID returns the Secondary1SpID field value if set, zero value otherwise.
func (o *UserReplicaSet) GetSecondary1SpID() int32 {
	if o == nil || IsNil(o.Secondary1SpID) {
		var ret int32
		return ret
	}
	return *o.Secondary1SpID
}

// GetSecondary1SpIDOk returns a tuple with the Secondary1SpID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserReplicaSet) GetSecondary1SpIDOk() (*int32, bool) {
	if o == nil || IsNil(o.Secondary1SpID) {
		return nil, false
	}
	return o.Secondary1SpID, true
}

// HasSecondary1SpID returns a boolean if a field has been set.
func (o *UserReplicaSet) HasSecondary1SpID() bool {
	if o != nil && !IsNil(o.Secondary1SpID) {
		return true
	}

	return false
}

// SetSecondary1SpID gets a reference to the given int32 and assigns it to the Secondary1SpID field.
func (o *UserReplicaSet) SetSecondary1SpID(v int32) {
	o.Secondary1SpID = &v
}

// GetSecondary2SpID returns the Secondary2SpID field value if set, zero value otherwise.
func (o *UserReplicaSet) GetSecondary2SpID() int32 {
	if o == nil || IsNil(o.Secondary2SpID) {
		var ret int32
		return ret
	}
	return *o.Secondary2SpID
}

// GetSecondary2SpIDOk returns a tuple with the Secondary2SpID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserReplicaSet) GetSecondary2SpIDOk() (*int32, bool) {
	if o == nil || IsNil(o.Secondary2SpID) {
		return nil, false
	}
	return o.Secondary2SpID, true
}

// HasSecondary2SpID returns a boolean if a field has been set.
func (o *UserReplicaSet) HasSecondary2SpID() bool {
	if o != nil && !IsNil(o.Secondary2SpID) {
		return true
	}

	return false
}

// SetSecondary2SpID gets a reference to the given int32 and assigns it to the Secondary2SpID field.
func (o *UserReplicaSet) SetSecondary2SpID(v int32) {
	o.Secondary2SpID = &v
}

func (o UserReplicaSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserReplicaSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	toSerialize["wallet"] = o.Wallet
	if !IsNil(o.Primary) {
		toSerialize["primary"] = o.Primary
	}
	if !IsNil(o.Secondary1) {
		toSerialize["secondary1"] = o.Secondary1
	}
	if !IsNil(o.Secondary2) {
		toSerialize["secondary2"] = o.Secondary2
	}
	if !IsNil(o.PrimarySpID) {
		toSerialize["primarySpID"] = o.PrimarySpID
	}
	if !IsNil(o.Secondary1SpID) {
		toSerialize["secondary1SpID"] = o.Secondary1SpID
	}
	if !IsNil(o.Secondary2SpID) {
		toSerialize["secondary2SpID"] = o.Secondary2SpID
	}
	return toSerialize, nil
}

type NullableUserReplicaSet struct {
	value *UserReplicaSet
	isSet bool
}

func (v NullableUserReplicaSet) Get() *UserReplicaSet {
	return v.value
}

func (v *NullableUserReplicaSet) Set(val *UserReplicaSet) {
	v.value = val
	v.isSet = true
}

func (v NullableUserReplicaSet) IsSet() bool {
	return v.isSet
}

func (v *NullableUserReplicaSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserReplicaSet(val *UserReplicaSet) *NullableUserReplicaSet {
	return &NullableUserReplicaSet{value: val, isSet: true}
}

func (v NullableUserReplicaSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserReplicaSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


