/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the UserSubscribers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSubscribers{}

// UserSubscribers struct for UserSubscribers
type UserSubscribers struct {
	UserId string `json:"user_id"`
	SubscriberIds []string `json:"subscriber_ids,omitempty"`
}

// NewUserSubscribers instantiates a new UserSubscribers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSubscribers(userId string) *UserSubscribers {
	this := UserSubscribers{}
	this.UserId = userId
	return &this
}

// NewUserSubscribersWithDefaults instantiates a new UserSubscribers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSubscribersWithDefaults() *UserSubscribers {
	this := UserSubscribers{}
	return &this
}

// GetUserId returns the UserId field value
func (o *UserSubscribers) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *UserSubscribers) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *UserSubscribers) SetUserId(v string) {
	o.UserId = v
}

// GetSubscriberIds returns the SubscriberIds field value if set, zero value otherwise.
func (o *UserSubscribers) GetSubscriberIds() []string {
	if o == nil || IsNil(o.SubscriberIds) {
		var ret []string
		return ret
	}
	return o.SubscriberIds
}

// GetSubscriberIdsOk returns a tuple with the SubscriberIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSubscribers) GetSubscriberIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SubscriberIds) {
		return nil, false
	}
	return o.SubscriberIds, true
}

// HasSubscriberIds returns a boolean if a field has been set.
func (o *UserSubscribers) HasSubscriberIds() bool {
	if o != nil && !IsNil(o.SubscriberIds) {
		return true
	}

	return false
}

// SetSubscriberIds gets a reference to the given []string and assigns it to the SubscriberIds field.
func (o *UserSubscribers) SetSubscriberIds(v []string) {
	o.SubscriberIds = v
}

func (o UserSubscribers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSubscribers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	if !IsNil(o.SubscriberIds) {
		toSerialize["subscriber_ids"] = o.SubscriberIds
	}
	return toSerialize, nil
}

type NullableUserSubscribers struct {
	value *UserSubscribers
	isSet bool
}

func (v NullableUserSubscribers) Get() *UserSubscribers {
	return v.value
}

func (v *NullableUserSubscribers) Set(val *UserSubscribers) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSubscribers) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSubscribers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSubscribers(val *UserSubscribers) *NullableUserSubscribers {
	return &NullableUserSubscribers{value: val, isSet: true}
}

func (v NullableUserSubscribers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSubscribers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


