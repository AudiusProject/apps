/*
API

Audius V1 API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package codegen

import (
	"encoding/json"
)

// checks if the VersionMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VersionMetadata{}

// VersionMetadata struct for VersionMetadata
type VersionMetadata struct {
	Service string `json:"service"`
	Version string `json:"version"`
}

// NewVersionMetadata instantiates a new VersionMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionMetadata(service string, version string) *VersionMetadata {
	this := VersionMetadata{}
	this.Service = service
	this.Version = version
	return &this
}

// NewVersionMetadataWithDefaults instantiates a new VersionMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionMetadataWithDefaults() *VersionMetadata {
	this := VersionMetadata{}
	return &this
}

// GetService returns the Service field value
func (o *VersionMetadata) GetService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *VersionMetadata) GetServiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *VersionMetadata) SetService(v string) {
	o.Service = v
}

// GetVersion returns the Version field value
func (o *VersionMetadata) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *VersionMetadata) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *VersionMetadata) SetVersion(v string) {
	o.Version = v
}

func (o VersionMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VersionMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["service"] = o.Service
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableVersionMetadata struct {
	value *VersionMetadata
	isSet bool
}

func (v NullableVersionMetadata) Get() *VersionMetadata {
	return v.value
}

func (v *NullableVersionMetadata) Set(val *VersionMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionMetadata(val *VersionMetadata) *NullableVersionMetadata {
	return &NullableVersionMetadata{value: val, isSet: true}
}

func (v NullableVersionMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


