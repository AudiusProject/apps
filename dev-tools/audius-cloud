#!/usr/bin/env python3

import subprocess

import click

STARTUP_SCRIPT = """#!/bin/bash
if ! useradd -G sudo -m -s /bin/bash audius; then
  usermod -aG sudo audius
fi

if [ ! -d ~audius/audius-protocol ]; then
  curl "https://raw.githubusercontent.com/AudiusProject/audius-protocol/master/dev-tools/setup.sh" | \\
    PROTOCOL_DIR=~audius/audius-protocol HOME=~audius USER=audius bash
  chown -R audius:audius ~audius/audius-protocol
  chown -R audius:audius ~audius/.local

  su - audius -c "audius-compose build"
  su - audius -c "cd \\$PROTOCOL_DIR; docker compose pull"
fi
"""


@click.group()
def cli():
    pass


@cli.command(context_settings=dict(ignore_unknown_options=True))
@click.argument("gcloud-args", nargs=-1, type=click.UNPROCESSED)
def create(gcloud_args):
    subprocess.run(
        [
            "gcloud",
            "compute",
            "instances",
            "create",
            "--machine-type=e2-custom-6-24576",
            "--boot-disk-size=256G",
            "--metadata=startup-script=" + STARTUP_SCRIPT,
            *gcloud_args,
        ],
        check=True,
    )


@cli.command()
@click.argument("name")
def delete(name):
    pass


@cli.command()
@click.argument("name")
def describe(name):
    pass


if __name__ == "__main__":
    cli()
