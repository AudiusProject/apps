import { randomBytes } from "crypto";

import chalk from "chalk";
import { program } from "commander";

import { initializeAudiusLibs } from "./utils.mjs";

program.command("create-user")
  .description("Create a new user")
  .argument("[handle]", "The handle for the new user (chosen randomly if not specified)")
  .option("-p, --password <password>", "The password for the new user", "password")
  .option("-e, --email <email>", "The email for the new user (chosen randomly if not specified)")
  .action(async (handle, { password, email }) => {
    const audiusLibs = await initializeAudiusLibs();

    const rand = randomBytes(2).toString("hex").padStart(4, "0").toUpperCase();

    email = email || `audius-cmd+${handle || rand}@audius.co`;

    const metadata = {
      bio: `account generated by audius-cmd ${rand}`,
      cover_photo: null,
      cover_photo_sizes: null,
      profile_picture: null,
      profile_picture_sizes: null,
      creator_node_endpoint: null,
      handle: handle || `handle${rand}`,
      is_deactivated: false,
      is_verified: false,
      location: `location${rand}`,
      name: `name ${rand}`,
    };
    console.log('calling audius libs with account metadata')
    try {
      const response = await audiusLibs.Account.signUpV2(
        email,
        password,
        metadata,
        /* profilePictureFile */ null,
        /* coverPhotoFile */ null,
        /* hasWallet */ false,
        /* host */ null,
        /* generateRecoveryLink */ true
      );
      console.log('response isss ', response)
      if (response.error) {
        program.error(chalk.red(response.error));
      }

      const entropy = audiusLibs.localStorage.getItem("hedgehog-entropy-key");

      console.log(chalk.green("Successfully created user!"));
      console.log(chalk.yellow.bold("Handle:   "), metadata.handle);
      console.log(chalk.yellow.bold("User ID:  "), response.userId);
      console.log(chalk.yellow.bold("Email:    "), email);
      console.log(chalk.yellow.bold("Password: "), password);
      console.log(chalk.yellow.bold("Entropy:  "), entropy);

      audiusLibs.localStorage.setItem(`handle-${metadata.handle}`, entropy);
    } catch (err) {
      program.error(err.message);
    }

    process.exit(0);
  });
