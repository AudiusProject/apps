version: '3.9'

services:
  ingress:
    container_name: ingress
    image: openresty/openresty:1.21.4.1-alpine-fat
    volumes:
      - ./nginx_ingress.conf:/etc/nginx/conf.d/default.conf
      - ${PROJECT_ROOT}/comms/nginx/ingress.conf:/usr/local/openresty/nginx/conf/comms_ingress.conf
    ports:
      - 80:80

  autoheal:
    image: willfarrell/autoheal:latest
    tty: true
    container_name: autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  audius-cmd:
    args:
      TURBO_TEAM: '${TURBO_TEAM:-}'
      TURBO_TOKEN: '${TURBO_TOKEN:-}'
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/commands/Dockerfile.prod
    environment:
      ETH_TOKEN_ADDRESS: '${ETH_TOKEN_ADDRESS}'
      ETH_REGISTRY_ADDRESS: '${ETH_REGISTRY_ADDRESS}'
      ETH_PROVIDER_URL: 'http://eth-ganache:8545'
      ETH_OWNER_WALLET: '${ETH_OWNER_WALLET}'

      POA_REGISTRY_ADDRESS: '${POA_REGISTRY_ADDRESS}'
      ENTITY_MANAGER_ADDRESS: '${ENTITY_MANAGER_ADDRESS}'
      POA_PROVIDER_URL: 'http://poa-ganache:8545'

      SOLANA_ENDPOINT: 'http://solana-test-validator:8899'
      SOLANA_OWNER_SECRET_KEY: '${SOLANA_OWNER_SECRET_KEY}'
      SOLANA_TOKEN_MINT_PUBLIC_KEY: '${SOLANA_TOKEN_MINT_PUBLIC_KEY}'
      SOLANA_USDC_TOKEN_MINT_PUBLIC_KEY: '${SOLANA_USDC_TOKEN_MINT_PUBLIC_KEY}'
      SOLANA_CLAIMABLE_TOKENS_PUBLIC_KEY: '${SOLANA_CLAIMABLE_TOKENS_PUBLIC_KEY}'
      SOLANA_REWARD_MANAGER_PUBLIC_KEY: '${SOLANA_REWARD_MANAGER_PUBLIC_KEY}'
      SOLANA_REWARD_MANAGER_PDA_PUBLIC_KEY: '${SOLANA_REWARD_MANAGER_PDA_PUBLIC_KEY}'
      SOLANA_REWARD_MANAGER_TOKEN_PDA_PUBLIC_KEY: '${SOLANA_REWARD_MANAGER_TOKEN_PDA_PUBLIC_KEY}'
      SOLANA_PAYMENT_ROUTER_PUBLIC_KEY: '${SOLANA_PAYMENT_ROUTER_PUBLIC_KEY}'
      SOLANA_FEEPAYER_SECRET_KEY: '${SOLANA_FEEPAYER_SECRET_KEY}'

      IDENTITY_SERVICE_URL: 'http://identity-service:7000'
      FALLBACK_CREATOR_NODE_URL: 'http://creator-node:4000' # this should choose a random cn everytime this is run
    deploy:
      mode: global
    volumes:
      # Mount the directory for e2e tests so audius-cmd can output results of data seeding
      # to files that can be read by the e2e tests
      - ${PROJECT_ROOT}/packages/web/e2e:/app/packages/web/e2e
