version: '3.9'

# Defines "prod" content node. Doesn't use turbo yet, but builds with all dependencies baked in.
# This is used via audius-compose to build+push the prod image.
# A different docker-compose.yml definition in audius-docker-compose is used to run the prod image with a different entrypoint.

services:
  storage:
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/cmd/mediorum/Dockerfile
      args:
        git_sha: '${GIT_COMMIT}'
    restart: unless-stopped
    environment:
      - dirTemplate=/data/mediorum_dev_%d
      - dbUrlTemplate=postgresql://postgres:postgres@db:5432/creator_node_%d
      - hostNameTemplate=http://audius-protocol-creator-node-%d
      - identityService=http://audius-protocol-identity-service-1
      - web3EthProviderUrl=http://eth-ganache:8545 # Used only in register script
      - ethProviderUrl=http://eth-ganache:8545
      - ethRegistryAddress=${ETH_REGISTRY_ADDRESS}
      - discoveryListensEndpoints=http://audius-protocol-discovery-provider-1
    env_file: .env # Used in register script to get wallets
    ports:
      - 1991:1991
      - 1992:1992
      - 1993:1993
      - 1994:1994
      - 1995:1995
    volumes:
      - mediorum:/data
      - legacy_creator_file_storage:/file_storage
      - ${PROJECT_ROOT}/cmd/mediorum:/app
      - ${PROJECT_ROOT}/dev-tools:/tmp/dev-tools
    profiles:
      - legacy
    depends_on:
      db:
        condition: service_healthy
      eth-ganache:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl --fail http://localhost:1991/health_check || exit 1'
        ]
      interval: 10s
      start_period: 60s
      timeout: 5s
      retries: 20

  core:
    container_name: core
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/cmd/core/infra/Dockerfile
      target: final
      args:
        git_sha: '${GIT_COMMIT}'
    restart: unless-stopped
    profiles:
      - legacy
