version: '3'

# Defines "prod" plugins. This isn't actually used in prod but is used to run tests against
# on CI, such as test-audius-cmd
#
# Uses the "thick" container with all dependencies installed and builds performed

services:
  app-template:
    container_name: app-template
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/discovery-provider/plugins/pedalboard/docker/Dockerfile.prod
      args:
        app_name: app-template
    restart: always
    profiles:
      - pedalboard

  trending-challenge-rewards:
    container_name: trending-challenge-rewards
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/discovery-provider/plugins/pedalboard/docker/Dockerfile.prod
      args:
        app_name: trending-challenge-rewards
        TURBO_TEAM: '${TURBO_TEAM}'
        TURBO_TOKEN: '${TURBO_TOKEN}'
    restart: always
    profiles:
      - pedalboard

  staking:
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/discovery-provider/plugins/pedalboard/docker/Dockerfile.prod
      args:
        app_name: staking
        TURBO_TEAM: '${TURBO_TEAM}'
        TURBO_TOKEN: '${TURBO_TOKEN}'
    restart: always
    profiles:
      - pedalboard

  relay:
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/discovery-provider/plugins/pedalboard/docker/Dockerfile.prod
      args:
        app_name: relay
        TURBO_TEAM: '${TURBO_TEAM}'
        TURBO_TOKEN: '${TURBO_TOKEN}'
    env_file: .env
    restart: always
    deploy:
      mode: replicated
      replicas: '${DISCOVERY_PROVIDER_REPLICAS}'
    profiles:
      - discovery
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://127.0.0.1:6001/relay/health']
      interval: 1s
      timeout: 1s
      retries: 120
    depends_on:
      db:
        condition: service_healthy
      discovery-provider-redis:
        condition: service_healthy
      poa-ganache:
        condition: service_healthy

  solana-relay:
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/discovery-provider/plugins/pedalboard/docker/Dockerfile.prod
      args:
        app_name: solana-relay
        TURBO_TEAM: '${TURBO_TEAM:-}'
        TURBO_TOKEN: '${TURBO_TOKEN:-}'
    env_file: .env # used by the startup script
    environment:
      audius_solana_rewards_manager_program_address: '${SOLANA_REWARD_MANAGER_PUBLIC_KEY}'
      audius_solana_rewards_manager_account: '${SOLANA_REWARD_MANAGER_PDA_PUBLIC_KEY}'
      audius_solana_user_bank_program_address: '${SOLANA_CLAIMABLE_TOKENS_PUBLIC_KEY}'
      audius_solana_payment_router_program_address: '${SOLANA_PAYMENT_ROUTER_PUBLIC_KEY}'
      audius_solana_waudio_mint: '${SOLANA_TOKEN_MINT_PUBLIC_KEY}'
      audius_solana_usdc_mint: '${SOLANA_USDC_TOKEN_MINT_PUBLIC_KEY}'
      audius_solana_fee_payer_wallets: '[{"privateKey":${SOLANA_FEEPAYER_SECRET_KEY}}]'
    restart: always
    profiles:
      - discovery
    deploy:
      mode: replicated
      replicas: '${DISCOVERY_PROVIDER_REPLICAS}'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://127.0.0.1:6002/solana/health_check']
      interval: 1s
      timeout: 1s
      retries: 120
    depends_on:
      db:
        condition: service_healthy
      discovery-provider-redis:
        condition: service_healthy
      solana-test-validator:
        condition: service_healthy

  sla-auditor:
    container_name: sla-auditor
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/discovery-provider/plugins/pedalboard/docker/Dockerfile.prod
      args:
        app_name: sla-auditor
        TURBO_TEAM: '${TURBO_TEAM}'
        TURBO_TOKEN: '${TURBO_TOKEN}'
    restart: always
    profiles:
      - pedalboard

  crm:
    container_name: crm
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/discovery-provider/plugins/pedalboard/docker/Dockerfile.prod
      args:
        app_name: crm
        TURBO_TEAM: '${TURBO_TEAM}'
        TURBO_TOKEN: '${TURBO_TOKEN}'
    restart: always
    profiles:
      - pedalboard

  mri:
    container_name: mri
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/discovery-provider/plugins/pedalboard/docker/Dockerfile.prod
      args:
        app_name: mri
        TURBO_TEAM: '${TURBO_TEAM}'
        TURBO_TOKEN: '${TURBO_TOKEN}'
    restart: always
    profiles:
      - pedalboard

  verified-notifications:
    container_name: verified-notifications
    build:
      context: ${PROJECT_ROOT}
      dockerfile: ${PROJECT_ROOT}/packages/discovery-provider/plugins/pedalboard/docker/Dockerfile.prod
      args:
        app_name: verified-notifications
        TURBO_TEAM: '${TURBO_TEAM:-}'
        TURBO_TOKEN: '${TURBO_TOKEN:-}'
    restart: on-failure
    profiles:
      - pedalboard
