# INGRESS TO ALL CONTAINERS.
# Local dev only. Stage and prod are deployed via audius-docker-compose.
# `audius-compose up` appends a line to your /etc/hosts that makes this work.

#
# COMMS. Routes to containers for: audius-protocol-storage-1 audius-protocol-storage-2 audius-protocol-storage-3 audius-protocol-storage-4 audius-protocol-discovery-1 audius-protocol-discovery-2 audius-protocol-discovery-3
# Comes from comms/nginx/ingress.conf
#
include comms_ingress.conf;

#
# DISCOVERY PROVIDER. Uses port 5000 to forward to the same nginx that stage and prod use (i.e., discovery-provider/nginx_conf/nginx.conf)
#
server {
    listen      80;
    server_name audius-protocol-discovery-provider-1;

    location / {
        resolver 127.0.0.11 valid=30s;
        set $upstream audius-protocol-discovery-provider-1:5000;
        proxy_pass http://$upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

#
# CREATOR NODE (mediorum)
#
server {
    listen      80;
    server_name audius-protocol-creator-node-1;

    location / {
        client_max_body_size 500M;
        resolver 127.0.0.11 valid=30s;
        set $upstream audius-protocol-mediorum:1991;
        proxy_pass http://$upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}
server {
    listen      80;
    server_name audius-protocol-creator-node-2;

    location / {
        client_max_body_size 500M;
        resolver 127.0.0.11 valid=30s;
        set $upstream audius-protocol-mediorum:1992;
        proxy_pass http://$upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}
server {
    listen      80;
    server_name audius-protocol-creator-node-3;

    location / {
        client_max_body_size 500M;
        resolver 127.0.0.11 valid=30s;
        set $upstream audius-protocol-mediorum:1993;
        proxy_pass http://$upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}

#
# ETH, POA, SOL
#
server {
    listen      80;
    server_name audius-protocol-eth-ganache-1;

    location / {
        resolver 127.0.0.11 valid=30s;
        set $upstream audius-protocol-eth-ganache-1:8545;
        proxy_pass http://$upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
server {
    listen      80;
    server_name audius-protocol-poa-ganache-1;

    location / {
        resolver 127.0.0.11 valid=30s;
        set $upstream audius-protocol-poa-ganache-1:8545;
        proxy_pass http://$upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
server {
    listen      80;
    server_name audius-protocol-solana-test-validator-1;

    location / {
        resolver 127.0.0.11 valid=30s;
        set $upstream audius-protocol-solana-test-validator-1:8899;
        proxy_pass http://$upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

#
# IDENTITY
#
server {
    listen      80;
    server_name audius-protocol-identity-service-1;

    location / {
        resolver 127.0.0.11 valid=30s;
        set $upstream identity-service:7000;
        proxy_pass http://$upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

#
# PEDALBOARD
#
server {
    listen      80;
    server_name audius-protocol-pedalboard;

    location ~ ^/relay(/.*)?$ {
        resolver 127.0.0.11 valid=30s;
        proxy_pass http://relay:6001/relay$1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
