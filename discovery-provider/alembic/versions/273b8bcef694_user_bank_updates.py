"""user bank updates

Revision ID: 273b8bcef694
Revises: c43d19f0f04a
Create Date: 2021-06-22 17:22:00.102134

"""
import logging
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import sessionmaker
from solana.publickey import PublicKey
from src.models import User
from src.utils.solana import get_address_pair

logger = logging.getLogger(__name__)

# revision identifiers, used by Alembic.
revision = '273b8bcef694'
down_revision = 'c43d19f0f04a'
branch_labels = None
depends_on = None

Session = sessionmaker()

TEST_USER_BANK_PROGRAM = PublicKey("AVys2x8dfgTDLuGLh67Q1uYXixEsyqBhGDQ9fYV39Y9f")
WAUDIO_PROGRAM_ID = PublicKey("CYzPVv1zB9RH6hRWRKprFoepdD8Y7Q5HefCqrybvetja")
WAUDIO_MINT_PUBKEY = PublicKey("9zyPU1mjgzaVyQsYwKJJ7AhVz5bgx5uc1NPABvAcUXsT")
SPL_TOKEN_ID = PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA")

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('users', sa.Column('user_bank_sol_account', sa.String(), nullable=True))

    # Backfill of derived accounts
    # bind = op.get_bind()
    # session = Session(bind=bind)

    # users_query = (
    #     session.query(User)
    #     .filter(
    #         User.is_current == True
    #     )
    # )
    # users_result = users_query.all()
    # for user in users_result:
    #     wallet = user.wallet
    #     sliced_wallet = wallet[2:]
    #     logger.error(sliced_wallet)
    #     hashed_eth_pk = bytes.fromhex(sliced_wallet)
    #     base_address, derived_address = get_address_pair(
    #         WAUDIO_PROGRAM_ID,
    #         hashed_eth_pk,
    #         TEST_USER_BANK_PROGRAM,
    #         SPL_TOKEN_ID
    #     )
    #     derived_address_value = str(derived_address[0])
    #     logger.error(f"{sliced_wallet}:{base_address},{derived_address}")
    #     user.user_bank_sol_account = derived_address_value

    # session.commit()
    # ### end Alembic commands ###
    pass


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_column('users', 'user_bank_sol_account')
    # ### end Alembic commands ###
    pass
