import os
from sqlalchemy import create_engine

# can be obtained from database monitors, exposed via verbose health check
# order of execution shouldn't matter since these are supposed to exist historically
INDEXES = [
    "CREATE UNIQUE INDEX IF NOT EXISTS aggregate_daily_app_name_metrics_pkey ON public.aggregate_daily_app_name_metrics USING btree (id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS aggregate_daily_total_users_metrics_pkey ON public.aggregate_daily_total_users_metrics USING btree (id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS aggregate_daily_unique_users_metrics_pkey ON public.aggregate_daily_unique_users_metrics USING btree (id)",
    "CREATE INDEX IF NOT EXISTS interval_play_month_count_idx ON public.aggregate_interval_plays USING btree (month_listen_counts)",
    "CREATE INDEX IF NOT EXISTS interval_play_track_id_idx ON public.aggregate_interval_plays USING btree (track_id)",
    "CREATE INDEX IF NOT EXISTS interval_play_week_count_idx ON public.aggregate_interval_plays USING btree (week_listen_counts)",
    "CREATE UNIQUE INDEX IF NOT EXISTS aggregate_monthly_app_name_metrics_pkey ON public.aggregate_monthly_app_name_metrics USING btree (id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS aggregate_monthly_total_users_metrics_pkey ON public.aggregate_monthly_total_users_metrics USING btree (id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS aggregate_monthly_unique_users_metrics_pkey ON public.aggregate_monthly_unique_users_metrics USING btree (id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS aggregate_playlist_idx ON public.aggregate_playlist USING btree (playlist_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS play_item_id_idx ON public.aggregate_plays USING btree (play_item_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS aggregate_track_idx ON public.aggregate_track USING btree (track_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS aggregate_user_table_pkey ON public.aggregate_user USING btree (user_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS album_row_number_idx ON public.album_lexeme_dict USING btree (row_number)",
    "CREATE INDEX IF NOT EXISTS album_user_handle_idx ON public.album_lexeme_dict USING btree (handle)",
    "CREATE INDEX IF NOT EXISTS album_user_name_idx ON public.album_lexeme_dict USING gin (user_name gin_trgm_ops)",
    "CREATE INDEX IF NOT EXISTS album_words_idx ON public.album_lexeme_dict USING gin (word gin_trgm_ops)",
    "CREATE UNIQUE INDEX IF NOT EXISTS alembic_version_pkc ON public.alembic_version USING btree (version_num)",
    "CREATE UNIQUE INDEX IF NOT EXISTS app_name_metrics_pkey ON public.app_name_metrics USING btree (id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS associated_wallets_pkey ON public.associated_wallets USING btree (id)",
    "CREATE INDEX IF NOT EXISTS ix_associated_wallets_user_id ON public.associated_wallets USING btree (user_id, is_current)",
    "CREATE INDEX IF NOT EXISTS ix_associated_wallets_wallet ON public.associated_wallets USING btree (wallet, is_current)",
    "CREATE UNIQUE INDEX IF NOT EXISTS blocks_is_current_idx ON public.blocks USING btree (is_current) WHERE (is_current IS TRUE)",
    "CREATE UNIQUE INDEX IF NOT EXISTS blocks_number_key ON public.blocks USING btree (number)",
    "CREATE UNIQUE INDEX IF NOT EXISTS blocks_pkey ON public.blocks USING btree (blockhash)",
    "CREATE INDEX IF NOT EXISTS is_current_blocks_idx ON public.blocks USING btree (is_current)",
    "CREATE UNIQUE INDEX IF NOT EXISTS challenge_disbursements_pkey ON public.challenge_disbursements USING btree (challenge_id, specifier)",
    "CREATE INDEX IF NOT EXISTS idx_challenge_disbursements_slot ON public.challenge_disbursements USING btree (slot)",
    "CREATE UNIQUE INDEX IF NOT EXISTS challenge_listen_streak_pkey ON public.challenge_listen_streak USING btree (user_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS challenge_profile_completion_pkey ON public.challenge_profile_completion USING btree (user_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS challenges_pkey ON public.challenges USING btree (id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS eth_blocks_pkey ON public.eth_blocks USING btree (last_scanned_block)",
    "CREATE UNIQUE INDEX IF NOT EXISTS follows_pkey ON public.follows USING btree (is_current, follower_user_id, followee_user_id, blockhash, txhash)",
    "CREATE INDEX IF NOT EXISTS ix_follows_followee_user_id ON public.follows USING btree (followee_user_id)",
    "CREATE INDEX IF NOT EXISTS ix_follows_follower_user_id ON public.follows USING btree (follower_user_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS hourly_play_counts_pkey ON public.hourly_play_counts USING btree (hourly_timestamp)",
    "CREATE UNIQUE INDEX IF NOT EXISTS indexing_checkpoints_pkey ON public.indexing_checkpoints USING btree (tablename)",
    "CREATE UNIQUE INDEX IF NOT EXISTS ipld_blacklist_blocks_number_key ON public.ipld_blacklist_blocks USING btree (number)",
    "CREATE UNIQUE INDEX IF NOT EXISTS ipld_blacklist_blocks_pkey ON public.ipld_blacklist_blocks USING btree (blockhash)",
    "CREATE INDEX IF NOT EXISTS is_current_ipld_blacklist_blocks_idx ON public.ipld_blacklist_blocks USING btree (is_current)",
    "CREATE UNIQUE INDEX IF NOT EXISTS ipld_blacklists_pkey ON public.ipld_blacklists USING btree (blockhash, ipld, is_blacklisted, is_current)",
    "CREATE UNIQUE INDEX IF NOT EXISTS milestones_pkey ON public.milestones USING btree (id, name, threshold)",
    "CREATE INDEX IF NOT EXISTS name ON public.milestones USING btree (id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS playlist_row_number_idx ON public.playlist_lexeme_dict USING btree (row_number)",
    "CREATE INDEX IF NOT EXISTS playlist_user_handle_idx ON public.playlist_lexeme_dict USING btree (handle)",
    "CREATE INDEX IF NOT EXISTS playlist_user_name_idx ON public.playlist_lexeme_dict USING gin (user_name gin_trgm_ops)",
    "CREATE INDEX IF NOT EXISTS playlist_words_idx ON public.playlist_lexeme_dict USING gin (word gin_trgm_ops)",
    "CREATE UNIQUE INDEX IF NOT EXISTS playlists_pkey ON public.playlists USING btree (is_current, playlist_id, playlist_owner_id, blockhash, txhash)",
    "CREATE INDEX IF NOT EXISTS ix_plays_created_at ON public.plays USING btree (created_at)",
    "CREATE INDEX IF NOT EXISTS ix_plays_slot ON public.plays USING btree (slot)",
    "CREATE INDEX IF NOT EXISTS ix_plays_sol_signature ON public.plays USING btree (signature)",
    "CREATE INDEX IF NOT EXISTS ix_plays_user_play_item ON public.plays USING btree (play_item_id, user_id)",
    "CREATE INDEX IF NOT EXISTS ix_plays_user_play_item_date ON public.plays USING btree (play_item_id, user_id, created_at)",
    "CREATE INDEX IF NOT EXISTS ix_updated_at ON public.plays USING btree (updated_at, id)",
    "CREATE INDEX IF NOT EXISTS play_item_idx ON public.plays USING btree (play_item_id)",
    "CREATE INDEX IF NOT EXISTS play_updated_at_idx ON public.plays USING btree (updated_at)",
    "CREATE UNIQUE INDEX IF NOT EXISTS plays_pkey ON public.plays USING btree (id)",
    "CREATE INDEX IF NOT EXISTS ix_related_artists_user_id ON public.related_artists USING btree (user_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS related_artists_pkey ON public.related_artists USING btree (user_id, related_artist_user_id)",
    "CREATE INDEX IF NOT EXISTS repost_item_id_idx ON public.reposts USING btree (repost_item_id, is_delete, is_current, repost_type)",
    "CREATE INDEX IF NOT EXISTS repost_user_id_idx ON public.reposts USING btree (user_id, is_delete, is_current, repost_type)",
    "CREATE UNIQUE INDEX IF NOT EXISTS reposts_pkey ON public.reposts USING btree (is_current, user_id, repost_item_id, repost_type, blockhash, txhash)",
    "CREATE INDEX IF NOT EXISTS idx_reward_manager_txs_slot ON public.reward_manager_txs USING btree (slot)",
    "CREATE UNIQUE INDEX IF NOT EXISTS reward_manager_txs_pkey ON public.reward_manager_txs USING btree (signature)",
    "CREATE UNIQUE INDEX IF NOT EXISTS route_metrics_pkey ON public.route_metrics USING btree (id)",
    "CREATE INDEX IF NOT EXISTS save_item_id_idx ON public.saves USING btree (save_item_id, is_delete, is_current, save_type)",
    "CREATE INDEX IF NOT EXISTS save_user_id_idx ON public.saves USING btree (user_id, is_delete, is_current, save_type)",
    "CREATE UNIQUE INDEX IF NOT EXISTS saves_pkey ON public.saves USING btree (is_current, user_id, save_item_id, save_type, blockhash, txhash)",
    "CREATE UNIQUE INDEX IF NOT EXISTS skipped_transactions_pkey ON public.skipped_transactions USING btree (id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS tag_track_user_idx ON public.tag_track_user USING btree (tag, track_id, owner_id)",
    "CREATE INDEX IF NOT EXISTS tag_track_user_tag_idx ON public.tag_track_user USING btree (tag)",
    "CREATE UNIQUE INDEX IF NOT EXISTS track_row_number_idx ON public.track_lexeme_dict USING btree (row_number)",
    "CREATE INDEX IF NOT EXISTS track_user_name_idx ON public.track_lexeme_dict USING gin (user_name gin_trgm_ops)",
    "CREATE INDEX IF NOT EXISTS track_words_idx ON public.track_lexeme_dict USING gin (word gin_trgm_ops)",
    "CREATE INDEX IF NOT EXISTS tracks_user_handle_idx ON public.track_lexeme_dict USING btree (handle)",
    "CREATE INDEX IF NOT EXISTS track_id ON public.track_routes USING btree (is_current)",
    "CREATE UNIQUE INDEX IF NOT EXISTS track_routes_pkey ON public.track_routes USING btree (owner_id, slug)",
    "CREATE INDEX IF NOT EXISTS ix_track_trending_scores_genre ON public.track_trending_scores USING btree (genre)",
    "CREATE INDEX IF NOT EXISTS ix_track_trending_scores_score ON public.track_trending_scores USING btree (score)",
    "CREATE INDEX IF NOT EXISTS ix_track_trending_scores_track_id ON public.track_trending_scores USING btree (track_id)",
    "CREATE INDEX IF NOT EXISTS ix_track_trending_scores_type ON public.track_trending_scores USING btree (type)",
    "CREATE UNIQUE INDEX IF NOT EXISTS track_trending_scores_pkey ON public.track_trending_scores USING btree (track_id, type, version, time_range)",
    "CREATE INDEX IF NOT EXISTS track_owner_id_idx ON public.tracks USING btree (owner_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS tracks_pkey ON public.tracks USING btree (is_current, track_id, blockhash, txhash)",
    "CREATE INDEX IF NOT EXISTS trending_params_track_id_idx ON public.trending_params USING btree (track_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS trending_results_pkey ON public.trending_results USING btree (rank, type, version, week)",
    "CREATE UNIQUE INDEX IF NOT EXISTS ursm_content_nodes_pkey ON public.ursm_content_nodes USING btree (is_current, cnode_sp_id, blockhash, txhash)",
    "CREATE UNIQUE INDEX IF NOT EXISTS user_balance_changes_pkey ON public.user_balance_changes USING btree (user_id)",
    "CREATE UNIQUE INDEX IF NOT EXISTS user_balances_pkey ON public.user_balances USING btree (user_id)",
    "CREATE INDEX IF NOT EXISTS idx_user_bank_eth_address ON public.user_bank_accounts USING btree (ethereum_address)",
    "CREATE UNIQUE INDEX IF NOT EXISTS user_bank_accounts_pkey ON public.user_bank_accounts USING btree (signature)",
    "CREATE INDEX IF NOT EXISTS idx_user_bank_txs_slot ON public.user_bank_txs USING btree (slot)",
    "CREATE UNIQUE INDEX IF NOT EXISTS user_bank_txs_pkey ON public.user_bank_txs USING btree (signature)",
    "CREATE UNIQUE INDEX IF NOT EXISTS user_challenges_pkey ON public.user_challenges USING btree (challenge_id, specifier)",
    "CREATE UNIQUE INDEX IF NOT EXISTS user_events_pkey ON public.user_events USING btree (id)",
    "CREATE INDEX IF NOT EXISTS user_id ON public.user_events USING btree (is_current)",
    "CREATE INDEX IF NOT EXISTS user_handles_idx ON public.user_lexeme_dict USING btree (handle)",
    "CREATE UNIQUE INDEX IF NOT EXISTS user_row_number_idx ON public.user_lexeme_dict USING btree (row_number)",
    "CREATE INDEX IF NOT EXISTS user_words_idx ON public.user_lexeme_dict USING gin (word gin_trgm_ops)",
    "CREATE UNIQUE INDEX IF NOT EXISTS user_listening_history_pkey ON public.user_listening_history USING btree (user_id)",
    "CREATE INDEX IF NOT EXISTS ix_users_handle_lc ON public.users USING btree (handle_lc)",
    "CREATE INDEX IF NOT EXISTS ix_users_is_deactivated ON public.users USING btree (is_deactivated)",
    "CREATE INDEX IF NOT EXISTS ix_users_wallet ON public.users USING btree (wallet)",
    "CREATE UNIQUE INDEX IF NOT EXISTS users_pkey ON public.users USING btree (is_current, user_id, blockhash, txhash)",

    # soon to be deprecated in 98e2a0a25ada
    # "CREATE INDEX IF NOT EXISTS interval_play_year_count_idx ON public.aggregate_interval_plays USING btree (year_listen_counts)",
]

audius_db_url = os.getenv("audius_db_url")
if audius_db_url:
    # runs a transaction https://docs.sqlalchemy.org/en/14/core/connections.html#using-transactions
    try:
        engine = create_engine(audius_db_url)
        with engine.begin() as connection:
            for index in INDEXES:
                connection.execute(index)
    except Exception as e:
        print(f"Error running db_index_checks: {e}")
