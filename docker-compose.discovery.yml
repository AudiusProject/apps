# TODO: Consolidate comms container here (used to push in CI) with the ones in docker-compose.comms.yml
version: "3.9"

services:
  discovery-provider-notifications:
    build:
      context: discovery-provider/plugins/notifications
      args:
        git_sha: "${GIT_COMMIT}"
    environment:
      AUDIUS_REDIS_URL: "redis://identity-service-redis:6379/00"
      DN_DB_URL: "postgresql://postgres:postgres@audius-protocol-discovery-provider-1:5432/audius_discovery"
      IDENTITY_DB_URL: "postgresql://postgres:postgres@db:5432/identity_service"
    volumes:
      - ./discovery-provider/plugins/notifications:/notifications
      - /notifications/node_modules
    depends_on:
      comms:
        condition: service_completed_successfully
      discovery-provider:
        condition: service_healthy
      identity-service:
        condition: service_healthy
      identity-service-redis:
        condition: service_healthy
    deploy:
      mode: global

  comms:
    build:
      context: comms
      dockerfile: Dockerfile
    command: discovery-migrations
    environment:
      audius_db_url: "postgresql://postgres:postgres@audius-protocol-discovery-provider-1:5432/audius_discovery"
    depends_on:
      discovery-provider:
        condition: service_healthy

  discovery-provider-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    depends_on:
      identity-service-redis:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:9200/_cluster/health || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 15
    deploy:
      mode: replicated
      replicas: "${ELASTICSEARCH_REPLICAS}"
    profiles:
      - elasticsearch

  discovery-provider:
    build:
      context: discovery-provider
      args:
        git_sha: "${GIT_COMMIT}"
    command: sh -c ". /tmp/dev-tools/startup/startup.sh && scripts/start.sh"
    env_file: .env # used by the startup script
    environment:
      PYTHONPYCACHEPREFIX: /tmp/pycache

      audius_web3_host: "poa-ganache"
      audius_web3_port: "8545"
      audius_web3_eth_provider_url: "http://eth-ganache:8545"
      audius_contracts_registry: "${POA_REGISTRY_ADDRESS}"
      audius_contracts_entity_manager_address: "${ENTITY_MANAGER_ADDRESS}"
      audius_eth_contracts_registry: "${ETH_REGISTRY_ADDRESS}"
      audius_eth_contracts_token: "${ETH_TOKEN_ADDRESS}"

      audius_solana_endpoint: "http://solana-test-validator:8899"
      audius_solana_track_listen_count_address: "${SOLANA_TRACK_LISTEN_COUNT_PUBLIC_KEY}"
      audius_solana_signer_group_address: "${SOLANA_SIGNER_GROUP_PUBLIC_KEY}"
      audius_solana_user_bank_program_address: "${SOLANA_CLAIMABLE_TOKENS_PUBLIC_KEY}"
      audius_solana_waudio_mint: "${SOLANA_TOKEN_MINT_PUBLIC_KEY}"
      audius_solana_rewards_manager_program_address: "${SOLANA_REWARD_MANAGER_PUBLIC_KEY}"
      audius_solana_rewards_manager_account: "${SOLANA_REWARD_MANAGER_PDA_PUBLIC_KEY}"
      audius_solana_anchor_data_program_id: "${SOLANA_AUDIUS_DATA_PUBLIC_KEY}"
      audius_solana_anchor_admin_storage_public_key: "${SOLANA_ADMIN_ACCOUNT_PUBLIC_KEY}"

      audius_discprov_dev_mode: "true"
    volumes:
      - ./discovery-provider/alembic:/audius-discovery-provider/alembic
      - ./discovery-provider/solana-tx-parser:/audius-discovery-provider/solana-tx-parser
      - ./discovery-provider/src:/audius-discovery-provider/src
      - poa-contracts-abis:/audius-discovery-provider/build/contracts
      - eth-contracts-abis:/audius-discovery-provider/build/eth-contracts
      - solana-programs-idl:/audius-discovery-provider/idl
      - ./dev-tools:/tmp/dev-tools
    expose:
      - "5432"
    depends_on:
      poa-ganache:
        condition: service_healthy
      eth-ganache:
        condition: service_healthy
      solana-test-validator:
        condition: service_healthy
      discovery-provider-elasticsearch:
        condition: "${ELASTICSEARCH_CONDITION}"
    deploy:
      mode: replicated
      replicas: "${DISCOVERY_PROVIDER_REPLICAS}"
