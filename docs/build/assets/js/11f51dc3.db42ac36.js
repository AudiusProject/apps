"use strict";(self.webpackChunkdocs_audius_org=self.webpackChunkdocs_audius_org||[]).push([[971],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4490:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_label:"Architecture",sidebar_position:2},i="Architecture",s={unversionedId:"protocol/content-node/architecture",id:"protocol/content-node/architecture",title:"Architecture",description:"Web Server",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/protocol/content-node/architecture.md",sourceDirName:"protocol/content-node",slug:"/protocol/content-node/architecture",permalink:"/protocol/content-node/architecture",draft:!1,editUrl:"https://github.com/AudiusProject/docs.audius.org/docs/protocol/content-node/architecture.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Architecture",sidebar_position:2},sidebar:"sidebar",previous:{title:"Overview",permalink:"/protocol/content-node/overview"},next:{title:"Token",permalink:"/category/token"}},c={},l=[{value:"Web Server",id:"web-server",level:2},{value:"Persistent Storage (Postgres)",id:"persistent-storage-postgres",level:2},{value:"Redis",id:"redis",level:2},{value:"Track Segmenting",id:"track-segmenting",level:2},{value:"Data Redundancy**",id:"data-redundancy",level:2}],u={toc:l};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"architecture"},"Architecture"),(0,a.kt)("h2",{id:"web-server"},"Web Server"),(0,a.kt)("p",null,"The Content Node's core service is a web server with an HTTP API to process incoming requests and perform the following functions:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"user & track metadata upload"),(0,a.kt)("li",{parentName:"ul"},"user & track image upload"),(0,a.kt)("li",{parentName:"ul"},"user track file upload"),(0,a.kt)("li",{parentName:"ul"},"user & track data, metadata, and track file retrieval")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"The web server is a ",(0,a.kt)("a",{parentName:"em",href:"https://nodejs.org"},"NodeJS")," ",(0,a.kt)("a",{parentName:"em",href:"https://expressjs.com/"},"Express app"),".")),(0,a.kt)("h2",{id:"persistent-storage-postgres"},"Persistent Storage (Postgres)"),(0,a.kt)("p",null,"It stores all data in a postgresql database and all images and metadata objects on its file system."),(0,a.kt)("p",null,"Pointers to all content and metadata stored on disk are persisted in the Postgres DB."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Postgres is managed in the codebase using the ",(0,a.kt)("a",{parentName:"em",href:"https://sequelize.org/master/"},"Sequelize ORM")," which includes migrations, models and validations")),(0,a.kt)("h2",{id:"redis"},"Redis"),(0,a.kt)("p",null,"A ",(0,a.kt)("a",{parentName:"p",href:"https://redis.io/"},"Redis client")," is used for for resource locking, request rate limiting, and limited caching and key storage."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Redis is managed in the codebase through the ",(0,a.kt)("a",{parentName:"em",href:"https://github.com/luin/ioredis"},"ioredis")," npm package")),(0,a.kt)("h2",{id:"track-segmenting"},"Track Segmenting"),(0,a.kt)("p",null,"As defined by the ",(0,a.kt)("a",{parentName:"p",href:"https://whitepaper.audius.co"},"Audius protocol"),", the content node uses ",(0,a.kt)("a",{parentName:"p",href:"https://ffmpeg.org/ffmpeg.html"},"FFMPEG")," to segment & transcode all uploaded track files before storing/serving."),(0,a.kt)("h2",{id:"data-redundancy"},"Data Redundancy**"),(0,a.kt)("p",null,"As defined by the ",(0,a.kt)("a",{parentName:"p",href:"https://whitepaper.audius.co"},"Audius protocol"),", all content is stored redundantly across multiple nodes to maximize availability. This is all done automatically - every node monitors every other node in the network to ensure minimum redundancy of all data, transfering files as required."))}d.isMDXComponent=!0}}]);