"use strict";(self.webpackChunkdocs_audius_org=self.webpackChunkdocs_audius_org||[]).push([[8786],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(r),g=o,h=c["".concat(l,".").concat(g)]||c[g]||d[g]||a;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3318:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_label:"Hedgehog",sidebar_position:2},i="Hedgehog",s={unversionedId:"developers/hedgehog",id:"developers/hedgehog",title:"Hedgehog",description:"Build DApps Like Apps",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/developers/hedgehog.md",sourceDirName:"developers",slug:"/developers/hedgehog",permalink:"/developers/hedgehog",draft:!1,editUrl:"https://github.com/AudiusProject/docs.audius.org/docs/developers/hedgehog.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Hedgehog",sidebar_position:2},sidebar:"sidebar",previous:{title:"REST API",permalink:"/developers/rest-api"},next:{title:"Readme",permalink:"/developers/sdk/"}},l={},u=[{value:"Not All Transactions Are Created Equal",id:"not-all-transactions-are-created-equal",level:3},{value:"No More Popups \ud83e\udd8a",id:"no-more-popups-",level:4},{value:"Installation",id:"installation",level:3},{value:"Docs &amp; Examples",id:"docs--examples",level:3},{value:"Why Use This?",id:"why-use-this",level:3},{value:"Not All Transactions Are Created Equal",id:"not-all-transactions-are-created-equal-1",level:4},{value:"Is Hedgehog Right for your DApp?",id:"is-hedgehog-right-for-your-dapp",level:4},{value:"A Closer Look",id:"a-closer-look",level:3},{value:"\ud83d\udc49 Take a deeper dive into the docs \ud83d\udc48",id:"-take-a-deeper-dive-into-the-docs-",level:3}],p={toc:u};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hedgehog"},"Hedgehog"),(0,o.kt)("p",null,"Build DApps Like Apps"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/AudiusProject/hedgehog"},"Github")," \ud83d\udc48  "),(0,o.kt)("p",null,"Hedgehog is an open-source, client-side Ethereum wallet that uses a username and password. It aims to lower the barrier of entry to crypto projects for non tech-savvy users."),(0,o.kt)("p",null,"Allow users to interact with your DApp just like they would any other website, no extensions required, without centralizing control of keys."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hedgehog")," is alternative to Metamask that manages a user's private key and wallet on the browser. It exposes a simple API to allow you to create an authentication scheme to let users sign up and login to their wallet across multiple browsers and devices."),(0,o.kt)("h3",{id:"not-all-transactions-are-created-equal"},"Not All Transactions Are Created Equal"),(0,o.kt)("p",null,"Current Ethereum wallets treat every transaction as if it were moving your life\u2019s savings. Hedgehog was built for use-cases involving low-to-no financial value."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: The primary improvement to end-user experience is gained by hiding wallet complexity and not forcing users to confirm transactions - the opposite of what you\u2019d want when moving significant money around.")),(0,o.kt)("h4",{id:"no-more-popups-"},"No More Popups \ud83e\udd8a"),(0,o.kt)("p",null,"Decentralized apps today require lots of technical knowledge to configure and use, limiting your user base and reducing the potential for growth."),(0,o.kt)("h3",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save @audius/hedgehog\n")),(0,o.kt)("h3",{id:"docs--examples"},"Docs & Examples"),(0,o.kt)("p",null,"Check out our full technical ",(0,o.kt)("a",{parentName:"p",href:"http://audiusproject.github.io/hedgehog-docs"},"docs")," and ",(0,o.kt)("a",{parentName:"p",href:"http://audiusproject.github.io/hedgehog-docs#how-to"},"api how-to"),"."),(0,o.kt)("p",null,"For a quick browser-side demo, ",(0,o.kt)("a",{parentName:"p",href:"https://codesandbox.io/embed/pp9zzv2n00"},"look no further"),". For a full end-to-end auth demonstration, see our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/AudiusProject/audius-hedgehog-demo"},"demo repo"),"."),(0,o.kt)("h3",{id:"why-use-this"},"Why Use This?"),(0,o.kt)("h4",{id:"not-all-transactions-are-created-equal-1"},"Not All Transactions Are Created Equal"),(0,o.kt)("p",null,"Currently available wallets treat every transaction as if it were moving around your life\u2019s savings. Hedgehog was built for use-cases involving low-to-no financial value."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE"),": The primary improvement to end-user experience is by hiding wallet complexity and not forcing users to constantly confirm transactions - The opposite of what you\u2019d want when moving significant money around."),(0,o.kt)("h4",{id:"is-hedgehog-right-for-your-dapp"},"Is Hedgehog Right for your DApp?"),(0,o.kt)("p",null,"Hedgehog isn\u2019t right for every DApp. Massive improvements in user experience are only possible through tradeoffs. As a general rule Hedgehog should not be used for apps involving significant sums of money. As a bridge, one could start users on Hedgehog and suggest migrating to a more secure wallet if their stored value increases beyond a certain threshold; the Hedgehog paradigm is interoperable with existing web3 providers too."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"[","Good use cases","]")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Signing data"),": If you\u2019re building decentralized applications that rely on user signed data ","(","eg. via EIP-712-esque signing schemes",")",", Hedgehog could help simplify the experience if the stakes are low enough."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Gaming DApp"),": Nothing ruins fun as much as signing transactions. If you\u2019re building a gaming DApp that doesn\u2019t use significant financial assets, improving UX is key."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Decentralized Music Player"),": If you\u2019re building consumer-facing DApps, Hedgehog will dramatically improve user experience and significantly increase your potential userbase.")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"[","Bad use cases","]")),(0,o.kt)("p",null,"If your DApp involves moving around significant sums of money, then the tradeoff in security is most likely not worth it. Hedgehog\u2019s primary improvement to end-user experience is by hiding the wallet and not forcing users to confirm transactions - The opposite of what you\u2019d want when moving money around. We absolutely don\u2019t recommend using Hedgehog in situations like these:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Banking DApp")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Decentralized Lending")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Prediction Markets"))),(0,o.kt)("h3",{id:"a-closer-look"},"A Closer Look"),(0,o.kt)("p",null,"Hedgehog is a package that lives in your front end application to create and manage a user's entropy ","(","from which a private key is derived",")",". Hedgehog relies on a username and password to create auth artifacts, so it's able to simulate a familiar authentication system that allows users to sign up or login from multiple browsers or devices and retrieve their entropy. Those artifacts, through hedgehog, are persisted to a backend of your choosing."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE"),": A private key is only computed and available client side and is never transmitted or stored anywhere besides the user's browser."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// Provide getFn, setAuthFn, setUserFn as requests to your database/backend service (more details in docs).\nconst hedgehog = new Hedgehog(getFn, setAuthFn, setUserFn)\nlet wallet\nif (hedgehog.isLoggedIn()) {\n  wallet = hedgehog.getWallet()\n} else {\n  wallet = await hedgehog.login('username', 'password')\n  // or\n  wallet = await hedgehog.signUp('username', 'password')\n}\n")),(0,o.kt)("p",null,"After creating or retrieving a user's wallet, you can either ",(0,o.kt)("strong",{parentName:"p"},"fund their wallet directly")," to pay transaction fees or ",(0,o.kt)("strong",{parentName:"p"},"relay their transactions through a EIP-712 relayer"),".  "),(0,o.kt)("h3",{id:"-take-a-deeper-dive-into-the-docs-"},"\ud83d\udc49 ",(0,o.kt)("a",{parentName:"h3",href:"https://audiusproject.github.io/hedgehog-docs/#installation"},"Take a deeper dive into the docs")," \ud83d\udc48"))}d.isMDXComponent=!0}}]);