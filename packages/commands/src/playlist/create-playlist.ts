import { randomBytes } from 'crypto'
import chalk from 'chalk'
import { Command } from '@commander-js/extra-typings'
import { getCurrentUserId, initializeAudiusSdk } from '../utils'

export const createPlaylistCommand = new Command('create')
  .description('Create playlist')
  .argument('<trackIds...>', 'Tracks to include in playlist')
  .option('-f, --from <from>', 'The account to upload from')
  .option(
    '-n, --playlist-name <playlistName>',
    'Name of playlist (chosen randomly if not specified)'
  )
  .option(
    '-d, --description <description>',
    'Description of playlist (chosen randomly if not specified)'
  )
  .option(
    '-p, --is-private <isPrivate>',
    'Make playlist private',
    (arg) => !!arg
  )
  .action(async (trackIds, options) => {
    const {
      playlistName = `playlist ${randomBytes(2)
        .toString('hex')
        .padStart(4, '0')
        .toUpperCase()}`,
      description = 'playlist generated by audius-cmd',
      isPrivate,
      from
    } = options

    const audiusSdk = await initializeAudiusSdk({ handle: from })
    const userId = await getCurrentUserId()

    const response = await audiusSdk.playlists.createPlaylist({
      userId,
      trackIds,
      metadata: {
        playlistName,
        description,
        isPrivate
      }
    })
    console.log(chalk.green('Successfully created playlist'))
    console.log(chalk.yellow('Playlist Name: '), playlistName)
    console.log(chalk.yellow('Playlist ID:   '), response.playlistId)
  })
