FROM audius/contracts:1.0.0 AS contracts
FROM alpine:3.18

ENV INSTALL_PATH /audius-discovery-provider
WORKDIR $INSTALL_PATH

ENV PROMETHEUS_MULTIPROC_DIR /prometheus_data
RUN mkdir -p ${PROMETHEUS_MULTIPROC_DIR}

# Add the wait script to the image
# Script originally from https://github.com/ufoscout/docker-compose-wait/releases/download/2.4.0/wait
COPY scripts/wait /wait

RUN apk update && \
  apk add --no-cache \
  alpine-sdk \
  bash \
  curl \
  docker \
  libffi-dev \
  libseccomp-dev \
  libxml2-dev \
  libxslt-dev \
  linux-headers \
  nodejs \
  npm \
  python3=3.11.8-r0 \
  python3-dev=3.11.8-r0 \
  py3-numpy \
  py3-pip \
  py3-scipy \
  py3-wheel \
  redis \
  rsyslog \
  sudo \
  gcc \
  musl-dev \
  gfortran \
  openblas-dev

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

RUN curl -O 'http://openresty.org/package/admin@openresty.com-5ea678a6.rsa.pub' && \
  mv 'admin@openresty.com-5ea678a6.rsa.pub' /etc/apk/keys/ && \
  echo "http://openresty.org/package/alpine/v3.15/main" | tee -a /etc/apk/repositories && \
  apk update && \
  apk add openresty=1.21.4.3-r0 openresty-opm && \
  opm get spacewander/lua-resty-rsa && \
  opm get ledgetech/lua-resty-http && \
  opm get bsiara/dkjson && \
  mkdir /usr/local/openresty/conf /usr/local/openresty/logs

RUN echo 'http://dl-cdn.alpinelinux.org/alpine/v3.10/main' >> /etc/apk/repositories && \
  apk update && \
  apk add \
  libpq=15.6-r0 \
  postgresql15-client=15.6-r0 \
  postgresql15-contrib=15.6-r0 \
  postgresql15-dev=15.6-r0 \
  postgresql15=15.6-r0

RUN python3 -m pip install --upgrade pip

COPY scripts/init-db.sh scripts/init-db.sh
RUN bash scripts/init-db.sh

COPY --from=contracts /usr/src/app/build/contracts/ build/contracts/

COPY requirements.txt requirements.txt
RUN --mount=type=cache,target=/root/.cache \
  python3 -m pip install -r requirements.txt --no-cache-dir

COPY . .

COPY nginx_conf /usr/local/openresty/conf/

# ARGs can be optionally defined with --build-arg while doing docker build eg in CI and then set to env vars
ARG git_sha
ARG audius_loggly_disable
ARG audius_loggly_token
ARG audius_loggly_tags

ENV GIT_SHA=$git_sha
ENV audius_loggly_disable=$audius_loggly_disable
ENV audius_loggly_token=$audius_loggly_token
ENV audius_loggly_tags=$audius_loggly_tags

FROM audius/eth-contracts:latest as eth-contracts
COPY --from=eth-contracts /usr/src/app/build/contracts/ build/eth-contracts/

EXPOSE 5000

CMD ["bash", "scripts/start.sh"]
