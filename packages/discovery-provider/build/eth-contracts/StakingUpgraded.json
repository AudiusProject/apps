{
  "contractName": "StakingUpgraded",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        }
      ],
      "name": "Slashed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_delegatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "delegateStakeFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getClaimsManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDelegateManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getGovernanceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getServiceProviderFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_governanceAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isStaker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "lastClaimedFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "lastStakedFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimsManager",
          "type": "address"
        }
      ],
      "name": "setClaimsManagerAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegateManager",
          "type": "address"
        }
      ],
      "name": "setDelegateManagerAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governanceAddress",
          "type": "address"
        }
      ],
      "name": "setGovernanceAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spFactory",
          "type": "address"
        }
      ],
      "name": "setServiceProviderFactoryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_slashAddress",
          "type": "address"
        }
      ],
      "name": "slash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakerAccount",
          "type": "address"
        }
      ],
      "name": "stakeRewards",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "supportsHistory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalStakedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "totalStakedFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalStakedForAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_delegatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "undelegateStakeFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstakeFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakerAccount",
          "type": "address"
        }
      ],
      "name": "updateClaimHistory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newFunction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Slashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"delegateStakeFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getClaimsManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDelegateManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGovernanceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getServiceProviderFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_governanceAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"lastClaimedFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"lastStakedFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newFunction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimsManager\",\"type\":\"address\"}],\"name\":\"setClaimsManagerAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegateManager\",\"type\":\"address\"}],\"name\":\"setDelegateManagerAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governanceAddress\",\"type\":\"address\"}],\"name\":\"setGovernanceAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spFactory\",\"type\":\"address\"}],\"name\":\"setServiceProviderFactoryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_slashAddress\",\"type\":\"address\"}],\"name\":\"slash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakerAccount\",\"type\":\"address\"}],\"name\":\"stakeRewards\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supportsHistory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalStakedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"totalStakedFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalStakedForAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"undelegateStakeFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstakeFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakerAccount\",\"type\":\"address\"}],\"name\":\"updateClaimHistory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"delegateStakeFor(address,address,uint256)\":{\"params\":{\"_accountAddress\":\"- The final staker of the tokens\",\"_amount\":\"- Number of tokens staked\",\"_delegatorAddress\":\"- Address from which to transfer tokens\"}},\"initialize(address,address)\":{\"details\":\"claimsManagerAddress must be initialized separately after ClaimsManager contract is deployeddelegateManagerAddress must be initialized separately after DelegateManager contract is deployedserviceProviderFactoryAddress must be initialized separately after ServiceProviderFactory contract is deployed\",\"params\":{\"_governanceAddress\":\"- address for Governance proxy contract\",\"_tokenAddress\":\"- address of ERC20 token that will be staked\"}},\"isStaker(address)\":{\"params\":{\"_accountAddress\":\"- Account requesting for\"},\"return\":\"Boolean indicating whether account is a staker\"},\"lastClaimedFor(address)\":{\"params\":{\"_accountAddress\":\"- Account requesting for\"},\"return\":\"Last block number when claim requested\"},\"lastStakedFor(address)\":{\"params\":{\"_accountAddress\":\"- Account requesting for\"},\"return\":\"Last block number when account's balance was modified\"},\"setClaimsManagerAddress(address)\":{\"details\":\"Only callable by Governance address\",\"params\":{\"_claimsManager\":\"- address for new ClaimsManaager contract\"}},\"setDelegateManagerAddress(address)\":{\"details\":\"Only callable by Governance address\",\"params\":{\"_delegateManager\":\"- address for new DelegateManager contract\"}},\"setGovernanceAddress(address)\":{\"details\":\"Only callable by Governance address\",\"params\":{\"_governanceAddress\":\"- address for new Governance contract\"}},\"setServiceProviderFactoryAddress(address)\":{\"details\":\"Only callable by Governance address\",\"params\":{\"_spFactory\":\"- address for new ServiceProviderFactory contract\"}},\"slash(uint256,address)\":{\"details\":\"Callable from DelegateManager\",\"params\":{\"_amount\":\"- Number of tokens slashed\",\"_slashAddress\":\"- Address being slashed\"}},\"stakeFor(address,uint256)\":{\"params\":{\"_accountAddress\":\"- The final staker of the tokens\",\"_amount\":\"- Number of tokens staked\"}},\"stakeRewards(uint256,address)\":{\"params\":{\"_amount\":\"- amount of rewards to  add to stake\",\"_stakerAccount\":\"- address of staker\"}},\"supportsHistory()\":{\"return\":\"Always true\"},\"token()\":{\"return\":\"The token used by the contract for staking and locking\"},\"totalStaked()\":{\"return\":\"The total amount of tokens staked by all users\"},\"totalStakedAt(uint256)\":{\"params\":{\"_blockNumber\":\"- Block number at which we are requesting\"},\"return\":\"The amount of tokens staked at the given block number\"},\"totalStakedFor(address)\":{\"params\":{\"_accountAddress\":\"- The owner of the tokens\"},\"return\":\"The amount of tokens staked by the given account\"},\"totalStakedForAt(address,uint256)\":{\"params\":{\"_accountAddress\":\"- Account requesting for\",\"_blockNumber\":\"- Block number at which we are requesting\"},\"return\":\"The amount of tokens staked by the account at the given block number\"},\"undelegateStakeFor(address,address,uint256)\":{\"params\":{\"_accountAddress\":\"- The staker of the tokens\",\"_amount\":\"- Number of tokens unstaked\",\"_delegatorAddress\":\"- Address from which to transfer tokens\"}},\"unstakeFor(address,uint256)\":{\"params\":{\"_accountAddress\":\"- Account unstaked for, and token recipient\",\"_amount\":\"- Number of tokens staked\"}},\"updateClaimHistory(uint256,address)\":{\"params\":{\"_amount\":\"- amount to add to claim history\",\"_stakerAccount\":\"- address of staker\"}}}},\"userdoc\":{\"methods\":{\"delegateStakeFor(address,address,uint256)\":{\"notice\":\"Stakes `_amount` tokens, transferring them from `_delegatorAddress` to `_accountAddress`, only callable by DelegateManager\"},\"getClaimsManagerAddress()\":{\"notice\":\"Get the ClaimsManager address\"},\"getDelegateManagerAddress()\":{\"notice\":\"Get the DelegateManager address\"},\"getGovernanceAddress()\":{\"notice\":\"Get the Governance address\"},\"getServiceProviderFactoryAddress()\":{\"notice\":\"Get the ServiceProviderFactory address\"},\"initialize()\":{\"notice\":\"wrapper function around parent contract Initializable's `initializable` modifier     initializable modifier ensures this function can only be called once by each deployed child contract     sets isInitialized flag to true to which is used by _requireIsInitialized()\"},\"initialize(address,address)\":{\"notice\":\"Function to initialize the contract\"},\"isStaker(address)\":{\"notice\":\"Helper function wrapped around totalStakedFor. Checks whether _accountAddress is currently a valid staker with a non-zero stake\"},\"lastClaimedFor(address)\":{\"notice\":\"Get last time `_accountAddress` claimed a staking reward\"},\"lastStakedFor(address)\":{\"notice\":\"Get last time `_accountAddress` modified its staked balance\"},\"setClaimsManagerAddress(address)\":{\"notice\":\"Set the ClaimsManaager address\"},\"setDelegateManagerAddress(address)\":{\"notice\":\"Set the DelegateManager address\"},\"setGovernanceAddress(address)\":{\"notice\":\"Set the Governance address\"},\"setServiceProviderFactoryAddress(address)\":{\"notice\":\"Set the ServiceProviderFactory address\"},\"slash(uint256,address)\":{\"notice\":\"Slashes `_amount` tokens from _slashAddress\"},\"stakeFor(address,uint256)\":{\"notice\":\"Stakes `_amount` tokens, transferring them from _accountAddress, and assigns them to `_accountAddress`\"},\"stakeRewards(uint256,address)\":{\"notice\":\"Funds `_amount` of tokens from ClaimsManager to target account\"},\"supportsHistory()\":{\"notice\":\"Check whether it supports history of stakes\"},\"token()\":{\"notice\":\"Get the token used by the contract for staking and locking\"},\"totalStaked()\":{\"notice\":\"Get the total amount of tokens staked by all users\"},\"totalStakedAt(uint256)\":{\"notice\":\"Get the total amount of tokens staked by all users at block number `_blockNumber`\"},\"totalStakedFor(address)\":{\"notice\":\"Get the amount of tokens staked by `_accountAddress`\"},\"totalStakedForAt(address,uint256)\":{\"notice\":\"Get the total amount of tokens staked by `_accountAddress` at block number `_blockNumber`\"},\"undelegateStakeFor(address,address,uint256)\":{\"notice\":\"Unstakes '_amount` tokens, transferring them from `_accountAddress` to `_delegatorAddress`, only callable by DelegateManager\"},\"unstakeFor(address,uint256)\":{\"notice\":\"Unstakes `_amount` tokens, returning them to the desired account.\"},\"updateClaimHistory(uint256,address)\":{\"notice\":\"Update claim history by adding an event to the claim history\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/test/StakingUpgraded.sol\":\"StakingUpgraded\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aragon/court/contracts/lib/Checkpointing.sol\":{\"keccak256\":\"0xb5617cb10e7bc0f3cde7c133f821e9e51018affecbdcc8f84f68efdac36e4486\",\"urls\":[\"bzz-raw://f50f0996f022a0c6f82cd49c9fadd47fe631a017403ad1ce59d6c341877af34f\",\"dweb:/ipfs/QmVL2UCQfGmHwwM8rMhbwBp5PvpWBoJBp3Wvoyrgs24tW7\"]},\"@aragon/court/contracts/lib/os/Uint256Helpers.sol\":{\"keccak256\":\"0x9b22131e343305f10c088be545cd14d552c3e08b84fefd6cd45c21ffce29cff8\",\"urls\":[\"bzz-raw://2c84de0ddd2ce961b48ee5324704da87c47d4edea95902ccdb2ed145f260ed4b\",\"dweb:/ipfs/QmX8aqokGqc3kwriBdYqQcYemMnP3bZNv8ikGkFBje87Dk\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2a474399663812668bb8e9c9e7d011d54fd09de386bd6e9fcb2407a677ebd1aa\",\"urls\":[\"bzz-raw://93754fbe81bcf1f111288152c40987a9fd7cdb43dc72b9f8d7eabb96a4fa9976\",\"dweb:/ipfs/QmNZadpwGrNYB6jndNcAk6dT7f6HHMZBPXdNTa5fKu3HVp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xf2e46c19ea19035e793a4f455032784886c5b4dc43943b615cf5c09c16137e03\",\"urls\":[\"bzz-raw://b1db63829b0eee269d924a6930845ef6cb5aa869c754d9db78d53af27d6653ea\",\"dweb:/ipfs/QmXqs1mVugjBkMDsdRLwBygpbnv2ZpZsV2aQUJYonW158h\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x4342dbe1cb06cc0f0ee8929d6ab41ac68e39a1bac3b9c593e205a358ad243aee\",\"urls\":[\"bzz-raw://15a916b9dd4a3597f25381adfd5cf9abf8fbf3dab78ff001f63bc471b1cdb8f7\",\"dweb:/ipfs/QmeALu4iYnRtoPbnt5xcHHNpTqV3rPQg5Xg7rK67KqA3RB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"project:/contracts/ClaimsManager.sol\":{\"keccak256\":\"0xfb6e4284fdaeee9950b40853cfc5d36d6f90f6934d67ba6f38554cbe6b61d834\",\"urls\":[\"bzz-raw://178b60f572fc71ec0d9eb3b1f6781a13441e57f490771e5804abcb6bcab95dce\",\"dweb:/ipfs/QmNsxJ8xmCpsP25TuncvcsYVHTjFdBcxBF2xVwVmvkfnVP\"]},\"project:/contracts/DelegateManager.sol\":{\"keccak256\":\"0xac8ab8b5137f318fb12439a01a81b248363dd04e4cdb968be16310153efddff0\",\"urls\":[\"bzz-raw://e756ef4006f42781820e44e10fdd0f6aac091d8c6a06480579a50e0ba9b892cc\",\"dweb:/ipfs/QmS3kcfHejRng1x8egxSFiwqrpS7a642FrzA4d68cFksgr\"]},\"project:/contracts/Governance.sol\":{\"keccak256\":\"0x3491aade61e2d76b93b2fe0f2a9f1f291b8301fc8ffc00a6cd964c5d8b4b9453\",\"urls\":[\"bzz-raw://94021bb72963be72487722984f8a307cd94c5de5f5146776e3e7b1830ce90fe9\",\"dweb:/ipfs/QmeTsDYS9t8V9j21MvCG4iPh4WiQLMeQht9UanBpxLrRUx\"]},\"project:/contracts/InitializableV2.sol\":{\"keccak256\":\"0x9564096a2676909356ddb04a4571ba70715aef37553313b20a54fea062f47a8b\",\"urls\":[\"bzz-raw://5d27d9afb8def820292f69f2e701bdd34b0990e4fdce22cdda45fb857fc90028\",\"dweb:/ipfs/QmNsHWsiJUvvVfFYNECgoHiDx8r5GF5fb77EJprBeSAozv\"]},\"project:/contracts/ServiceProviderFactory.sol\":{\"keccak256\":\"0x2f0494d251874f839b3094989510411c38ab5eb1aa09a72b2a4d229b4e950cea\",\"urls\":[\"bzz-raw://59e579150cf41c623fe522e9809c4e28f06e7e98540d6c29d7da441472ca92b3\",\"dweb:/ipfs/QmZTb78MXrbXshdNPGWxyypPM6bsxE2hyPG3aiH6ydgk1w\"]},\"project:/contracts/ServiceTypeManager.sol\":{\"keccak256\":\"0x3e048a72c5e40b58ef492be39b4b238641df7b2351438997e7e0b20e357b2084\",\"urls\":[\"bzz-raw://b727ea151b82cecca401c83881f7fb19ff0d40b34987a62880ed6f1f2ceba7d7\",\"dweb:/ipfs/QmaxPhf6rTCLWiAY5ec5Rpm6QkJv4frFWCHbVL94DJHoqe\"]},\"project:/contracts/Staking.sol\":{\"keccak256\":\"0xf29deb26c817ae9b55523a873218d1027e556bb6d56373b4e30f88c05fa32132\",\"urls\":[\"bzz-raw://0f58b4063835ad58dae51b95a63e0e59d1cd1a6c5fbe746fa1831c2ac53e8ab1\",\"dweb:/ipfs/QmPdVw5xosxmam4rQ7Lya8kdDBedjGGUg5tVzJdGLBGNSQ\"]},\"project:/contracts/registry/Registry.sol\":{\"keccak256\":\"0x7e50686fec9276eb140eac177c2ed1b31988c5181ffb50bcfcc523098cb5928d\",\"urls\":[\"bzz-raw://fc8bdb742290f1228a730bfead16c9b5ba6b19556bb36f552f4728453c029705\",\"dweb:/ipfs/QmY7s4fict32EVtFHGKw9tBo5wfGD5aeGkub2DYk5fDgSr\"]},\"project:/contracts/test/StakingUpgraded.sol\":{\"keccak256\":\"0x36a8e9ae6c5f284c1c33c6f602d72b96080a82a48650a3f92390581dcdd3e9d9\",\"urls\":[\"bzz-raw://b1f85d38800d0427ed98bec8966759bab687989a221c318449b370c8ea521271\",\"dweb:/ipfs/QmfNgLqGZ26rbfsfVBSJwzt8dp4ByfiehCkSNsowEGr9Bi\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a85760003560e01c806373252494116100f9578063c9c5323211610097578063d16543f611610071578063d16543f6146104c6578063ea63d651146104ce578063ede38421146104f4578063fc0c546a14610520576101a8565b8063c9c532321461044d578063ccd9838a1461046a578063cfc16254146104a0576101a8565b8063948e5426116100d3578063948e5426146103c75780639b172b35146103cf578063a2e5e73e146103fb578063aa70d23614610427576101a8565b806373252494146103af5780638129fc1c146103b7578063817b1cd2146103bf576101a8565b80633d82e3c1116101665780634b341aed116101405780634b341aed146103115780636c483ff3146103375780636f1e85331461036d5780637033e4a6146103a7576101a8565b80633d82e3c11461029157806346350ae6146102bd578063485cc955146102e3576101a8565b80622ae74a146101ad5780631b28d63e146101d1578063201ae9db146101eb578063233b7451146102135780632ee409081461023957806336ef088c14610265575b600080fd5b6101b5610528565b604080516001600160a01b039092168252519081900360200190f35b6101d9610542565b60408051918252519081900360200190f35b6102116004803603602081101561020157600080fd5b50356001600160a01b0316610552565b005b6101d96004803603602081101561022957600080fd5b50356001600160a01b0316610648565b6102116004803603604081101561024f57600080fd5b506001600160a01b0381351690602001356106c3565b6102116004803603604081101561027b57600080fd5b506001600160a01b038135169060200135610758565b610211600480360360408110156102a757600080fd5b50803590602001356001600160a01b03166107e9565b6101d9600480360360208110156102d357600080fd5b50356001600160a01b03166108ca565b610211600480360360408110156102f957600080fd5b506001600160a01b0381358116916020013516610921565b6101d96004803603602081101561032757600080fd5b50356001600160a01b0316610a60565b6102116004803603606081101561034d57600080fd5b506001600160a01b03813581169160208101359091169060400135610a91565b6103936004803603602081101561038357600080fd5b50356001600160a01b0316610b22565b604080519115158252519081900360200190f35b610393610b3e565b6101b5610b4e565b610211610b6d565b6101d9610c1c565b6101b5610c35565b610211600480360360408110156103e557600080fd5b50803590602001356001600160a01b0316610c4f565b6102116004803603604081101561041157600080fd5b50803590602001356001600160a01b0316610d1d565b6102116004803603602081101561043d57600080fd5b50356001600160a01b0316610db4565b6101d96004803603602081101561046357600080fd5b5035610e6d565b6102116004803603606081101561048057600080fd5b506001600160a01b03813581169160208101359091169060400135610e91565b610211600480360360208110156104b657600080fd5b50356001600160a01b0316610f22565b6101b5610fc2565b610211600480360360208110156104e457600080fd5b50356001600160a01b0316610fdc565b6101d96004803603604081101561050a57600080fd5b506001600160a01b038135169060200135611095565b6101b56110d6565b60006105326110f0565b506036546001600160a01b031690565b600061054c6110f0565b50600590565b61055a6110f0565b6033546040805180820190915260188152775374616b696e673a204f6e6c7920676f7665726e616e636560401b60208201529061010090046001600160a01b031633146106255760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105ea5781810151838201526020016105d2565b50505050905090810190601f1680156106175780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50603680546001600160a01b0319166001600160a01b0392909216919091179055565b60006106526110f0565b6001600160a01b03821660009081526038602052604090205480156106b8576001600160a01b03831660009081526038602052604090208054600019830190811061069957fe5b60009182526020909120015467ffffffffffffffff1691506106be9050565b60009150505b919050565b6106cb6110f0565b6106d361117b565b603654604080516060810190915260328082526001600160a01b039092163314916121626020830139906107485760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b506107548283836111c4565b5050565b6107606110f0565b61076861117b565b603654604080516060810190915260328082526001600160a01b039092163314916121626020830139906107dd5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b506107548283836112d2565b6107f16110f0565b6107f96113c2565b6035546040805160608101909152602b8082526001600160a01b0390921633149161204560208301399061086e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b506108798183611409565b806001600160a01b03167f45a371af55b0726877a30f464edc14db5879ab096590bacce682cf6c18223596836108ae84610a60565b6040805192835260208301919091528051918290030190a25050565b60006108d46110f0565b6001600160a01b03821660009081526038602052604090206001015480156106b8576001600160a01b03831660009081526038602052604090206001018054600019830190811061069957fe5b600054610100900460ff168061093a575061093a6114f4565b80610948575060005460ff16155b6109835760405162461bcd60e51b815260040180806020018281038252602e815260200180611fba602e913960400191505060405180910390fd5b600054610100900460ff161580156109ae576000805460ff1961ff0019909116610100171660011790555b6109b7836114fa565b6040518060600160405280602881526020016120ae6028913990610a1c5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50603780546001600160a01b0319166001600160a01b038516179055610a4182611536565b610a49610b6d565b8015610a5b576000805461ff00191690555b505050565b6000610a6a6110f0565b6001600160a01b0382166000908152603860205260409020610a8b90611603565b92915050565b610a996110f0565b610aa16113c2565b6035546040805160608101909152602b8082526001600160a01b03909216331491612045602083013990610b165760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50610a5b8383836111c4565b6000610b2c6110f0565b6000610b3783610a60565b1192915050565b6000610b486110f0565b50600190565b6000610b586110f0565b5060335461010090046001600160a01b031690565b600054610100900460ff1680610b865750610b866114f4565b80610b94575060005460ff16155b610bcf5760405162461bcd60e51b815260040180806020018281038252602e815260200180611fba602e913960400191505060405180910390fd5b600054610100900460ff16158015610bfa576000805460ff1961ff0019909116610100171660011790555b6033805460ff191660011790558015610c19576000805461ff00191690555b50565b6000610c266110f0565b610c306039611603565b905090565b6000610c3f6110f0565b506034546001600160a01b031690565b610c576110f0565b610c5f611645565b6034546001600160a01b03163314610ca85760405162461bcd60e51b8152600401808060200182810382526029815260200180611f916029913960400191505060405180910390fd5b610cb38133846111c4565b60408051635172f39f60e11b8152600481018490526001600160a01b03831660248201529051309163a2e5e73e91604480830192600092919082900301818387803b158015610d0157600080fd5b505af1158015610d15573d6000803e3d6000fd5b505050505050565b610d256110f0565b610d2d611645565b6034546001600160a01b0316331480610d4557503330145b610d805760405162461bcd60e51b815260040180806020018281038252603881526020018061212a6038913960400191505060405180910390fd5b610754610d8c4361168c565b6001600160a01b0383166000908152603860205260409020600101908463ffffffff61171916565b610dbc6110f0565b6033546040805180820190915260188152775374616b696e673a204f6e6c7920676f7665726e616e636560401b60208201529061010090046001600160a01b03163314610e4a5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50603480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610e776110f0565b610a8b610e838361168c565b60399063ffffffff6117af16565b610e996110f0565b610ea16113c2565b6035546040805160608101909152602b8082526001600160a01b03909216331491612045602083013990610f165760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50610a5b8383836112d2565b610f2a6110f0565b6033546040805180820190915260188152775374616b696e673a204f6e6c7920676f7665726e616e636560401b60208201529061010090046001600160a01b03163314610fb85760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50610c1981611536565b6000610fcc6110f0565b506035546001600160a01b031690565b610fe46110f0565b6033546040805180820190915260188152775374616b696e673a204f6e6c7920676f7665726e616e636560401b60208201529061010090046001600160a01b031633146110725760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50603580546001600160a01b0319166001600160a01b0392909216919091179055565b600061109f6110f0565b6110cf6110ab8361168c565b6001600160a01b03851660009081526038602052604090209063ffffffff6117af16565b9392505050565b60006110e06110f0565b506037546001600160a01b031690565b6033546040805180820190915260208082527f496e697469616c697a61626c6556323a204e6f7420696e697469616c697a6564908201529060ff161515600114610c195760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b6036546001600160a01b03166111c25760405162461bcd60e51b8152600401808060200182810382526031815260200180611f606031913960400191505060405180910390fd5b565b600081116040518060400160405280602081526020017f5374616b696e673a205a65726f20616d6f756e74206e6f7420616c6c6f7765648152509061124a5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50611257838260016117bb565b611262816001611887565b603754611280906001600160a01b031683308463ffffffff6118e616565b826001600160a01b03167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90826112b586610a60565b6040805192835260208301919091528051918290030190a2505050565b600081116040518060400160405280602081526020017f5374616b696e673a205a65726f20616d6f756e74206e6f7420616c6c6f776564815250906113585760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50611365838260006117bb565b611370816000611887565b60375461138d906001600160a01b0316838363ffffffff61194016565b826001600160a01b03167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e826112b586610a60565b6035546001600160a01b03166111c25760405162461bcd60e51b815260040180806020018281038252602a8152602001806120d6602a913960400191505060405180910390fd5b600081116040518060400160405280602081526020017f5374616b696e673a205a65726f20616d6f756e74206e6f7420616c6c6f7765648152509061148f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b5061149c828260006117bb565b6114a7816000611887565b60375460408051630852cd8d60e31b81526004810184905290516001600160a01b03909216916342966c689160248082019260009290919082900301818387803b158015610d0157600080fd5b303b1590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061152e57508115155b949350505050565b806001600160a01b0316630ea773076040518163ffffffff1660e01b815260040160206040518083038186803b15801561156f57600080fd5b505afa158015611583573d6000803e3d6000fd5b505050506040513d602081101561159957600080fd5b505115156001146115db5760405162461bcd60e51b815260040180806020018281038252603e815260200180612070603e913960400191505060405180910390fd5b603380546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b805460009080156106b85782600001600182038154811061162057fe5b600091825260209091200154600160401b90046001600160c01b031691506106be9050565b6034546001600160a01b03166111c25760405162461bcd60e51b8152600401808060200182810382526028815260200180611fe86028913960400191505060405180910390fd5b60408051808201909152601581527455494e5436345f4e554d4245525f544f4f5f42494760581b602082015260009067ffffffffffffffff8311156117125760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b5090919050565b60408051808201909152601881527f434845434b504f494e545f56414c55455f544f4f5f424947000000000000000060208201526001600160c01b038211156117a35760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50610a5b838383611992565b60006110cf8383611b1f565b6001600160a01b03831660009081526038602052604081206117dc90611603565b9050600082156117fd576117f6828563ffffffff611cb116565b905061184f565b8382101561183c5760405162461bcd60e51b81526004018080602001828103825260358152602001806120106035913960400191505060405180910390fd5b61184c828563ffffffff611d0b16565b90505b61188061185b4361168c565b6001600160a01b0387166000908152603860205260409020908363ffffffff61171916565b5050505050565b6000611891610c1c565b9050600082156118b2576118ab828563ffffffff611cb116565b90506118c5565b6118c2828563ffffffff611d0b16565b90505b6118e06118d14361168c565b6039908363ffffffff61171916565b50505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526118e0908590611d4d565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610a5b908490611d4d565b82548015806119d25750835467ffffffffffffffff841690859060001981019081106119ba57fe5b60009182526020909120015467ffffffffffffffff16105b15611a43576040805180820190915267ffffffffffffffff80851682526001600160c01b0380851660208085019182528854600181018a5560008a8152919091209451940180549151909216600160401b0293831667ffffffffffffffff19909116179091169190911790556118e0565b6000846000016001830381548110611a5757fe5b6000918252602091829020018054604080518082019091528381527f434845434b504f494e545f43414e4e4f545f4144445f504153545f56414c55459381019390935290925067ffffffffffffffff868116911614611af75760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b5080546001600160c01b038416600160401b0267ffffffffffffffff90911617905550505050565b815460009080611b33576000915050610a8b565b8354600019820190859082908110611b4757fe5b60009182526020909120015467ffffffffffffffff90811690851610611b9c57846000018181548110611b7657fe5b600091825260209091200154600160401b90046001600160c01b03169250610a8b915050565b84600001600081548110611bac57fe5b60009182526020909120015467ffffffffffffffff9081169085161015611bd857600092505050610a8b565b6000815b81811115611c7b57865460028383016001010490600090899083908110611bff57fe5b6000918252602090912001805490915067ffffffffffffffff908116908916811015611c2d57829450611c73565b8067ffffffffffffffff168967ffffffffffffffff161015611c5457600183039350611c73565b5054600160401b90046001600160c01b03169550610a8b945050505050565b505050611bdc565b866000018281548110611c8a57fe5b600091825260209091200154600160401b90046001600160c01b0316979650505050505050565b6000828201838110156110cf576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006110cf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611f05565b611d5f826001600160a01b03166114fa565b611db0576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611dee5780518252601f199092019160209182019101611dcf565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611e50576040519150601f19603f3d011682016040523d82523d6000602084013e611e55565b606091505b509150915081611eac576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156118e057808060200190516020811015611ec857600080fd5b50516118e05760405162461bcd60e51b815260040180806020018281038252602a815260200180612100602a913960400191505060405180910390fd5b60008184841115611f575760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156105ea5781810151838201526020016105d2565b50505090039056fe5374616b696e673a207365727669636550726f7669646572466163746f727941646472657373206973206e6f74207365745374616b696e673a204f6e6c792063616c6c61626c652066726f6d20436c61696d734d616e61676572436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65645374616b696e673a20636c61696d734d616e6167657241646472657373206973206e6f74207365745374616b696e673a2043616e6e6f742064656372656173652067726561746572207468616e2063757272656e742062616c616e63655374616b696e673a204f6e6c792063616c6c61626c652066726f6d2044656c65676174654d616e616765725374616b696e673a205f676f7665726e616e636541646472657373206973206e6f7420612076616c696420676f7665726e616e636520636f6e74726163745374616b696e673a205374616b696e6720746f6b656e206973206e6f74206120636f6e74726163745374616b696e673a2064656c65676174654d616e6167657241646472657373206973206e6f74207365745361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645374616b696e673a204f6e6c792063616c6c61626c652066726f6d20436c61696d734d616e61676572206f72205374616b696e672e736f6c5374616b696e673a204f6e6c792063616c6c61626c652066726f6d205365727669636550726f7669646572466163746f7279a265627a7a7231582016ae273c9e40bd7d55375ad4984a96afff6d0405868bd1013c68c01f99ef78ef64736f6c63430005110032",
  "sourceMap": "52:156:45:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:156:45;;;;;;;",
  "deployedSourceMap": "52:156:45:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:156:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12928:163:34;;;:::i;:::-;;;;-1:-1:-1;;;;;12928:163:34;;;;;;;;;;;;;;94:112:45;;;:::i;:::-;;;;;;;;;;;;;;;;4146:237:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4146:237:34;-1:-1:-1;;;;;4146:237:34;;:::i;:::-;;10553:350;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10553:350:34;-1:-1:-1;;;;;10553:350:34;;:::i;7121:431::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7121:431:34;;;;;;;;:::i;7777:435::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7777:435:34;;;;;;;;:::i;6363:507::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6363:507:34;;;;;;-1:-1:-1;;;;;6363:507:34;;:::i;11106:349::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11106:349:34;-1:-1:-1;;;;;11106:349:34;;:::i;2777:338::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2777:338:34;;;;;;;;;;:::i;13991:248::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13991:248:34;-1:-1:-1;;;;;13991:248:34;;:::i;8570:441::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8570:441:34;;;;;;;;;;;;;;;;;:::i;13588:165::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13588:165:34;-1:-1:-1;;;;;13588:165:34;;:::i;:::-;;;;;;;;;;;;;;;;;;10214:118;;;:::i;12531:139::-;;;:::i;965:78:30:-;;;:::i;14389:201:34:-;;;:::i;12722:145::-;;;:::i;5047:405::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5047:405:34;;;;;;-1:-1:-1;;;;;5047:405:34;;:::i;5654:485::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5654:485:34;;;;;;-1:-1:-1;;;;;5654:485:34;;:::i;3720:227::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3720:227:34;-1:-1:-1;;;;;3720:227:34;;:::i;12300:182::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12300:182:34;;:::i;9367:445::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9367:445:34;;;;;;;;;;;;;;;;;:::i;3298:235::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3298:235:34;-1:-1:-1;;;;;3298:235:34;;:::i;13145:149::-;;;:::i;4574:235::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4574:235:34;-1:-1:-1;;;;;4574:235:34;;:::i;11790:253::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;11790:253:34;;;;;;;;:::i;9978:128::-;;;:::i;12928:163::-;12995:7;13014:23;:21;:23::i;:::-;-1:-1:-1;13055:29:34;;-1:-1:-1;;;;;13055:29:34;12928:163;:::o;94:112:45:-;138:7;157:23;:21;:23::i;:::-;-1:-1:-1;198:1:45;94:112;:::o;4146:237:34:-;4227:23;:21;:23::i;:::-;4283:17;;4302:21;;;;;;;;;;;;-1:-1:-1;;;4302:21:34;;;;;4283:17;;;-1:-1:-1;;;;;4283:17:34;4269:10;:31;4261:63;;;;-1:-1:-1;;;4261:63:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4261:63:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4334:29:34;:42;;-1:-1:-1;;;;;;4334:42:34;-1:-1:-1;;;;;4334:42:34;;;;;;;;;;4146:237::o;10553:350::-;10624:7;10643:23;:21;:23::i;:::-;-1:-1:-1;;;;;10694:25:34;;10677:14;10694:25;;;:8;:25;;;;;:54;10762:10;;10758:121;;-1:-1:-1;;;;;10803:25:34;;;;;;:8;:25;;;;;:59;;-1:-1:-1;;10851:10:34;;;10803:59;;;;;;;;;;;;;;;:64;;;;-1:-1:-1;10788:80:34;;-1:-1:-1;10788:80:34;10758:121;10895:1;10888:8;;;10553:350;;;;:::o;7121:431::-;7226:23;:21;:23::i;:::-;7259:44;:42;:44::i;:::-;7349:29;;7392:35;;;;;;;;;;;;;-1:-1:-1;;;;;7349:29:34;;;7335:10;:43;;7392:35;;;;;7314:123;;;;;-1:-1:-1;;;7314:123:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;7314:123:34;;7447:98;7470:15;7499;7528:7;7447:9;:98::i;:::-;7121:431;;:::o;7777:435::-;7884:23;:21;:23::i;:::-;7917:44;:42;:44::i;:::-;8007:29;;8050:35;;;;;;;;;;;;;-1:-1:-1;;;;;8007:29:34;;;7993:10;:43;;8050:35;;;;;7972:123;;;;;-1:-1:-1;;;7972:123:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;7972:123:34;;8105:100;8130:15;8159;8188:7;8105:11;:100::i;6363:507::-;6463:23;:21;:23::i;:::-;6496:37;:35;:37::i;:::-;6579:22;;6615:27;;;;;;;;;;;;;-1:-1:-1;;;;;6579:22:34;;;6565:10;:36;;6615:27;;;;;6544:108;;;;;-1:-1:-1;;;6544:108:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;6544:108:34;;6707:32;6716:13;6731:7;6707:8;:32::i;:::-;6776:13;-1:-1:-1;;;;;6755:108:34;;6803:7;6824:29;6839:13;6824:14;:29::i;:::-;6755:108;;;;;;;;;;;;;;;;;;;;;;6363:507;;:::o;11106:349::-;11178:7;11197:23;:21;:23::i;:::-;-1:-1:-1;;;;;11248:25:34;;11231:14;11248:25;;;:8;:25;;;;;:38;;:53;11315:10;;11311:120;;-1:-1:-1;;;;;11356:25:34;;;;;;:8;:25;;;;;:38;;:58;;-1:-1:-1;;11403:10:34;;;11356:58;;;;;2777:338;1024:12:17;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:17;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:17;;;;;1225:18;1213:4;1225:18;;;1170:80;2911:33:34;2930:13;2911:18;:33::i;:::-;2946:24;;;;;;;;;;;;;;;;;2903:68;;;;;-1:-1:-1;;;2903:68:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2903:68:34;-1:-1:-1;2981:12:34;:35;;-1:-1:-1;;;;;;2981:35:34;-1:-1:-1;;;;;2981:35:34;;;;;3026:44;3051:18;3026:24;:44::i;:::-;3080:28;:26;:28::i;:::-;1268:14:17;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:17;;;1264:55;2777:338:34;;;:::o;13991:248::-;14061:7;14080:23;:21;:23::i;:::-;-1:-1:-1;;;;;14183:25:34;;;;;;:8;:25;;;;;:49;;:47;:49::i;:::-;14176:56;13991:248;-1:-1:-1;;13991:248:34:o;8570:441::-;8714:23;:21;:23::i;:::-;8747:37;:35;:37::i;:::-;8830:22;;8866:27;;;;;;;;;;;;;-1:-1:-1;;;;;8830:22:34;;;8816:10;:36;;8866:27;;;;;8795:108;;;;;-1:-1:-1;;;8795:108:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;8795:108:34;;8913:91;8936:15;8965:17;8996:7;8913:9;:91::i;13588:165::-;13654:4;13670:23;:21;:23::i;:::-;13745:1;13711:31;13726:15;13711:14;:31::i;:::-;:35;;13588:165;-1:-1:-1;;13588:165:34:o;10214:118::-;10264:4;10280:23;:21;:23::i;:::-;-1:-1:-1;10321:4:34;10214:118;:::o;12531:139::-;12586:7;12605:23;:21;:23::i;:::-;-1:-1:-1;12646:17:34;;;;;-1:-1:-1;;;;;12646:17:34;;12531:139::o;965:78:30:-;1024:12:17;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:17;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:17;;;;;1225:18;1213:4;1225:18;;;1170:80;1016:13:30;:20;;-1:-1:-1;;1016:20:30;1032:4;1016:20;;;1264:55:17;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:17;;;1264:55;965:78:30;:::o;14389:201:34:-;14433:7;14452:23;:21;:23::i;:::-;14555:28;:18;:26;:28::i;:::-;14548:35;;14389:201;:::o;12722:145::-;12780:7;12799:23;:21;:23::i;:::-;-1:-1:-1;12840:20:34;;-1:-1:-1;;;;;12840:20:34;12722:145;:::o;5047:405::-;5129:23;:21;:23::i;:::-;5162:35;:33;:35::i;:::-;5243:20;;-1:-1:-1;;;;;5243:20:34;5229:10;:34;5208:122;;;;-1:-1:-1;;;5208:122:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5340:46;5350:14;5366:10;5378:7;5340:9;:46::i;:::-;5397:48;;;-1:-1:-1;;;5397:48:34;;;;;;;;-1:-1:-1;;;;;5397:48:34;;;;;;;;:4;;:23;;:48;;;;;-1:-1:-1;;5397:48:34;;;;;;;-1:-1:-1;5397:4:34;:48;;;5:2:-1;;;;30:1;27;20:12;5:2;5397:48:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5397:48:34;;;;5047:405;;:::o;5654:485::-;5742:23;:21;:23::i;:::-;5775:35;:33;:35::i;:::-;5856:20;;-1:-1:-1;;;;;5856:20:34;5842:10;:34;;:65;;-1:-1:-1;5880:10:34;5902:4;5880:27;5842:65;5821:168;;;;-1:-1:-1;;;5821:168:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6057:75;6099:23;:12;:21;:23::i;:::-;-1:-1:-1;;;;;6057:24:34;;;;;;:8;:24;;;;;:37;;;6124:7;6057:75;:41;:75;:::i;3720:227::-;3796:23;:21;:23::i;:::-;3852:17;;3871:21;;;;;;;;;;;;-1:-1:-1;;;3871:21:34;;;;;3852:17;;;-1:-1:-1;;;;;3852:17:34;3838:10;:31;3830:63;;;;-1:-1:-1;;;3830:63:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3830:63:34;-1:-1:-1;3903:20:34;:37;;-1:-1:-1;;;;;;3903:37:34;-1:-1:-1;;;;;3903:37:34;;;;;;;;;;3720:227::o;12300:182::-;12368:7;12387:23;:21;:23::i;:::-;12428:47;12451:23;:12;:21;:23::i;:::-;12428:18;;:47;:22;:47;:::i;9367:445::-;9513:23;:21;:23::i;:::-;9546:37;:35;:37::i;:::-;9629:22;;9665:27;;;;;;;;;;;;;-1:-1:-1;;;;;9629:22:34;;;9615:10;:36;;9665:27;;;;;9594:108;;;;;-1:-1:-1;;;9594:108:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;9594:108:34;;9712:93;9737:15;9766:17;9797:7;9712:11;:93::i;3298:235::-;3375:23;:21;:23::i;:::-;3431:17;;3450:21;;;;;;;;;;;;-1:-1:-1;;;3450:21:34;;;;;3431:17;;;-1:-1:-1;;;;;3431:17:34;3417:10;:31;3409:63;;;;-1:-1:-1;;;3409:63:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3409:63:34;;3482:44;3507:18;3482:24;:44::i;13145:149::-;13205:7;13224:23;:21;:23::i;:::-;-1:-1:-1;13265:22:34;;-1:-1:-1;;;;;13265:22:34;13145:149;:::o;4574:235::-;4654:23;:21;:23::i;:::-;4710:17;;4729:21;;;;;;;;;;;;-1:-1:-1;;;4729:21:34;;;;;4710:17;;;-1:-1:-1;;;;;4710:17:34;4696:10;:31;4688:63;;;;-1:-1:-1;;;4688:63:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;4688:63:34;-1:-1:-1;4761:22:34;:41;;-1:-1:-1;;;;;;4761:41:34;-1:-1:-1;;;;;4761:41:34;;;;;;;;;;4574:235::o;11790:253::-;11908:7;11927:23;:21;:23::i;:::-;11968:68;12012:23;:12;:21;:23::i;:::-;-1:-1:-1;;;;;11968:25:34;;;;;;:8;:25;;;;;;:68;:43;:68;:::i;:::-;11961:75;11790:253;-1:-1:-1;;;11790:253:34:o;9978:128::-;10018:7;10037:23;:21;:23::i;:::-;-1:-1:-1;10086:12:34;;-1:-1:-1;;;;;10086:12:34;9978:128;:::o;1229:117:30:-;1294:13;;1317:21;;;;;;;;;;;;;;;;;;;1294:13;;:21;;:13;:21;1286:53;;;;-1:-1:-1;;;1286:53:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;19713:226:34;19811:29;;-1:-1:-1;;;;;19811:29:34;19790:142;;;;-1:-1:-1;;;19790:142:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19713:226::o;14979:649::-;15174:1;15164:7;:11;15177:17;;;;;;;;;;;;;;;;;15156:39;;;;;-1:-1:-1;;;15156:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;15156:39:34;;15252:49;15272:13;15287:7;15296:4;15252:19;:49::i;:::-;15347:33;15366:7;15375:4;15347:18;:33::i;:::-;15436:12;;:71;;-1:-1:-1;;;;;15436:12:34;15466:16;15492:4;15499:7;15436:71;:29;:71;:::i;:::-;15543:13;-1:-1:-1;;;;;15523:98:34;;15570:7;15591:29;15606:13;15591:14;:29::i;:::-;15523:98;;;;;;;;;;;;;;;;;;;;;;14979:649;;;:::o;15922:588::-;16080:1;16070:7;:11;16083:17;;;;;;;;;;;;;;;;;16062:39;;;;;-1:-1:-1;;;16062:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;16062:39:34;;16158:50;16178:13;16193:7;16202:5;16158:19;:50::i;:::-;16254:34;16273:7;16282:5;16254:18;:34::i;:::-;16326:12;;:52;;-1:-1:-1;;;;;16326:12:34;16352:16;16370:7;16326:52;:25;:52;:::i;:::-;16416:13;-1:-1:-1;;;;;16394:109:34;;16443:7;16464:29;16479:13;16464:14;:29::i;19502:205::-;19593:22;;-1:-1:-1;;;;;19593:22:34;19572:128;;;;-1:-1:-1;;;19572:128:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16723:521;16864:1;16854:7;:11;16867:17;;;;;;;;;;;;;;;;;16846:39;;;;;-1:-1:-1;;;16846:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;16846:39:34;;16942:50;16962:13;16977:7;16986:5;16942:19;:50::i;:::-;17038:34;17057:7;17066:5;17038:18;:34::i;:::-;17121:12;;17099:50;;;-1:-1:-1;;;17099:50:34;;;;;;;;;;-1:-1:-1;;;;;17121:12:34;;;;17099:41;;:50;;;;;17121:12;;17099:50;;;;;;;;17121:12;;17099:50;;;5:2:-1;;;;30:1;27;20:12;1409:498:17;1820:4;1864:17;1895:7;1409:498;:::o;686:610:16:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:16;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:16:o;18910:305:34:-;19023:18;-1:-1:-1;;;;;19012:50:34;;:52;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19012:52:34;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19012:52:34;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19012:52:34;:60;;19068:4;19012:60;18991:169;;;;-1:-1:-1;;;18991:169:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19170:17;:38;;-1:-1:-1;;;;;19170:38:34;;;;;-1:-1:-1;;;;;;19170:38:34;;;;;;;;;18910:305::o;1870:239:0:-;1968:19;;1932:7;;2001:10;;1997:87;;2042:4;:12;;2064:1;2055:6;:10;2042:24;;;;;;;;;;;;;;;;;:30;-1:-1:-1;;;2042:30:0;;-1:-1:-1;;;;;2042:30:0;;-1:-1:-1;2027:46:0;;-1:-1:-1;2027:46:0;19331:165:34;19407:20;;-1:-1:-1;;;;;19407:20:34;19399:90;;;;-1:-1:-1;;;19399:90:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:156:1;740:27;;;;;;;;;;;;-1:-1:-1;;;740:27:1;;;;697:6;;728:10;723:15;;;715:53;;;;-1:-1:-1;;;715:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;715:53:1;-1:-1:-1;792:1:1;;645:156;-1:-1:-1;645:156:1:o;1498:189:0:-;1613:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1590:21:0;;;1582:51;;;;-1:-1:-1;;;1582:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1582:51:0;;1643:37;1651:4;1657:5;1672:6;1643:7;:37::i;2581:131::-;2653:7;2679:26;2693:4;2699:5;2679:13;:26::i;17494:649:34:-;-1:-1:-1;;;;;17627:25:34;;17596:28;17627:25;;;:8;:25;;;;;:49;;:47;:49::i;:::-;17596:80;;17687:16;17717:9;17713:291;;;17753:29;:20;17778:3;17753:29;:24;:29;:::i;:::-;17742:40;;17713:291;;;17862:3;17838:20;:27;;17813:126;;;;-1:-1:-1;;;17813:126:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17964:29;:20;17989:3;17964:29;:24;:29;:::i;:::-;17953:40;;17713:291;18058:78;18102:23;:12;:21;:23::i;:::-;-1:-1:-1;;;;;18058:25:34;;;;;;:8;:25;;;;;;18127:8;18058:78;:43;:78;:::i;:::-;17494:649;;;;;:::o;18348:400::-;18424:20;18447:13;:11;:13::i;:::-;18424:36;;18471:16;18501:9;18497:135;;;18537:21;:12;18554:3;18537:21;:16;:21;:::i;:::-;18526:32;;18497:135;;;18600:21;:12;18617:3;18600:21;:16;:21;:::i;:::-;18589:32;;18497:135;18684:57;18707:23;:12;:21;:23::i;:::-;18684:18;;18732:8;18684:57;:22;:57;:::i;:::-;18348:400;;;;:::o;842:202:15:-;968:68;;;-1:-1:-1;;;;;968:68:15;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;968:68:15;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;942:95:15;;961:5;;942:18;:95::i;662:174::-;770:58;;;-1:-1:-1;;;;;770:58:15;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:15;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:15;;763:5;;744:18;:85::i;3792:893:0:-;3896:19;;3929:11;;;:65;;-1:-1:-1;3957:19:0;;3944:50;;;;:4;;-1:-1:-1;;3957:23:0;;;3944:37;;;;;;;;;;;;;;;:42;;;:50;3929:65;3925:754;;;4198:25;;;;;;;;;;;;;;;-1:-1:-1;;;;;4198:25:0;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;4180:12:0;:44;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4180:44:0;;;;-1:-1:-1;;4180:44:0;;;;;;;;;;;;;3925:754;;;4476:36;4515:4;:12;;4537:1;4528:6;:10;4515:24;;;;;;;;;;;;;;;;;;4570:22;;4594:27;;;;;;;;;;;;;;;;;;;;4515:24;;-1:-1:-1;4570:22:0;4561:31;;;4570:22;;4561:31;4553:69;;;;-1:-1:-1;;;4553:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;4553:69:0;-1:-1:-1;4636:32:0;;-1:-1:-1;;;;;4636:32:0;;-1:-1:-1;;;4636:32:0;;;;;;;;3792:893;;;;:::o;6427:1537::-;6629:19;;6508:7;;6662:11;6658:50;;6696:1;6689:8;;;;;6658:50;6886:23;;-1:-1:-1;;6853:10:0;;;6886:4;;6853:10;;6886:23;;;;;;;;;;;;;;;:28;;;;;6877:37;;;;6873:113;;6945:4;:12;;6958:9;6945:23;;;;;;;;;;;;;;;;;:29;-1:-1:-1;;;6945:29:0;;-1:-1:-1;;;;;6945:29:0;;-1:-1:-1;6930:45:0;;-1:-1:-1;;6930:45:0;6873:113;7125:4;:12;;7138:1;7125:15;;;;;;;;;;;;;;;;;:20;;;;;7117:28;;;;7113:67;;;7168:1;7161:8;;;;;;7113:67;7271:11;7311:9;7331:577;7345:3;7338:4;:10;7331:577;;;7530:17;;7483:1;7465:10;;;7478:1;7465:14;7464:20;;7450:11;;7530:4;;7464:20;;7530:17;;;;;;;;;;;;;;;7578:15;;7530:17;;-1:-1:-1;7578:15:0;;;;;7612;;;-1:-1:-1;7608:290:0;;;7653:3;7647:9;;7608:290;;;7689:7;7681:15;;:5;:15;;;7677:221;;;7811:1;7805:3;:7;7798:14;;7677:221;;;-1:-1:-1;7866:16:0;-1:-1:-1;;;7866:16:0;;-1:-1:-1;;;;;7866:16:0;;-1:-1:-1;7851:32:0;;-1:-1:-1;;;;;7851:32:0;7677:221;7331:577;;;;;;7933:4;:12;;7946:3;7933:17;;;;;;;;;;;;;;;;;:23;-1:-1:-1;;;7933:23:0;;-1:-1:-1;;;;;7933:23:0;;6427:1537;-1:-1:-1;;;;;;;6427:1537:0:o;834:176:7:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:134;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;2666:1095:15:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:15;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:15;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:15;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:15;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:15;3659:85;;;;-1:-1:-1;;;3659:85:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:187:7;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1837:29:7;-1:-1:-1;;;1888:5:7;;;1732:187::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../Staking.sol\";\n\n\ncontract StakingUpgraded is Staking {\n    function newFunction() public view returns (uint256) {\n        _requireIsInitialized();\n\n        return 5;\n    }\n}\n",
  "sourcePath": "/usr/src/app/contracts/test/StakingUpgraded.sol",
  "ast": {
    "absolutePath": "project:/contracts/test/StakingUpgraded.sol",
    "exportedSymbols": {
      "StakingUpgraded": [
        20796
      ]
    },
    "id": 20797,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20781,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:45"
      },
      {
        "absolutePath": "project:/contracts/Staking.sol",
        "file": "../Staking.sol",
        "id": 20782,
        "nodeType": "ImportDirective",
        "scope": 20797,
        "sourceUnit": 16519,
        "src": "25:24:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20783,
              "name": "Staking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16518,
              "src": "80:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Staking_$16518",
                "typeString": "contract Staking"
              }
            },
            "id": 20784,
            "nodeType": "InheritanceSpecifier",
            "src": "80:7:45"
          }
        ],
        "contractDependencies": [
          2330,
          12768,
          16518
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 20796,
        "linearizedBaseContracts": [
          20796,
          16518,
          12768,
          2330
        ],
        "name": "StakingUpgraded",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20794,
              "nodeType": "Block",
              "src": "147:59:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20789,
                      "name": "_requireIsInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12759,
                      "src": "157:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 20790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "157:23:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20791,
                  "nodeType": "ExpressionStatement",
                  "src": "157:23:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "35",
                    "id": 20792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "198:1:45",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  },
                  "functionReturnParameters": 20788,
                  "id": 20793,
                  "nodeType": "Return",
                  "src": "191:8:45"
                }
              ]
            },
            "documentation": null,
            "id": 20795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:2:45"
            },
            "returnParameters": {
              "id": 20788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20787,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20795,
                  "src": "138:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "138:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "137:9:45"
            },
            "scope": 20796,
            "src": "94:112:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 20797,
        "src": "52:156:45"
      }
    ],
    "src": "0:209:45"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/test/StakingUpgraded.sol",
      "exportedSymbols": {
        "StakingUpgraded": [
          20796
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 20781,
        "name": "PragmaDirective",
        "src": "0:23:45"
      },
      {
        "attributes": {
          "SourceUnit": 16519,
          "absolutePath": "project:/contracts/Staking.sol",
          "file": "../Staking.sol",
          "scope": 20797,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 20782,
        "name": "ImportDirective",
        "src": "25:24:45"
      },
      {
        "attributes": {
          "contractDependencies": [
            2330,
            12768,
            16518
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            20796,
            16518,
            12768,
            2330
          ],
          "name": "StakingUpgraded",
          "scope": 20797
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Staking",
                  "referencedDeclaration": 16518,
                  "type": "contract Staking"
                },
                "id": 20783,
                "name": "UserDefinedTypeName",
                "src": "80:7:45"
              }
            ],
            "id": 20784,
            "name": "InheritanceSpecifier",
            "src": "80:7:45"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "newFunction",
              "scope": 20796,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 20785,
                "name": "ParameterList",
                "src": "114:2:45"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 20795,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 20786,
                        "name": "ElementaryTypeName",
                        "src": "138:7:45"
                      }
                    ],
                    "id": 20787,
                    "name": "VariableDeclaration",
                    "src": "138:7:45"
                  }
                ],
                "id": 20788,
                "name": "ParameterList",
                "src": "137:9:45"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12759,
                              "type": "function () view",
                              "value": "_requireIsInitialized"
                            },
                            "id": 20789,
                            "name": "Identifier",
                            "src": "157:21:45"
                          }
                        ],
                        "id": 20790,
                        "name": "FunctionCall",
                        "src": "157:23:45"
                      }
                    ],
                    "id": 20791,
                    "name": "ExpressionStatement",
                    "src": "157:23:45"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 20788
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "35",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 5",
                          "value": "5"
                        },
                        "id": 20792,
                        "name": "Literal",
                        "src": "198:1:45"
                      }
                    ],
                    "id": 20793,
                    "name": "Return",
                    "src": "191:8:45"
                  }
                ],
                "id": 20794,
                "name": "Block",
                "src": "147:59:45"
              }
            ],
            "id": 20795,
            "name": "FunctionDefinition",
            "src": "94:112:45"
          }
        ],
        "id": 20796,
        "name": "ContractDefinition",
        "src": "52:156:45"
      }
    ],
    "id": 20797,
    "name": "SourceUnit",
    "src": "0:209:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2023-03-02T06:41:29.441Z",
  "devdoc": {
    "methods": {
      "delegateStakeFor(address,address,uint256)": {
        "params": {
          "_accountAddress": "- The final staker of the tokens",
          "_amount": "- Number of tokens staked",
          "_delegatorAddress": "- Address from which to transfer tokens"
        }
      },
      "initialize(address,address)": {
        "details": "claimsManagerAddress must be initialized separately after ClaimsManager contract is deployeddelegateManagerAddress must be initialized separately after DelegateManager contract is deployedserviceProviderFactoryAddress must be initialized separately after ServiceProviderFactory contract is deployed",
        "params": {
          "_governanceAddress": "- address for Governance proxy contract",
          "_tokenAddress": "- address of ERC20 token that will be staked"
        }
      },
      "isStaker(address)": {
        "params": {
          "_accountAddress": "- Account requesting for"
        },
        "return": "Boolean indicating whether account is a staker"
      },
      "lastClaimedFor(address)": {
        "params": {
          "_accountAddress": "- Account requesting for"
        },
        "return": "Last block number when claim requested"
      },
      "lastStakedFor(address)": {
        "params": {
          "_accountAddress": "- Account requesting for"
        },
        "return": "Last block number when account's balance was modified"
      },
      "setClaimsManagerAddress(address)": {
        "details": "Only callable by Governance address",
        "params": {
          "_claimsManager": "- address for new ClaimsManaager contract"
        }
      },
      "setDelegateManagerAddress(address)": {
        "details": "Only callable by Governance address",
        "params": {
          "_delegateManager": "- address for new DelegateManager contract"
        }
      },
      "setGovernanceAddress(address)": {
        "details": "Only callable by Governance address",
        "params": {
          "_governanceAddress": "- address for new Governance contract"
        }
      },
      "setServiceProviderFactoryAddress(address)": {
        "details": "Only callable by Governance address",
        "params": {
          "_spFactory": "- address for new ServiceProviderFactory contract"
        }
      },
      "slash(uint256,address)": {
        "details": "Callable from DelegateManager",
        "params": {
          "_amount": "- Number of tokens slashed",
          "_slashAddress": "- Address being slashed"
        }
      },
      "stakeFor(address,uint256)": {
        "params": {
          "_accountAddress": "- The final staker of the tokens",
          "_amount": "- Number of tokens staked"
        }
      },
      "stakeRewards(uint256,address)": {
        "params": {
          "_amount": "- amount of rewards to  add to stake",
          "_stakerAccount": "- address of staker"
        }
      },
      "supportsHistory()": {
        "return": "Always true"
      },
      "token()": {
        "return": "The token used by the contract for staking and locking"
      },
      "totalStaked()": {
        "return": "The total amount of tokens staked by all users"
      },
      "totalStakedAt(uint256)": {
        "params": {
          "_blockNumber": "- Block number at which we are requesting"
        },
        "return": "The amount of tokens staked at the given block number"
      },
      "totalStakedFor(address)": {
        "params": {
          "_accountAddress": "- The owner of the tokens"
        },
        "return": "The amount of tokens staked by the given account"
      },
      "totalStakedForAt(address,uint256)": {
        "params": {
          "_accountAddress": "- Account requesting for",
          "_blockNumber": "- Block number at which we are requesting"
        },
        "return": "The amount of tokens staked by the account at the given block number"
      },
      "undelegateStakeFor(address,address,uint256)": {
        "params": {
          "_accountAddress": "- The staker of the tokens",
          "_amount": "- Number of tokens unstaked",
          "_delegatorAddress": "- Address from which to transfer tokens"
        }
      },
      "unstakeFor(address,uint256)": {
        "params": {
          "_accountAddress": "- Account unstaked for, and token recipient",
          "_amount": "- Number of tokens staked"
        }
      },
      "updateClaimHistory(uint256,address)": {
        "params": {
          "_amount": "- amount to add to claim history",
          "_stakerAccount": "- address of staker"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "delegateStakeFor(address,address,uint256)": {
        "notice": "Stakes `_amount` tokens, transferring them from `_delegatorAddress` to `_accountAddress`, only callable by DelegateManager"
      },
      "getClaimsManagerAddress()": {
        "notice": "Get the ClaimsManager address"
      },
      "getDelegateManagerAddress()": {
        "notice": "Get the DelegateManager address"
      },
      "getGovernanceAddress()": {
        "notice": "Get the Governance address"
      },
      "getServiceProviderFactoryAddress()": {
        "notice": "Get the ServiceProviderFactory address"
      },
      "initialize()": {
        "notice": "wrapper function around parent contract Initializable's `initializable` modifier     initializable modifier ensures this function can only be called once by each deployed child contract     sets isInitialized flag to true to which is used by _requireIsInitialized()"
      },
      "initialize(address,address)": {
        "notice": "Function to initialize the contract"
      },
      "isStaker(address)": {
        "notice": "Helper function wrapped around totalStakedFor. Checks whether _accountAddress is currently a valid staker with a non-zero stake"
      },
      "lastClaimedFor(address)": {
        "notice": "Get last time `_accountAddress` claimed a staking reward"
      },
      "lastStakedFor(address)": {
        "notice": "Get last time `_accountAddress` modified its staked balance"
      },
      "setClaimsManagerAddress(address)": {
        "notice": "Set the ClaimsManaager address"
      },
      "setDelegateManagerAddress(address)": {
        "notice": "Set the DelegateManager address"
      },
      "setGovernanceAddress(address)": {
        "notice": "Set the Governance address"
      },
      "setServiceProviderFactoryAddress(address)": {
        "notice": "Set the ServiceProviderFactory address"
      },
      "slash(uint256,address)": {
        "notice": "Slashes `_amount` tokens from _slashAddress"
      },
      "stakeFor(address,uint256)": {
        "notice": "Stakes `_amount` tokens, transferring them from _accountAddress, and assigns them to `_accountAddress`"
      },
      "stakeRewards(uint256,address)": {
        "notice": "Funds `_amount` of tokens from ClaimsManager to target account"
      },
      "supportsHistory()": {
        "notice": "Check whether it supports history of stakes"
      },
      "token()": {
        "notice": "Get the token used by the contract for staking and locking"
      },
      "totalStaked()": {
        "notice": "Get the total amount of tokens staked by all users"
      },
      "totalStakedAt(uint256)": {
        "notice": "Get the total amount of tokens staked by all users at block number `_blockNumber`"
      },
      "totalStakedFor(address)": {
        "notice": "Get the amount of tokens staked by `_accountAddress`"
      },
      "totalStakedForAt(address,uint256)": {
        "notice": "Get the total amount of tokens staked by `_accountAddress` at block number `_blockNumber`"
      },
      "undelegateStakeFor(address,address,uint256)": {
        "notice": "Unstakes '_amount` tokens, transferring them from `_accountAddress` to `_delegatorAddress`, only callable by DelegateManager"
      },
      "unstakeFor(address,uint256)": {
        "notice": "Unstakes `_amount` tokens, returning them to the desired account."
      },
      "updateClaimHistory(uint256,address)": {
        "notice": "Update claim history by adding an event to the claim history"
      }
    }
  }
}