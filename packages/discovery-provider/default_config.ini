[discprov]
start_block = 0x0
loglevel_flask = INFO
; do not configure the log level here as this gets overridden by celery lib during setup
; set log level via command line in docker yml files instead
; loglevel_celery = INFO
block_processing_window = 20
block_processing_interval_sec = 1
peer_refresh_interval = 3000
identity_service_url = http://audius-protocol-identity-service-1
healthy_block_diff = 100
notifications_max_block_diff = 50
notifications_max_slot_diff = 200
url =
env = dev
trending_refresh_seconds = 3600
infra_setup =
indexing_transaction_index_sort_order_start_block =
max_signers = 0
comment_karma_threshold = 1700000

[flask]
debug = true
testing = false
jsonify_prettyprint_regular = true
secret_key = LOCAL_SECRET_KEY
session_cookie_secure = false

[web3]
; note that host and port have higher precedence over provider_url
host = localhost
port = 8545
eth_provider_url = http://localhost:8546

[solana]
track_listen_count_address = 7K3UpbZViPnQDLn2DAM853B9J5GBxd1L1rLHy4KqSmWG
signer_group_address = FbfwE8ZmVdwUbbEXdq4ofhuUEiAxeSk5kaoYrJJekpnZ
endpoint =
user_bank_min_slot = 0
payment_router_min_slot = 0
user_bank_program_address = Ewkv3JahEFRKkcJmpoKB7pXbnUHwjAyXiwEo4ZY2rezQ
payment_router_program_address = paytYpX3LPN98TAeen6bFFeraGSuWnomZmCXjAsoqPa
staking_brige_program_address = stkB5DZziVJT1C1VmzvDdRtdWxfs5nwcHViiaNBDK31
network_take_rate = 10
staking_bridge_usdc_payout_wallet = staking-bridge-usdc-payout-wallet
coinflow_program_address = FD1amxhTsDpwzoVX41dxp2ygAESURV2zdUACzxM1Dfw9
waudio_mint = 9LzCMqDgTKYz9Drzqnpgee3SGa89up3a247ypMj2xrqM
usdc_mint = EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v
rewards_manager_program_address = DDZDcYdQFEMwcu2Mwo75yGFjJ1mUQyyXLWzhZLEVFcei
rewards_manager_account = 8MzNUaBHskteN7poTrZG5wgSNSbXQwieMDB4wk9fgB7f
rewards_manager_min_slot = 0
anchor_data_program_id = 6znDH9AxEi9RSeDR7bt9PVYRUS4XxZLKhni96io9Aykb
anchor_admin_storage_public_key = 9Urkpt297u2BmLRpNrwsudDjK6jjcWxTaDZtyS2NRuqX

[nft]
helius_das_api_url = https://sol-collectibles.audius.workers.dev

[redis]
url = redis://localhost:5379/0

[db]
url = postgresql+psycopg2://postgres:postgres@db:5432/audius_discovery
url_read_replica = postgresql+psycopg2://postgres:postgres@db:5432/audius_discovery
run_migrations = true
engine_args_literal = {
    'pool_size': 20,
    'max_overflow': 10,
    'pool_recycle': 3600,
    'echo': False,
    'client_encoding': 'utf8',
    'connect_args': {'options': '-c timezone=utc'}
  }

[elasticsearch]
url = http://localhost:9200

[cors]
allow_all = false

[contracts]
registry =
entity_manager_address =
verified_address=0xbbbb93A6B3A1D6fDd27909729b95CCB0cc9002C0

[eth_contracts]
registry =
trusted_notifier_id = 1

[delegate]
owner_wallet = 0x1D9c77BcfBfa66D37390BF2335f0140979a6122B
private_key = 0x3873ed01bfb13621f9301487cc61326580614a5b99f3c33cf39c6f9da3a19cad

[serviceLocation]
serviceCountry =
serviceLatitude =
serviceLongitude =
