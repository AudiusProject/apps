# This config rate limits and redirect requests that exceed the rate limit to other discovery providers.

# The requests are rate limited by only allowing config.limit_to_rps requests every second to the discovery node; requests are redirected to other discovery nodes following this.

# To avoid infinite redirection, we set redirect_nonce, redirect_sig, and redirect_from when redirecting; the discovery provider receiving the redirect verifies this signature. We have a nonce to avoid an attacker from being able to get a valid redirect_sig since that could be used to focus a DDoS attack on a single node.

worker_processes 1;

error_log logs/error.log notice;

env audius_openresty_accept_redirect_from;
env audius_discprov_env;
env audius_openresty_rps;
env audius_openresty_redirect_targets;
env REGISTERED_PLUGINS;

events {
    worker_connections 4096;
}

http {
    # set dns nginx should use for resolving external domains
    resolver 1.1.1.1;

    map $audius_discprov_env $upstream_uri {
        default https://api.audius.co;
        stage   https://api.staging.audius.co;
    }

    proxy_cache_path /usr/local/openresty/cache levels=1:2 keys_zone=cache:10m max_size=1g inactive=1m use_temp_path=off;

    proxy_read_timeout 600; # 10 mins in seconds

    log_format custom_format '{"remote_addr":"$remote_addr",'
                            '"time_local":"$time_local",'
                            '"request":"$request",'
                            '"status":$status,'
                            '"body_bytes_sent":$body_bytes_sent,'
                            '"http_referer":"$http_referer",'
                            '"http_user_agent":"$http_user_agent",'
                            '"request_time":$request_time}';

    server {
        listen 5000;
        gzip on;
        gzip_types text/plain application/xml application/json;
        access_log /usr/local/openresty/logs/access.log custom_format;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $remote_addr;


        location /metabase {
            resolver 127.0.0.11 valid=30s;
            set $upstream metabase:3000;
            proxy_pass http://$upstream;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /comms {
            client_max_body_size 500M;
            resolver 127.0.0.11 valid=30s;
            set $upstream comms:8925;
            proxy_pass http://$upstream;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # for websockets:
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location ~ ^/relay(/.*)?$ {
            resolver 127.0.0.11 valid=30s;
            proxy_pass http://relay:6001/relay$1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/archive(/.*)?$ {
            resolver 127.0.0.11 valid=30s;
            proxy_pass http://archiver:6004/archive$1$is_args$args;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/health-check$ {
            resolver 127.0.0.11 valid=30s;
            set $upstream core:80;
            proxy_pass http://$upstream/health-check;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /d_api/uptime {
            resolver 127.0.0.11 valid=30s;
            set $upstream core:80;
            proxy_pass http://$upstream$request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        }

        location ~ ^/chain/?$ {
            resolver 127.0.0.11 valid=30s;
            set $upstream core:80;
            proxy_pass http://$upstream$request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/core(/.*)?$ {
            resolver 127.0.0.11 valid=30s;
            set $upstream core:80;
            proxy_pass http://$upstream$request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/console(/.*)?$ {
            resolver 127.0.0.11 valid=30s;
            set $upstream core:80;
            proxy_pass http://$upstream$request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/solana(/.*)?$ {
            resolver 127.0.0.11 valid=30s;
            proxy_pass http://solana-relay:6002/solana$1$is_args$args;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/attestation(/.*)?$ {
            resolver 127.0.0.11 valid=30s;
            proxy_pass http://anti-abuse:6003$request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/plugins/(?<upstream>\w+)/(.*)$ {
            resolver 127.0.0.11 valid=30s;
            proxy_pass http://$upstream:6000/$2$is_args$args;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
            resolver 1.1.1.1 valid=30s;
            proxy_pass $upstream_uri$request_uri;
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # TLS to upstream
            proxy_ssl_server_name on;
            proxy_ssl_verify on;
            # Alpine/Debian default CA bundle path:
            proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
        }
    }
}
