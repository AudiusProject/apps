# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.tasks.core.audiusd_gen.core.v1 import types_pb2 as core_dot_v1_dot_types__pb2


class CoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/core.v1.CoreService/Ping',
                request_serializer=core_dot_v1_dot_types__pb2.PingRequest.SerializeToString,
                response_deserializer=core_dot_v1_dot_types__pb2.PingResponse.FromString,
                _registered_method=True)
        self.GetHealth = channel.unary_unary(
                '/core.v1.CoreService/GetHealth',
                request_serializer=core_dot_v1_dot_types__pb2.GetHealthRequest.SerializeToString,
                response_deserializer=core_dot_v1_dot_types__pb2.GetHealthResponse.FromString,
                _registered_method=True)
        self.GetNodeInfo = channel.unary_unary(
                '/core.v1.CoreService/GetNodeInfo',
                request_serializer=core_dot_v1_dot_types__pb2.GetNodeInfoRequest.SerializeToString,
                response_deserializer=core_dot_v1_dot_types__pb2.GetNodeInfoResponse.FromString,
                _registered_method=True)
        self.GetBlock = channel.unary_unary(
                '/core.v1.CoreService/GetBlock',
                request_serializer=core_dot_v1_dot_types__pb2.GetBlockRequest.SerializeToString,
                response_deserializer=core_dot_v1_dot_types__pb2.GetBlockResponse.FromString,
                _registered_method=True)
        self.GetTransaction = channel.unary_unary(
                '/core.v1.CoreService/GetTransaction',
                request_serializer=core_dot_v1_dot_types__pb2.GetTransactionRequest.SerializeToString,
                response_deserializer=core_dot_v1_dot_types__pb2.GetTransactionResponse.FromString,
                _registered_method=True)
        self.SendTransaction = channel.unary_unary(
                '/core.v1.CoreService/SendTransaction',
                request_serializer=core_dot_v1_dot_types__pb2.SendTransactionRequest.SerializeToString,
                response_deserializer=core_dot_v1_dot_types__pb2.SendTransactionResponse.FromString,
                _registered_method=True)
        self.ForwardTransaction = channel.unary_unary(
                '/core.v1.CoreService/ForwardTransaction',
                request_serializer=core_dot_v1_dot_types__pb2.ForwardTransactionRequest.SerializeToString,
                response_deserializer=core_dot_v1_dot_types__pb2.ForwardTransactionResponse.FromString,
                _registered_method=True)
        self.GetRegistrationAttestation = channel.unary_unary(
                '/core.v1.CoreService/GetRegistrationAttestation',
                request_serializer=core_dot_v1_dot_types__pb2.GetRegistrationAttestationRequest.SerializeToString,
                response_deserializer=core_dot_v1_dot_types__pb2.GetRegistrationAttestationResponse.FromString,
                _registered_method=True)
        self.GetDeregistrationAttestation = channel.unary_unary(
                '/core.v1.CoreService/GetDeregistrationAttestation',
                request_serializer=core_dot_v1_dot_types__pb2.GetDeregistrationAttestationRequest.SerializeToString,
                response_deserializer=core_dot_v1_dot_types__pb2.GetDeregistrationAttestationResponse.FromString,
                _registered_method=True)


class CoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHealth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForwardTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRegistrationAttestation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeregistrationAttestation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=core_dot_v1_dot_types__pb2.PingRequest.FromString,
                    response_serializer=core_dot_v1_dot_types__pb2.PingResponse.SerializeToString,
            ),
            'GetHealth': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHealth,
                    request_deserializer=core_dot_v1_dot_types__pb2.GetHealthRequest.FromString,
                    response_serializer=core_dot_v1_dot_types__pb2.GetHealthResponse.SerializeToString,
            ),
            'GetNodeInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeInfo,
                    request_deserializer=core_dot_v1_dot_types__pb2.GetNodeInfoRequest.FromString,
                    response_serializer=core_dot_v1_dot_types__pb2.GetNodeInfoResponse.SerializeToString,
            ),
            'GetBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlock,
                    request_deserializer=core_dot_v1_dot_types__pb2.GetBlockRequest.FromString,
                    response_serializer=core_dot_v1_dot_types__pb2.GetBlockResponse.SerializeToString,
            ),
            'GetTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransaction,
                    request_deserializer=core_dot_v1_dot_types__pb2.GetTransactionRequest.FromString,
                    response_serializer=core_dot_v1_dot_types__pb2.GetTransactionResponse.SerializeToString,
            ),
            'SendTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTransaction,
                    request_deserializer=core_dot_v1_dot_types__pb2.SendTransactionRequest.FromString,
                    response_serializer=core_dot_v1_dot_types__pb2.SendTransactionResponse.SerializeToString,
            ),
            'ForwardTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.ForwardTransaction,
                    request_deserializer=core_dot_v1_dot_types__pb2.ForwardTransactionRequest.FromString,
                    response_serializer=core_dot_v1_dot_types__pb2.ForwardTransactionResponse.SerializeToString,
            ),
            'GetRegistrationAttestation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRegistrationAttestation,
                    request_deserializer=core_dot_v1_dot_types__pb2.GetRegistrationAttestationRequest.FromString,
                    response_serializer=core_dot_v1_dot_types__pb2.GetRegistrationAttestationResponse.SerializeToString,
            ),
            'GetDeregistrationAttestation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeregistrationAttestation,
                    request_deserializer=core_dot_v1_dot_types__pb2.GetDeregistrationAttestationRequest.FromString,
                    response_serializer=core_dot_v1_dot_types__pb2.GetDeregistrationAttestationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'core.v1.CoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('core.v1.CoreService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CoreService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.CoreService/Ping',
            core_dot_v1_dot_types__pb2.PingRequest.SerializeToString,
            core_dot_v1_dot_types__pb2.PingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetHealth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.CoreService/GetHealth',
            core_dot_v1_dot_types__pb2.GetHealthRequest.SerializeToString,
            core_dot_v1_dot_types__pb2.GetHealthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNodeInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.CoreService/GetNodeInfo',
            core_dot_v1_dot_types__pb2.GetNodeInfoRequest.SerializeToString,
            core_dot_v1_dot_types__pb2.GetNodeInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.CoreService/GetBlock',
            core_dot_v1_dot_types__pb2.GetBlockRequest.SerializeToString,
            core_dot_v1_dot_types__pb2.GetBlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.CoreService/GetTransaction',
            core_dot_v1_dot_types__pb2.GetTransactionRequest.SerializeToString,
            core_dot_v1_dot_types__pb2.GetTransactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.CoreService/SendTransaction',
            core_dot_v1_dot_types__pb2.SendTransactionRequest.SerializeToString,
            core_dot_v1_dot_types__pb2.SendTransactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ForwardTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.CoreService/ForwardTransaction',
            core_dot_v1_dot_types__pb2.ForwardTransactionRequest.SerializeToString,
            core_dot_v1_dot_types__pb2.ForwardTransactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRegistrationAttestation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.CoreService/GetRegistrationAttestation',
            core_dot_v1_dot_types__pb2.GetRegistrationAttestationRequest.SerializeToString,
            core_dot_v1_dot_types__pb2.GetRegistrationAttestationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDeregistrationAttestation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.CoreService/GetDeregistrationAttestation',
            core_dot_v1_dot_types__pb2.GetDeregistrationAttestationRequest.SerializeToString,
            core_dot_v1_dot_types__pb2.GetDeregistrationAttestationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
