/* The absolute root of the entire component, including assistive text */
.root {
  /* This isolates z-index to only affect this component */
  isolation: isolate;
}

/* The inputRoot is the root container of all things that aren't assistive text */
.inputRoot {
  display: flex;
  align-items: center;
  /* Dont need Y padding since the flex centering takes care of it */
  padding: 0 var(--harmony-spacing-l);
  /* The gap spaces the content around the icons */
  border: 1px solid var(--harmony-border-default);
  border-radius: var(--harmony-unit-1);
  background-color: var(--harmony-bg-surface-1);
  transition: border ease-in-out 0.1s;
  box-sizing: border-box;
  & svg path {
    fill: var(--harmony-text-subdued);
  }
}

/* hover border color */
.inputRoot:hover {
  border-color: var(--harmony-border-strong);
}

/* small input size */
.small {
  /* gap between icons & content */
  gap: var(--harmony-spacing-s);
  font-size: var(--harmony-font-s);
  height: 34px;
}

/* default input size */
.default {
  /* gap between icons & content */
  gap: var(--harmony-spacing-m);
  font-size: var(--harmony-font-m);
  height: 64px;
}

/* focused border color */
.focused,
.focused:hover {
  border-color: var(--harmony-secondary);
}

/* warning border color */
.warning,
.warning.focused,
.warning:hover {
  border-color: var(--harmony-orange);
}

/* error border color */
.error,
.error.focused,
.error:hover {
  border-color: var(--harmony-red);
}

/* disabled styles */
.disabled {
  cursor: not-allowed;
  & * {
    cursor: not-allowed;
  }
}

/* Actual input element */
.inputElement {
  padding: 0;
  overflow: visible;
  width: 100%;
  height: 100%;
  outline: 0;
  border: 0;
  background: none;
  font-weight: var(--harmony-font-medium);
  color: var(--harmony-text-default);
  text-overflow: ellipsis;
}

.inputElement.disabled,
.inputElement.disabled::placeholder {
  color: var(--harmony-text-subdued);
}

/* Change font size of the input based on size */
.inputElement.small {
  font-size: var(--harmony-font-s);
}
.inputElement.default {
  font-size: var(--harmony-font-l);
}

/* Placeholder and label text styles (they are the same for the most part) */
.inputElement::placeholder,
.label {
  color: var(--harmony-text-default);
  font-weight: var(--harmony-font-medium);
  font-family: var(--harmony-font-family);
}

/* The row containing the input + adornments */
.inputAdornmentRow {
  width: 100%;
  justify-content: space-between;
}

/** 
 * Container inbetween the icons, contains the label + input + maxlength text + adornments
 **/
.innerRootContainer {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: var(--harmony-spacing-xs);
}

/** Adds the "*" to required fields, but have it disappear when elevated **/
.required:not(.focused) .innerRootContainer .placeholder:not(.hasValue)::after {
  content: ' *';
}

/** Position the label in the center when unfocussed **/
.label {
  color: var(--harmony-text-subdued);
  z-index: 2;
  transition: all 0.3s ease;
  /* When not focussed, the label centers itself visually */
  transform: translate(
    0px,
    13px
  ); /* 13px is a ✨magic✨ number that makes it look centered with the input */
}

/** Shrink the size of the label **/
.focused .innerRootContainer .label,
.hasValue {
  transform: translate(0, 0);
  font-size: var(--harmony-font-s);
}
