/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DeveloperApp
 */
export interface DeveloperApp {
    /**
     * 
     * @type {string}
     * @memberof DeveloperApp
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof DeveloperApp
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof DeveloperApp
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DeveloperApp
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof DeveloperApp
     */
    imageUrl?: string;
}

/**
 * Check if a given object implements the DeveloperApp interface.
 */
export function instanceOfDeveloperApp(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value && value["address"] !== undefined;
    isInstance = isInstance && "userId" in value && value["userId"] !== undefined;
    isInstance = isInstance && "name" in value && value["name"] !== undefined;

    return isInstance;
}

export function DeveloperAppFromJSON(json: any): DeveloperApp {
    return DeveloperAppFromJSONTyped(json, false);
}

export function DeveloperAppFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeveloperApp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': json['address'],
        'userId': json['user_id'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'imageUrl': !exists(json, 'image_url') ? undefined : json['image_url'],
    };
}

export function DeveloperAppToJSON(value?: DeveloperApp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'user_id': value.userId,
        'name': value.name,
        'description': value.description,
        'image_url': value.imageUrl,
    };
}

