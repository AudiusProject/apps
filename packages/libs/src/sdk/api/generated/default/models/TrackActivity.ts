/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Activity } from './Activity';
import {
    ActivityFromJSON,
    ActivityFromJSONTyped,
    ActivityToJSON,
} from './Activity';
import type { Track } from './Track';
import {
    TrackFromJSON,
    TrackFromJSONTyped,
    TrackToJSON,
} from './Track';

/**
 * 
 * @export
 * @interface TrackActivity
 */
export interface TrackActivity extends Activity {
    /**
     * 
     * @type {string}
     * @memberof TrackActivity
     */
    itemType: TrackActivityItemTypeEnum;
    /**
     * 
     * @type {Track}
     * @memberof TrackActivity
     */
    item: Track;
}


/**
 * @export
 */
export const TrackActivityItemTypeEnum = {
    Track: 'track'
} as const;
export type TrackActivityItemTypeEnum = typeof TrackActivityItemTypeEnum[keyof typeof TrackActivityItemTypeEnum];


/**
 * Check if a given object implements the TrackActivity interface.
 */
export function instanceOfTrackActivity(value: object): value is TrackActivity {
    let isInstance = true;
    isInstance = isInstance && "itemType" in value && value["itemType"] !== undefined;
    isInstance = isInstance && "item" in value && value["item"] !== undefined;

    return isInstance;
}

export function TrackActivityFromJSON(json: any): TrackActivity {
    return TrackActivityFromJSONTyped(json, false);
}

export function TrackActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackActivity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...ActivityFromJSONTyped(json, ignoreDiscriminator),
        'itemType': json['item_type'],
        'item': TrackFromJSON(json['item']),
    };
}

export function TrackActivityToJSON(value?: TrackActivity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...ActivityToJSON(value),
        'item_type': value.itemType,
        'item': TrackToJSON(value.item),
    };
}

