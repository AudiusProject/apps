/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosignNotificationAction } from './CosignNotificationAction';
import {
    CosignNotificationActionFromJSON,
    CosignNotificationActionFromJSONTyped,
    CosignNotificationActionToJSON,
} from './CosignNotificationAction';

/**
 * 
 * @export
 * @interface CosignNotification
 */
export interface CosignNotification {
    /**
     * 
     * @type {string}
     * @memberof CosignNotification
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof CosignNotification
     */
    groupId: string;
    /**
     * 
     * @type {boolean}
     * @memberof CosignNotification
     */
    isSeen: boolean;
    /**
     * 
     * @type {number}
     * @memberof CosignNotification
     */
    seenAt?: number;
    /**
     * 
     * @type {Array<CosignNotificationAction>}
     * @memberof CosignNotification
     */
    actions: Array<CosignNotificationAction>;
}

/**
 * Check if a given object implements the CosignNotification interface.
 */
export function instanceOfCosignNotification(value: object): value is CosignNotification {
    let isInstance = true;
    isInstance = isInstance && "type" in value && value["type"] !== undefined;
    isInstance = isInstance && "groupId" in value && value["groupId"] !== undefined;
    isInstance = isInstance && "isSeen" in value && value["isSeen"] !== undefined;
    isInstance = isInstance && "actions" in value && value["actions"] !== undefined;

    return isInstance;
}

export function CosignNotificationFromJSON(json: any): CosignNotification {
    return CosignNotificationFromJSONTyped(json, false);
}

export function CosignNotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosignNotification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'groupId': json['group_id'],
        'isSeen': json['is_seen'],
        'seenAt': !exists(json, 'seen_at') ? undefined : json['seen_at'],
        'actions': ((json['actions'] as Array<any>).map(CosignNotificationActionFromJSON)),
    };
}

export function CosignNotificationToJSON(value?: CosignNotification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'group_id': value.groupId,
        'is_seen': value.isSeen,
        'seen_at': value.seenAt,
        'actions': ((value.actions as Array<any>).map(CosignNotificationActionToJSON)),
    };
}

