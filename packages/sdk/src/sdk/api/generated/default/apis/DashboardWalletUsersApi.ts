/* tslint:disable */
// @ts-nocheck
/* eslint-disable */
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DashboardWalletUsersResponse,
} from '../models';
import {
    DashboardWalletUsersResponseFromJSON,
    DashboardWalletUsersResponseToJSON,
} from '../models';

export interface BulkGetDashboardWalletUsersRequest {
    wallets: Array<string>;
}

/**
 * 
 */
export class DashboardWalletUsersApi extends runtime.BaseAPI {

    /**
     * @hidden
     * Gets Audius user profiles connected to given dashboard wallet addresses
     */
    async bulkGetDashboardWalletUsersRaw(params: BulkGetDashboardWalletUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DashboardWalletUsersResponse>> {
        if (params.wallets === null || params.wallets === undefined) {
            throw new runtime.RequiredError('wallets','Required parameter params.wallets was null or undefined when calling bulkGetDashboardWalletUsers.');
        }

        const queryParameters: any = {};

        if (params.wallets) {
            queryParameters['wallets'] = params.wallets.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/dashboard_wallet_users`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DashboardWalletUsersResponseFromJSON(jsonValue));
    }

    /**
     * Gets Audius user profiles connected to given dashboard wallet addresses
     */


    async bulkGetDashboardWalletUsers(params: BulkGetDashboardWalletUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DashboardWalletUsersResponse> {
        const response = await this.bulkGetDashboardWalletUsersRaw(params, initOverrides);
        return await response.value();
    }

}
