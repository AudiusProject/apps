/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BestSellingItem
 */
export interface BestSellingItem {
    /**
     * 
     * @type {string}
     * @memberof BestSellingItem
     */
    contentId: string;
    /**
     * 
     * @type {string}
     * @memberof BestSellingItem
     */
    contentType?: BestSellingItemContentTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BestSellingItem
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof BestSellingItem
     */
    ownerId: string;
}


/**
 * @export
 */
export const BestSellingItemContentTypeEnum = {
    Track: 'track',
    Album: 'album'
} as const;
export type BestSellingItemContentTypeEnum = typeof BestSellingItemContentTypeEnum[keyof typeof BestSellingItemContentTypeEnum];


/**
 * Check if a given object implements the BestSellingItem interface.
 */
export function instanceOfBestSellingItem(value: object): value is BestSellingItem {
    let isInstance = true;
    isInstance = isInstance && "contentId" in value && value["contentId"] !== undefined;
    isInstance = isInstance && "title" in value && value["title"] !== undefined;
    isInstance = isInstance && "ownerId" in value && value["ownerId"] !== undefined;

    return isInstance;
}

export function BestSellingItemFromJSON(json: any): BestSellingItem {
    return BestSellingItemFromJSONTyped(json, false);
}

export function BestSellingItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): BestSellingItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contentId': json['content_id'],
        'contentType': !exists(json, 'content_type') ? undefined : json['content_type'],
        'title': json['title'],
        'ownerId': json['owner_id'],
    };
}

export function BestSellingItemToJSON(value?: BestSellingItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content_id': value.contentId,
        'content_type': value.contentType,
        'title': value.title,
        'owner_id': value.ownerId,
    };
}

