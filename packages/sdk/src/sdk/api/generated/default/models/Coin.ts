/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CoinTokenInfo } from './CoinTokenInfo';
import {
    CoinTokenInfoFromJSON,
    CoinTokenInfoFromJSONTyped,
    CoinTokenInfoToJSON,
} from './CoinTokenInfo';

/**
 * 
 * @export
 * @interface Coin
 */
export interface Coin {
    /**
     * The coin symbol
     * @type {string}
     * @memberof Coin
     */
    ticker: string;
    /**
     * The coin mint address
     * @type {string}
     * @memberof Coin
     */
    mint: string;
    /**
     * The ID of the user associated with the coin
     * @type {string}
     * @memberof Coin
     */
    userId: string;
    /**
     * The number of Audius users holding the coin
     * @type {number}
     * @memberof Coin
     */
    members: number;
    /**
     * The percentage change in the number of members holding the coin over the last 24 hours
     * @type {number}
     * @memberof Coin
     */
    membersChange24hPercent: number;
    /**
     * The date and time when the coin was added to Audius.
     * @type {string}
     * @memberof Coin
     */
    createdAt: string;
    /**
     * 
     * @type {CoinTokenInfo}
     * @memberof Coin
     */
    tokenInfo: CoinTokenInfo;
}

/**
 * Check if a given object implements the Coin interface.
 */
export function instanceOfCoin(value: object): value is Coin {
    let isInstance = true;
    isInstance = isInstance && "ticker" in value && value["ticker"] !== undefined;
    isInstance = isInstance && "mint" in value && value["mint"] !== undefined;
    isInstance = isInstance && "userId" in value && value["userId"] !== undefined;
    isInstance = isInstance && "members" in value && value["members"] !== undefined;
    isInstance = isInstance && "membersChange24hPercent" in value && value["membersChange24hPercent"] !== undefined;
    isInstance = isInstance && "createdAt" in value && value["createdAt"] !== undefined;
    isInstance = isInstance && "tokenInfo" in value && value["tokenInfo"] !== undefined;

    return isInstance;
}

export function CoinFromJSON(json: any): Coin {
    return CoinFromJSONTyped(json, false);
}

export function CoinFromJSONTyped(json: any, ignoreDiscriminator: boolean): Coin {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ticker': json['ticker'],
        'mint': json['mint'],
        'userId': json['user_id'],
        'members': json['members'],
        'membersChange24hPercent': json['members_change_24h_percent'],
        'createdAt': json['created_at'],
        'tokenInfo': CoinTokenInfoFromJSON(json['token_info']),
    };
}

export function CoinToJSON(value?: Coin | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ticker': value.ticker,
        'mint': value.mint,
        'user_id': value.userId,
        'members': value.members,
        'members_change_24h_percent': value.membersChange24hPercent,
        'created_at': value.createdAt,
        'token_info': CoinTokenInfoToJSON(value.tokenInfo),
    };
}

