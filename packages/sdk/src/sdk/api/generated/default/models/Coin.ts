/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CoinDynamicBondingCurve } from './CoinDynamicBondingCurve';
import {
    CoinDynamicBondingCurveFromJSON,
    CoinDynamicBondingCurveFromJSONTyped,
    CoinDynamicBondingCurveToJSON,
} from './CoinDynamicBondingCurve';
import type { CoinExtensions } from './CoinExtensions';
import {
    CoinExtensionsFromJSON,
    CoinExtensionsFromJSONTyped,
    CoinExtensionsToJSON,
} from './CoinExtensions';

/**
 * 
 * @export
 * @interface Coin
 */
export interface Coin {
    /**
     * The coin name
     * @type {string}
     * @memberof Coin
     */
    name: string;
    /**
     * The coin symbol
     * @type {string}
     * @memberof Coin
     */
    ticker?: string;
    /**
     * The coin mint address
     * @type {string}
     * @memberof Coin
     */
    mint: string;
    /**
     * The number of decimals for the coin
     * @type {number}
     * @memberof Coin
     */
    decimals: number;
    /**
     * The ID of the user associated with the coin
     * @type {string}
     * @memberof Coin
     */
    ownerId: string;
    /**
     * URL to the coin's logo image
     * @type {string}
     * @memberof Coin
     */
    logoUri?: string;
    /**
     * A longform description about the coin
     * @type {string}
     * @memberof Coin
     */
    description?: string;
    /**
     * The official website for the coin
     * @type {string}
     * @memberof Coin
     */
    website?: string;
    /**
     * The date and time when the coin was added to Audius.
     * @type {string}
     * @memberof Coin
     */
    createdAt: string;
    /**
     * The SPL token mint address
     * @type {string}
     * @memberof Coin
     */
    address?: string;
    /**
     * The token symbol
     * @type {string}
     * @memberof Coin
     */
    symbol?: string;
    /**
     * Market capitalization in USD
     * @type {number}
     * @memberof Coin
     */
    marketCap: number;
    /**
     * Fully diluted valuation in USD
     * @type {number}
     * @memberof Coin
     */
    fdv: number;
    /**
     * 
     * @type {CoinExtensions}
     * @memberof Coin
     */
    extensions?: CoinExtensions;
    /**
     * Current liquidity in USD
     * @type {number}
     * @memberof Coin
     */
    liquidity: number;
    /**
     * Unix timestamp of the last trade
     * @type {number}
     * @memberof Coin
     */
    lastTradeUnixTime: number;
    /**
     * ISO8601 time of the last trade
     * @type {string}
     * @memberof Coin
     */
    lastTradeHumanTime: string;
    /**
     * Current price in USD
     * @type {number}
     * @memberof Coin
     */
    price: number;
    /**
     * Price 24 hours ago in USD
     * @type {number}
     * @memberof Coin
     */
    history24hPrice: number;
    /**
     * 24h price change in percent
     * @type {number}
     * @memberof Coin
     */
    priceChange24hPercent: number;
    /**
     * Unique wallets traded in last 24h
     * @type {number}
     * @memberof Coin
     */
    uniqueWallet24h: number;
    /**
     * Unique wallets traded in previous 24h
     * @type {number}
     * @memberof Coin
     */
    uniqueWalletHistory24h: number;
    /**
     * 24h change in unique wallets (percent)
     * @type {number}
     * @memberof Coin
     */
    uniqueWallet24hChangePercent: number;
    /**
     * Total supply of the token
     * @type {number}
     * @memberof Coin
     */
    totalSupply: number;
    /**
     * Circulating supply of the token
     * @type {number}
     * @memberof Coin
     */
    circulatingSupply: number;
    /**
     * Number of holders
     * @type {number}
     * @memberof Coin
     */
    holder: number;
    /**
     * Number of trades in last 24h
     * @type {number}
     * @memberof Coin
     */
    trade24h: number;
    /**
     * Number of trades in previous 24h
     * @type {number}
     * @memberof Coin
     */
    tradeHistory24h: number;
    /**
     * 24h change in trade count (percent)
     * @type {number}
     * @memberof Coin
     */
    trade24hChangePercent: number;
    /**
     * Number of sell trades in last 24h
     * @type {number}
     * @memberof Coin
     */
    sell24h: number;
    /**
     * Number of sell trades in previous 24h
     * @type {number}
     * @memberof Coin
     */
    sellHistory24h: number;
    /**
     * 24h change in sell trades (percent)
     * @type {number}
     * @memberof Coin
     */
    sell24hChangePercent: number;
    /**
     * Number of buy trades in last 24h
     * @type {number}
     * @memberof Coin
     */
    buy24h: number;
    /**
     * Number of buy trades in previous 24h
     * @type {number}
     * @memberof Coin
     */
    buyHistory24h: number;
    /**
     * 24h change in buy trades (percent)
     * @type {number}
     * @memberof Coin
     */
    buy24hChangePercent: number;
    /**
     * 24h trading volume (token units)
     * @type {number}
     * @memberof Coin
     */
    v24h: number;
    /**
     * 24h trading volume in USD
     * @type {number}
     * @memberof Coin
     */
    v24hUSD: number;
    /**
     * Previous 24h trading volume (token units)
     * @type {number}
     * @memberof Coin
     */
    vHistory24h: number;
    /**
     * Previous 24h trading volume in USD
     * @type {number}
     * @memberof Coin
     */
    vHistory24hUSD?: number;
    /**
     * 24h change in volume (percent)
     * @type {number}
     * @memberof Coin
     */
    v24hChangePercent?: number;
    /**
     * 24h buy volume (token units)
     * @type {number}
     * @memberof Coin
     */
    vBuy24h?: number;
    /**
     * 24h buy volume in USD
     * @type {number}
     * @memberof Coin
     */
    vBuy24hUSD?: number;
    /**
     * Previous 24h buy volume (token units)
     * @type {number}
     * @memberof Coin
     */
    vBuyHistory24h?: number;
    /**
     * Previous 24h buy volume in USD
     * @type {number}
     * @memberof Coin
     */
    vBuyHistory24hUSD?: number;
    /**
     * 24h change in buy volume (percent)
     * @type {number}
     * @memberof Coin
     */
    vBuy24hChangePercent?: number;
    /**
     * 24h sell volume (token units)
     * @type {number}
     * @memberof Coin
     */
    vSell24h?: number;
    /**
     * 24h sell volume in USD
     * @type {number}
     * @memberof Coin
     */
    vSell24hUSD?: number;
    /**
     * Previous 24h sell volume (token units)
     * @type {number}
     * @memberof Coin
     */
    vSellHistory24h?: number;
    /**
     * Previous 24h sell volume in USD
     * @type {number}
     * @memberof Coin
     */
    vSellHistory24hUSD?: number;
    /**
     * 24h change in sell volume (percent)
     * @type {number}
     * @memberof Coin
     */
    vSell24hChangePercent?: number;
    /**
     * Number of markets the token is traded on
     * @type {number}
     * @memberof Coin
     */
    numberMarkets?: number;
    /**
     * 
     * @type {CoinDynamicBondingCurve}
     * @memberof Coin
     */
    dynamicBondingCurve: CoinDynamicBondingCurve;
}

/**
 * Check if a given object implements the Coin interface.
 */
export function instanceOfCoin(value: object): value is Coin {
    let isInstance = true;
    isInstance = isInstance && "name" in value && value["name"] !== undefined;
    isInstance = isInstance && "mint" in value && value["mint"] !== undefined;
    isInstance = isInstance && "decimals" in value && value["decimals"] !== undefined;
    isInstance = isInstance && "ownerId" in value && value["ownerId"] !== undefined;
    isInstance = isInstance && "createdAt" in value && value["createdAt"] !== undefined;
    isInstance = isInstance && "marketCap" in value && value["marketCap"] !== undefined;
    isInstance = isInstance && "fdv" in value && value["fdv"] !== undefined;
    isInstance = isInstance && "liquidity" in value && value["liquidity"] !== undefined;
    isInstance = isInstance && "lastTradeUnixTime" in value && value["lastTradeUnixTime"] !== undefined;
    isInstance = isInstance && "lastTradeHumanTime" in value && value["lastTradeHumanTime"] !== undefined;
    isInstance = isInstance && "price" in value && value["price"] !== undefined;
    isInstance = isInstance && "history24hPrice" in value && value["history24hPrice"] !== undefined;
    isInstance = isInstance && "priceChange24hPercent" in value && value["priceChange24hPercent"] !== undefined;
    isInstance = isInstance && "uniqueWallet24h" in value && value["uniqueWallet24h"] !== undefined;
    isInstance = isInstance && "uniqueWalletHistory24h" in value && value["uniqueWalletHistory24h"] !== undefined;
    isInstance = isInstance && "uniqueWallet24hChangePercent" in value && value["uniqueWallet24hChangePercent"] !== undefined;
    isInstance = isInstance && "totalSupply" in value && value["totalSupply"] !== undefined;
    isInstance = isInstance && "circulatingSupply" in value && value["circulatingSupply"] !== undefined;
    isInstance = isInstance && "holder" in value && value["holder"] !== undefined;
    isInstance = isInstance && "trade24h" in value && value["trade24h"] !== undefined;
    isInstance = isInstance && "tradeHistory24h" in value && value["tradeHistory24h"] !== undefined;
    isInstance = isInstance && "trade24hChangePercent" in value && value["trade24hChangePercent"] !== undefined;
    isInstance = isInstance && "sell24h" in value && value["sell24h"] !== undefined;
    isInstance = isInstance && "sellHistory24h" in value && value["sellHistory24h"] !== undefined;
    isInstance = isInstance && "sell24hChangePercent" in value && value["sell24hChangePercent"] !== undefined;
    isInstance = isInstance && "buy24h" in value && value["buy24h"] !== undefined;
    isInstance = isInstance && "buyHistory24h" in value && value["buyHistory24h"] !== undefined;
    isInstance = isInstance && "buy24hChangePercent" in value && value["buy24hChangePercent"] !== undefined;
    isInstance = isInstance && "v24h" in value && value["v24h"] !== undefined;
    isInstance = isInstance && "v24hUSD" in value && value["v24hUSD"] !== undefined;
    isInstance = isInstance && "vHistory24h" in value && value["vHistory24h"] !== undefined;
    isInstance = isInstance && "dynamicBondingCurve" in value && value["dynamicBondingCurve"] !== undefined;

    return isInstance;
}

export function CoinFromJSON(json: any): Coin {
    return CoinFromJSONTyped(json, false);
}

export function CoinFromJSONTyped(json: any, ignoreDiscriminator: boolean): Coin {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'ticker': !exists(json, 'ticker') ? undefined : json['ticker'],
        'mint': json['mint'],
        'decimals': json['decimals'],
        'ownerId': json['owner_id'],
        'logoUri': !exists(json, 'logo_uri') ? undefined : json['logo_uri'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'website': !exists(json, 'website') ? undefined : json['website'],
        'createdAt': json['created_at'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],
        'marketCap': json['marketCap'],
        'fdv': json['fdv'],
        'extensions': !exists(json, 'extensions') ? undefined : CoinExtensionsFromJSON(json['extensions']),
        'liquidity': json['liquidity'],
        'lastTradeUnixTime': json['lastTradeUnixTime'],
        'lastTradeHumanTime': json['lastTradeHumanTime'],
        'price': json['price'],
        'history24hPrice': json['history24hPrice'],
        'priceChange24hPercent': json['priceChange24hPercent'],
        'uniqueWallet24h': json['uniqueWallet24h'],
        'uniqueWalletHistory24h': json['uniqueWalletHistory24h'],
        'uniqueWallet24hChangePercent': json['uniqueWallet24hChangePercent'],
        'totalSupply': json['totalSupply'],
        'circulatingSupply': json['circulatingSupply'],
        'holder': json['holder'],
        'trade24h': json['trade24h'],
        'tradeHistory24h': json['tradeHistory24h'],
        'trade24hChangePercent': json['trade24hChangePercent'],
        'sell24h': json['sell24h'],
        'sellHistory24h': json['sellHistory24h'],
        'sell24hChangePercent': json['sell24hChangePercent'],
        'buy24h': json['buy24h'],
        'buyHistory24h': json['buyHistory24h'],
        'buy24hChangePercent': json['buy24hChangePercent'],
        'v24h': json['v24h'],
        'v24hUSD': json['v24hUSD'],
        'vHistory24h': json['vHistory24h'],
        'vHistory24hUSD': !exists(json, 'vHistory24hUSD') ? undefined : json['vHistory24hUSD'],
        'v24hChangePercent': !exists(json, 'v24hChangePercent') ? undefined : json['v24hChangePercent'],
        'vBuy24h': !exists(json, 'vBuy24h') ? undefined : json['vBuy24h'],
        'vBuy24hUSD': !exists(json, 'vBuy24hUSD') ? undefined : json['vBuy24hUSD'],
        'vBuyHistory24h': !exists(json, 'vBuyHistory24h') ? undefined : json['vBuyHistory24h'],
        'vBuyHistory24hUSD': !exists(json, 'vBuyHistory24hUSD') ? undefined : json['vBuyHistory24hUSD'],
        'vBuy24hChangePercent': !exists(json, 'vBuy24hChangePercent') ? undefined : json['vBuy24hChangePercent'],
        'vSell24h': !exists(json, 'vSell24h') ? undefined : json['vSell24h'],
        'vSell24hUSD': !exists(json, 'vSell24hUSD') ? undefined : json['vSell24hUSD'],
        'vSellHistory24h': !exists(json, 'vSellHistory24h') ? undefined : json['vSellHistory24h'],
        'vSellHistory24hUSD': !exists(json, 'vSellHistory24hUSD') ? undefined : json['vSellHistory24hUSD'],
        'vSell24hChangePercent': !exists(json, 'vSell24hChangePercent') ? undefined : json['vSell24hChangePercent'],
        'numberMarkets': !exists(json, 'numberMarkets') ? undefined : json['numberMarkets'],
        'dynamicBondingCurve': CoinDynamicBondingCurveFromJSON(json['dynamicBondingCurve']),
    };
}

export function CoinToJSON(value?: Coin | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'ticker': value.ticker,
        'mint': value.mint,
        'decimals': value.decimals,
        'owner_id': value.ownerId,
        'logo_uri': value.logoUri,
        'description': value.description,
        'website': value.website,
        'created_at': value.createdAt,
        'address': value.address,
        'symbol': value.symbol,
        'marketCap': value.marketCap,
        'fdv': value.fdv,
        'extensions': CoinExtensionsToJSON(value.extensions),
        'liquidity': value.liquidity,
        'lastTradeUnixTime': value.lastTradeUnixTime,
        'lastTradeHumanTime': value.lastTradeHumanTime,
        'price': value.price,
        'history24hPrice': value.history24hPrice,
        'priceChange24hPercent': value.priceChange24hPercent,
        'uniqueWallet24h': value.uniqueWallet24h,
        'uniqueWalletHistory24h': value.uniqueWalletHistory24h,
        'uniqueWallet24hChangePercent': value.uniqueWallet24hChangePercent,
        'totalSupply': value.totalSupply,
        'circulatingSupply': value.circulatingSupply,
        'holder': value.holder,
        'trade24h': value.trade24h,
        'tradeHistory24h': value.tradeHistory24h,
        'trade24hChangePercent': value.trade24hChangePercent,
        'sell24h': value.sell24h,
        'sellHistory24h': value.sellHistory24h,
        'sell24hChangePercent': value.sell24hChangePercent,
        'buy24h': value.buy24h,
        'buyHistory24h': value.buyHistory24h,
        'buy24hChangePercent': value.buy24hChangePercent,
        'v24h': value.v24h,
        'v24hUSD': value.v24hUSD,
        'vHistory24h': value.vHistory24h,
        'vHistory24hUSD': value.vHistory24hUSD,
        'v24hChangePercent': value.v24hChangePercent,
        'vBuy24h': value.vBuy24h,
        'vBuy24hUSD': value.vBuy24hUSD,
        'vBuyHistory24h': value.vBuyHistory24h,
        'vBuyHistory24hUSD': value.vBuyHistory24hUSD,
        'vBuy24hChangePercent': value.vBuy24hChangePercent,
        'vSell24h': value.vSell24h,
        'vSell24hUSD': value.vSell24hUSD,
        'vSellHistory24h': value.vSellHistory24h,
        'vSellHistory24hUSD': value.vSellHistory24hUSD,
        'vSell24hChangePercent': value.vSell24hChangePercent,
        'numberMarkets': value.numberMarkets,
        'dynamicBondingCurve': CoinDynamicBondingCurveToJSON(value.dynamicBondingCurve),
    };
}

