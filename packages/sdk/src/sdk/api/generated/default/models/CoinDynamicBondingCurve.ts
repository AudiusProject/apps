/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about the dynamic bonding curve if one exists for the Coin
 * @export
 * @interface CoinDynamicBondingCurve
 */
export interface CoinDynamicBondingCurve {
    /**
     * Address of the bonding curve pool
     * @type {string}
     * @memberof CoinDynamicBondingCurve
     */
    address: string;
    /**
     * Current price in the pool's quote token (e.g., AUDIO)
     * @type {number}
     * @memberof CoinDynamicBondingCurve
     */
    price: number;
    /**
     * Current price in USD
     * @type {number}
     * @memberof CoinDynamicBondingCurve
     */
    priceUSD: number;
    /**
     * Progress along the bonding curve (0.0 - 1.0)
     * @type {number}
     * @memberof CoinDynamicBondingCurve
     */
    curveProgress: number;
    /**
     * Whether the bonding curve has been migrated
     * @type {boolean}
     * @memberof CoinDynamicBondingCurve
     */
    isMigrated?: boolean;
    /**
     * Creator quote fee for the bonding curve
     * @type {number}
     * @memberof CoinDynamicBondingCurve
     */
    creatorQuoteFee?: number;
}

/**
 * Check if a given object implements the CoinDynamicBondingCurve interface.
 */
export function instanceOfCoinDynamicBondingCurve(value: object): value is CoinDynamicBondingCurve {
    let isInstance = true;
    isInstance = isInstance && "address" in value && value["address"] !== undefined;
    isInstance = isInstance && "price" in value && value["price"] !== undefined;
    isInstance = isInstance && "priceUSD" in value && value["priceUSD"] !== undefined;
    isInstance = isInstance && "curveProgress" in value && value["curveProgress"] !== undefined;

    return isInstance;
}

export function CoinDynamicBondingCurveFromJSON(json: any): CoinDynamicBondingCurve {
    return CoinDynamicBondingCurveFromJSONTyped(json, false);
}

export function CoinDynamicBondingCurveFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoinDynamicBondingCurve {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': json['address'],
        'price': json['price'],
        'priceUSD': json['priceUSD'],
        'curveProgress': json['curveProgress'],
        'isMigrated': !exists(json, 'isMigrated') ? undefined : json['isMigrated'],
        'creatorQuoteFee': !exists(json, 'creatorQuoteFee') ? undefined : json['creatorQuoteFee'],
    };
}

export function CoinDynamicBondingCurveToJSON(value?: CoinDynamicBondingCurve | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'price': value.price,
        'priceUSD': value.priceUSD,
        'curveProgress': value.curveProgress,
        'isMigrated': value.isMigrated,
        'creatorQuoteFee': value.creatorQuoteFee,
    };
}

