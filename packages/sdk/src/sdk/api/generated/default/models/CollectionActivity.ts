/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Activity } from './Activity';
import {
    ActivityFromJSON,
    ActivityFromJSONTyped,
    ActivityToJSON,
} from './Activity';
import type { Playlist } from './Playlist';
import {
    PlaylistFromJSON,
    PlaylistFromJSONTyped,
    PlaylistToJSON,
} from './Playlist';

/**
 * 
 * @export
 * @interface CollectionActivity
 */
export interface CollectionActivity extends Activity {
    /**
     * 
     * @type {string}
     * @memberof CollectionActivity
     */
    timestamp?: string;
    /**
     * 
     * @type {string}
     * @memberof CollectionActivity
     */
    itemType: CollectionActivityItemTypeEnum;
    /**
     * 
     * @type {Playlist}
     * @memberof CollectionActivity
     */
    item: Playlist;
}


/**
 * @export
 */
export const CollectionActivityItemTypeEnum = {
    Playlist: 'playlist'
} as const;
export type CollectionActivityItemTypeEnum = typeof CollectionActivityItemTypeEnum[keyof typeof CollectionActivityItemTypeEnum];


/**
 * Check if a given object implements the CollectionActivity interface.
 */
export function instanceOfCollectionActivity(value: object): value is CollectionActivity {
    let isInstance = true;
    isInstance = isInstance && "itemType" in value && value["itemType"] !== undefined;
    isInstance = isInstance && "item" in value && value["item"] !== undefined;

    return isInstance;
}

export function CollectionActivityFromJSON(json: any): CollectionActivity {
    return CollectionActivityFromJSONTyped(json, false);
}

export function CollectionActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectionActivity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...ActivityFromJSONTyped(json, ignoreDiscriminator),
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
        'itemType': json['item_type'],
        'item': PlaylistFromJSON(json['item']),
    };
}

export function CollectionActivityToJSON(value?: CollectionActivity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...ActivityToJSON(value),
        'timestamp': value.timestamp,
        'item_type': value.itemType,
        'item': PlaylistToJSON(value.item),
    };
}

