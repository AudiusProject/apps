/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCoinRequest
 */
export interface CreateCoinRequest {
    /**
     * The mint address of the coin
     * @type {string}
     * @memberof CreateCoinRequest
     */
    mint: string;
    /**
     * The coin symbol/ticker
     * @type {string}
     * @memberof CreateCoinRequest
     */
    ticker: string;
    /**
     * The number of decimals for the coin (0-18)
     * @type {number}
     * @memberof CreateCoinRequest
     */
    decimals: number;
    /**
     * The coin name
     * @type {string}
     * @memberof CreateCoinRequest
     */
    name: string;
    /**
     * The URI for the coin's logo image
     * @type {string}
     * @memberof CreateCoinRequest
     */
    logoUri?: string;
}

/**
 * Check if a given object implements the CreateCoinRequest interface.
 */
export function instanceOfCreateCoinRequest(value: object): value is CreateCoinRequest {
    let isInstance = true;
    isInstance = isInstance && "mint" in value && value["mint"] !== undefined;
    isInstance = isInstance && "ticker" in value && value["ticker"] !== undefined;
    isInstance = isInstance && "decimals" in value && value["decimals"] !== undefined;
    isInstance = isInstance && "name" in value && value["name"] !== undefined;

    return isInstance;
}

export function CreateCoinRequestFromJSON(json: any): CreateCoinRequest {
    return CreateCoinRequestFromJSONTyped(json, false);
}

export function CreateCoinRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCoinRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mint': json['mint'],
        'ticker': json['ticker'],
        'decimals': json['decimals'],
        'name': json['name'],
        'logoUri': !exists(json, 'logo_uri') ? undefined : json['logo_uri'],
    };
}

export function CreateCoinRequestToJSON(value?: CreateCoinRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mint': value.mint,
        'ticker': value.ticker,
        'decimals': value.decimals,
        'name': value.name,
        'logo_uri': value.logoUri,
    };
}

