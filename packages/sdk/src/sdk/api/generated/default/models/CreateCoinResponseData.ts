/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCoinResponseData
 */
export interface CreateCoinResponseData {
    /**
     * The mint address of the coin
     * @type {string}
     * @memberof CreateCoinResponseData
     */
    mint: string;
    /**
     * The coin symbol/ticker
     * @type {string}
     * @memberof CreateCoinResponseData
     */
    ticker: string;
    /**
     * The user ID who created the coin
     * @type {number}
     * @memberof CreateCoinResponseData
     */
    userId: number;
    /**
     * The number of decimals for the coin
     * @type {number}
     * @memberof CreateCoinResponseData
     */
    decimals: number;
    /**
     * The coin name
     * @type {string}
     * @memberof CreateCoinResponseData
     */
    name: string;
    /**
     * The URI for the coin's logo image
     * @type {string}
     * @memberof CreateCoinResponseData
     */
    logoUri?: string;
    /**
     * The date and time when the coin was created
     * @type {Date}
     * @memberof CreateCoinResponseData
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the CreateCoinResponseData interface.
 */
export function instanceOfCreateCoinResponseData(value: object): value is CreateCoinResponseData {
    let isInstance = true;
    isInstance = isInstance && "mint" in value && value["mint"] !== undefined;
    isInstance = isInstance && "ticker" in value && value["ticker"] !== undefined;
    isInstance = isInstance && "userId" in value && value["userId"] !== undefined;
    isInstance = isInstance && "decimals" in value && value["decimals"] !== undefined;
    isInstance = isInstance && "name" in value && value["name"] !== undefined;
    isInstance = isInstance && "createdAt" in value && value["createdAt"] !== undefined;

    return isInstance;
}

export function CreateCoinResponseDataFromJSON(json: any): CreateCoinResponseData {
    return CreateCoinResponseDataFromJSONTyped(json, false);
}

export function CreateCoinResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCoinResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'mint': json['mint'],
        'ticker': json['ticker'],
        'userId': json['user_id'],
        'decimals': json['decimals'],
        'name': json['name'],
        'logoUri': !exists(json, 'logo_uri') ? undefined : json['logo_uri'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function CreateCoinResponseDataToJSON(value?: CreateCoinResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'mint': value.mint,
        'ticker': value.ticker,
        'user_id': value.userId,
        'decimals': value.decimals,
        'name': value.name,
        'logo_uri': value.logoUri,
        'created_at': (value.createdAt.toISOString()),
    };
}

