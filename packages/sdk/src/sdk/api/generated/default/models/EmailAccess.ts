/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmailAccess
 */
export interface EmailAccess {
    /**
     * 
     * @type {number}
     * @memberof EmailAccess
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof EmailAccess
     */
    emailOwnerUserId: number;
    /**
     * 
     * @type {number}
     * @memberof EmailAccess
     */
    receivingUserId: number;
    /**
     * 
     * @type {number}
     * @memberof EmailAccess
     */
    grantorUserId: number;
    /**
     * 
     * @type {string}
     * @memberof EmailAccess
     */
    encryptedKey: string;
    /**
     * 
     * @type {boolean}
     * @memberof EmailAccess
     */
    isInitial: boolean;
    /**
     * 
     * @type {string}
     * @memberof EmailAccess
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof EmailAccess
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the EmailAccess interface.
 */
export function instanceOfEmailAccess(value: object): value is EmailAccess {
    let isInstance = true;
    isInstance = isInstance && "id" in value && value["id"] !== undefined;
    isInstance = isInstance && "emailOwnerUserId" in value && value["emailOwnerUserId"] !== undefined;
    isInstance = isInstance && "receivingUserId" in value && value["receivingUserId"] !== undefined;
    isInstance = isInstance && "grantorUserId" in value && value["grantorUserId"] !== undefined;
    isInstance = isInstance && "encryptedKey" in value && value["encryptedKey"] !== undefined;
    isInstance = isInstance && "isInitial" in value && value["isInitial"] !== undefined;
    isInstance = isInstance && "createdAt" in value && value["createdAt"] !== undefined;
    isInstance = isInstance && "updatedAt" in value && value["updatedAt"] !== undefined;

    return isInstance;
}

export function EmailAccessFromJSON(json: any): EmailAccess {
    return EmailAccessFromJSONTyped(json, false);
}

export function EmailAccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailAccess {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'emailOwnerUserId': json['email_owner_user_id'],
        'receivingUserId': json['receiving_user_id'],
        'grantorUserId': json['grantor_user_id'],
        'encryptedKey': json['encrypted_key'],
        'isInitial': json['is_initial'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
    };
}

export function EmailAccessToJSON(value?: EmailAccess | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'email_owner_user_id': value.emailOwnerUserId,
        'receiving_user_id': value.receivingUserId,
        'grantor_user_id': value.grantorUserId,
        'encrypted_key': value.encryptedKey,
        'is_initial': value.isInitial,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
    };
}

