/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserCoinAccount } from './UserCoinAccount';
import {
    UserCoinAccountFromJSON,
    UserCoinAccountFromJSONTyped,
    UserCoinAccountToJSON,
} from './UserCoinAccount';

/**
 * 
 * @export
 * @interface UserCoinWithAccounts
 */
export interface UserCoinWithAccounts {
    /**
     * The total balance of the coin in the user's account (in wei)
     * @type {number}
     * @memberof UserCoinWithAccounts
     */
    totalBalance: number;
    /**
     * The total balance of the coin in the user's account in USD
     * @type {number}
     * @memberof UserCoinWithAccounts
     */
    totalBalanceUSD: number;
    /**
     * 
     * @type {Array<UserCoinAccount>}
     * @memberof UserCoinWithAccounts
     */
    accounts: Array<UserCoinAccount>;
}

/**
 * Check if a given object implements the UserCoinWithAccounts interface.
 */
export function instanceOfUserCoinWithAccounts(value: object): value is UserCoinWithAccounts {
    let isInstance = true;
    isInstance = isInstance && "totalBalance" in value && value["totalBalance"] !== undefined;
    isInstance = isInstance && "totalBalanceUSD" in value && value["totalBalanceUSD"] !== undefined;
    isInstance = isInstance && "accounts" in value && value["accounts"] !== undefined;

    return isInstance;
}

export function UserCoinWithAccountsFromJSON(json: any): UserCoinWithAccounts {
    return UserCoinWithAccountsFromJSONTyped(json, false);
}

export function UserCoinWithAccountsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCoinWithAccounts {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalBalance': json['totalBalance'],
        'totalBalanceUSD': json['totalBalanceUSD'],
        'accounts': ((json['accounts'] as Array<any>).map(UserCoinAccountFromJSON)),
    };
}

export function UserCoinWithAccountsToJSON(value?: UserCoinWithAccounts | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalBalance': value.totalBalance,
        'totalBalanceUSD': value.totalBalanceUSD,
        'accounts': ((value.accounts as Array<any>).map(UserCoinAccountToJSON)),
    };
}

