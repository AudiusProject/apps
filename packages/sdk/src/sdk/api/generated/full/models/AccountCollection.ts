/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountCollectionUser } from './AccountCollectionUser';
import {
    AccountCollectionUserFromJSON,
    AccountCollectionUserFromJSONTyped,
    AccountCollectionUserToJSON,
} from './AccountCollectionUser';

/**
 * 
 * @export
 * @interface AccountCollection
 */
export interface AccountCollection {
    /**
     * 
     * @type {string}
     * @memberof AccountCollection
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof AccountCollection
     */
    isAlbum: boolean;
    /**
     * 
     * @type {string}
     * @memberof AccountCollection
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AccountCollection
     */
    permalink: string;
    /**
     * 
     * @type {AccountCollectionUser}
     * @memberof AccountCollection
     */
    user: AccountCollectionUser;
}

/**
 * Check if a given object implements the AccountCollection interface.
 */
export function instanceOfAccountCollection(value: object): value is AccountCollection {
    let isInstance = true;
    isInstance = isInstance && "id" in value && value["id"] !== undefined;
    isInstance = isInstance && "isAlbum" in value && value["isAlbum"] !== undefined;
    isInstance = isInstance && "name" in value && value["name"] !== undefined;
    isInstance = isInstance && "permalink" in value && value["permalink"] !== undefined;
    isInstance = isInstance && "user" in value && value["user"] !== undefined;

    return isInstance;
}

export function AccountCollectionFromJSON(json: any): AccountCollection {
    return AccountCollectionFromJSONTyped(json, false);
}

export function AccountCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountCollection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'isAlbum': json['is_album'],
        'name': json['name'],
        'permalink': json['permalink'],
        'user': AccountCollectionUserFromJSON(json['user']),
    };
}

export function AccountCollectionToJSON(value?: AccountCollection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'is_album': value.isAlbum,
        'name': value.name,
        'permalink': value.permalink,
        'user': AccountCollectionUserToJSON(value.user),
    };
}

