/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PlaylistLibrary } from './PlaylistLibrary';
import {
    PlaylistLibraryFromJSON,
    PlaylistLibraryFromJSONTyped,
    PlaylistLibraryToJSON,
} from './PlaylistLibrary';
import type { UserFull } from './UserFull';
import {
    UserFullFromJSON,
    UserFullFromJSONTyped,
    UserFullToJSON,
} from './UserFull';

/**
 * 
 * @export
 * @interface AccountFull
 */
export interface AccountFull {
    /**
     * 
     * @type {UserFull}
     * @memberof AccountFull
     */
    user: UserFull;
    /**
     * 
     * @type {Array<object>}
     * @memberof AccountFull
     */
    playlists: Array<object>;
    /**
     * 
     * @type {PlaylistLibrary}
     * @memberof AccountFull
     */
    playlistLibrary?: PlaylistLibrary;
    /**
     * 
     * @type {number}
     * @memberof AccountFull
     */
    trackSaveCount: number;
}

/**
 * Check if a given object implements the AccountFull interface.
 */
export function instanceOfAccountFull(value: object): value is AccountFull {
    let isInstance = true;
    isInstance = isInstance && "user" in value && value["user"] !== undefined;
    isInstance = isInstance && "playlists" in value && value["playlists"] !== undefined;
    isInstance = isInstance && "trackSaveCount" in value && value["trackSaveCount"] !== undefined;

    return isInstance;
}

export function AccountFullFromJSON(json: any): AccountFull {
    return AccountFullFromJSONTyped(json, false);
}

export function AccountFullFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountFull {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': UserFullFromJSON(json['user']),
        'playlists': json['playlists'],
        'playlistLibrary': !exists(json, 'playlist_library') ? undefined : PlaylistLibraryFromJSON(json['playlist_library']),
        'trackSaveCount': json['track_save_count'],
    };
}

export function AccountFullToJSON(value?: AccountFull | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': UserFullToJSON(value.user),
        'playlists': value.playlists,
        'playlist_library': PlaylistLibraryToJSON(value.playlistLibrary),
        'track_save_count': value.trackSaveCount,
    };
}

