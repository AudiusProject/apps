/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CidData } from './CidData';
import {
    CidDataFromJSON,
    CidDataFromJSONTyped,
    CidDataToJSON,
} from './CidData';

/**
 * 
 * @export
 * @interface DataAndType
 */
export interface DataAndType {
    /**
     * 
     * @type {string}
     * @memberof DataAndType
     */
    type?: string;
    /**
     * 
     * @type {CidData}
     * @memberof DataAndType
     */
    data?: CidData;
}

/**
 * Check if a given object implements the DataAndType interface.
 */
export function instanceOfDataAndType(value: object): value is DataAndType {
    let isInstance = true;

    return isInstance;
}

export function DataAndTypeFromJSON(json: any): DataAndType {
    return DataAndTypeFromJSONTyped(json, false);
}

export function DataAndTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataAndType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'data': !exists(json, 'data') ? undefined : CidDataFromJSON(json['data']),
    };
}

export function DataAndTypeToJSON(value?: DataAndType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'data': CidDataToJSON(value.data),
    };
}

