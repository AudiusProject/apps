/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NftGatedTrackSignatureData } from './NftGatedTrackSignatureData';
import {
    NftGatedTrackSignatureDataFromJSON,
    NftGatedTrackSignatureDataFromJSONTyped,
    NftGatedTrackSignatureDataToJSON,
} from './NftGatedTrackSignatureData';

/**
 * 
 * @export
 * @interface NftGatedTrackSignature
 */
export interface NftGatedTrackSignature {
    /**
     * 
     * @type {NftGatedTrackSignatureData}
     * @memberof NftGatedTrackSignature
     */
    mp3: NftGatedTrackSignatureData;
    /**
     * 
     * @type {NftGatedTrackSignatureData}
     * @memberof NftGatedTrackSignature
     */
    original: NftGatedTrackSignatureData;
}

/**
 * Check if a given object implements the NftGatedTrackSignature interface.
 */
export function instanceOfNftGatedTrackSignature(value: object): value is NftGatedTrackSignature {
    let isInstance = true;
    isInstance = isInstance && "mp3" in value && value["mp3"] !== undefined;
    isInstance = isInstance && "original" in value && value["original"] !== undefined;

    return isInstance;
}

export function NftGatedTrackSignatureFromJSON(json: any): NftGatedTrackSignature {
    return NftGatedTrackSignatureFromJSONTyped(json, false);
}

export function NftGatedTrackSignatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): NftGatedTrackSignature {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mp3': NftGatedTrackSignatureDataFromJSON(json['mp3']),
        'original': NftGatedTrackSignatureDataFromJSON(json['original']),
    };
}

export function NftGatedTrackSignatureToJSON(value?: NftGatedTrackSignature | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mp3': NftGatedTrackSignatureDataToJSON(value.mp3),
        'original': NftGatedTrackSignatureDataToJSON(value.original),
    };
}

