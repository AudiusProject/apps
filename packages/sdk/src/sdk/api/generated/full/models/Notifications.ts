/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Notification } from './Notification';
import {
    NotificationFromJSON,
    NotificationFromJSONTyped,
    NotificationToJSON,
} from './Notification';

/**
 * 
 * @export
 * @interface Notifications
 */
export interface Notifications {
    /**
     * 
     * @type {Array<Notification>}
     * @memberof Notifications
     */
    notifications?: Array<Notification>;
    /**
     * 
     * @type {number}
     * @memberof Notifications
     */
    unreadCount: number;
}

/**
 * Check if a given object implements the Notifications interface.
 */
export function instanceOfNotifications(value: object): value is Notifications {
    let isInstance = true;
    isInstance = isInstance && "unreadCount" in value && value["unreadCount"] !== undefined;

    return isInstance;
}

export function NotificationsFromJSON(json: any): Notifications {
    return NotificationsFromJSONTyped(json, false);
}

export function NotificationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notifications {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'notifications': !exists(json, 'notifications') ? undefined : ((json['notifications'] as Array<any>).map(NotificationFromJSON)),
        'unreadCount': json['unread_count'],
    };
}

export function NotificationsToJSON(value?: Notifications | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'notifications': value.notifications === undefined ? undefined : ((value.notifications as Array<any>).map(NotificationToJSON)),
        'unread_count': value.unreadCount,
    };
}

