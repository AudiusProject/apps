/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReactionNotificationActionData
 */
export interface ReactionNotificationActionData {
    /**
     * 
     * @type {string}
     * @memberof ReactionNotificationActionData
     */
    reactedTo: string;
    /**
     * 
     * @type {string}
     * @memberof ReactionNotificationActionData
     */
    reactionType: string;
    /**
     * 
     * @type {number}
     * @memberof ReactionNotificationActionData
     */
    reactionValue: number;
    /**
     * 
     * @type {string}
     * @memberof ReactionNotificationActionData
     */
    receiverUserId: string;
    /**
     * 
     * @type {string}
     * @memberof ReactionNotificationActionData
     */
    senderUserId: string;
    /**
     * 
     * @type {string}
     * @memberof ReactionNotificationActionData
     */
    senderWallet: string;
    /**
     * 
     * @type {string}
     * @memberof ReactionNotificationActionData
     */
    tipAmount: string;
}

/**
 * Check if a given object implements the ReactionNotificationActionData interface.
 */
export function instanceOfReactionNotificationActionData(value: object): value is ReactionNotificationActionData {
    let isInstance = true;
    isInstance = isInstance && "reactedTo" in value && value["reactedTo"] !== undefined;
    isInstance = isInstance && "reactionType" in value && value["reactionType"] !== undefined;
    isInstance = isInstance && "reactionValue" in value && value["reactionValue"] !== undefined;
    isInstance = isInstance && "receiverUserId" in value && value["receiverUserId"] !== undefined;
    isInstance = isInstance && "senderUserId" in value && value["senderUserId"] !== undefined;
    isInstance = isInstance && "senderWallet" in value && value["senderWallet"] !== undefined;
    isInstance = isInstance && "tipAmount" in value && value["tipAmount"] !== undefined;

    return isInstance;
}

export function ReactionNotificationActionDataFromJSON(json: any): ReactionNotificationActionData {
    return ReactionNotificationActionDataFromJSONTyped(json, false);
}

export function ReactionNotificationActionDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReactionNotificationActionData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reactedTo': json['reacted_to'],
        'reactionType': json['reaction_type'],
        'reactionValue': json['reaction_value'],
        'receiverUserId': json['receiver_user_id'],
        'senderUserId': json['sender_user_id'],
        'senderWallet': json['sender_wallet'],
        'tipAmount': json['tip_amount'],
    };
}

export function ReactionNotificationActionDataToJSON(value?: ReactionNotificationActionData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reacted_to': value.reactedTo,
        'reaction_type': value.reactionType,
        'reaction_value': value.reactionValue,
        'receiver_user_id': value.receiverUserId,
        'sender_user_id': value.senderUserId,
        'sender_wallet': value.senderWallet,
        'tip_amount': value.tipAmount,
    };
}

