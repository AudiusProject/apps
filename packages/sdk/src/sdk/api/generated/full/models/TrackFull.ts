/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Access } from './Access';
import {
    AccessFromJSON,
    AccessFromJSONTyped,
    AccessToJSON,
} from './Access';
import type { AccessGate } from './AccessGate';
import {
    AccessGateFromJSON,
    AccessGateFromJSONTyped,
    AccessGateToJSON,
} from './AccessGate';
import type { CoverArt } from './CoverArt';
import {
    CoverArtFromJSON,
    CoverArtFromJSONTyped,
    CoverArtToJSON,
} from './CoverArt';
import type { CoverAttribution } from './CoverAttribution';
import {
    CoverAttributionFromJSON,
    CoverAttributionFromJSONTyped,
    CoverAttributionToJSON,
} from './CoverAttribution';
import type { Favorite } from './Favorite';
import {
    FavoriteFromJSON,
    FavoriteFromJSONTyped,
    FavoriteToJSON,
} from './Favorite';
import type { FieldVisibility } from './FieldVisibility';
import {
    FieldVisibilityFromJSON,
    FieldVisibilityFromJSONTyped,
    FieldVisibilityToJSON,
} from './FieldVisibility';
import type { FullRemixParent } from './FullRemixParent';
import {
    FullRemixParentFromJSON,
    FullRemixParentFromJSONTyped,
    FullRemixParentToJSON,
} from './FullRemixParent';
import type { Repost } from './Repost';
import {
    RepostFromJSON,
    RepostFromJSONTyped,
    RepostToJSON,
} from './Repost';
import type { StemParent } from './StemParent';
import {
    StemParentFromJSON,
    StemParentFromJSONTyped,
    StemParentToJSON,
} from './StemParent';
import type { TrackArtwork } from './TrackArtwork';
import {
    TrackArtworkFromJSON,
    TrackArtworkFromJSONTyped,
    TrackArtworkToJSON,
} from './TrackArtwork';
import type { TrackSegment } from './TrackSegment';
import {
    TrackSegmentFromJSON,
    TrackSegmentFromJSONTyped,
    TrackSegmentToJSON,
} from './TrackSegment';
import type { UserFull } from './UserFull';
import {
    UserFullFromJSON,
    UserFullFromJSONTyped,
    UserFullToJSON,
} from './UserFull';

/**
 * 
 * @export
 * @interface TrackFull
 */
export interface TrackFull {
    /**
     * 
     * @type {TrackArtwork}
     * @memberof TrackFull
     */
    artwork: TrackArtwork;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    genre: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    trackCid?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    previewCid?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    origFileCid?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    origFilename?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    isOriginalAvailable: boolean;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    mood?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    releaseDate?: string;
    /**
     * 
     * @type {FullRemixParent}
     * @memberof TrackFull
     */
    remixOf: FullRemixParent;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    repostCount: number;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    favoriteCount: number;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    commentCount: number;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    tags?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    title: string;
    /**
     * 
     * @type {UserFull}
     * @memberof TrackFull
     */
    user: UserFull;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    duration: number;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    isDownloadable: boolean;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    playCount: number;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    permalink: string;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    isStreamable?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    ddexApp?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof TrackFull
     */
    playlistsContainingTrack?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    pinnedCommentId?: number;
    /**
     * Describes what access the given user has
     * @type {Access}
     * @memberof TrackFull
     */
    access: Access;
    /**
     * The blocknumber this track was last updated
     * @type {number}
     * @memberof TrackFull
     */
    blocknumber: number;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    createDate?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    coverArtSizes: string;
    /**
     * 
     * @type {CoverArt}
     * @memberof TrackFull
     */
    coverArtCids?: CoverArt;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    creditsSplits?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    isrc?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    license?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    iswc?: string;
    /**
     * 
     * @type {FieldVisibility}
     * @memberof TrackFull
     */
    fieldVisibility: FieldVisibility;
    /**
     * 
     * @type {Array<Repost>}
     * @memberof TrackFull
     */
    followeeReposts: Array<Repost>;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    hasCurrentUserReposted: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    isScheduledRelease: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    isUnlisted: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    hasCurrentUserSaved: boolean;
    /**
     * 
     * @type {Array<Favorite>}
     * @memberof TrackFull
     */
    followeeFavorites: Array<Favorite>;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    routeId: string;
    /**
     * 
     * @type {StemParent}
     * @memberof TrackFull
     */
    stemOf?: StemParent;
    /**
     * 
     * @type {Array<TrackSegment>}
     * @memberof TrackFull
     */
    trackSegments: Array<TrackSegment>;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    updatedAt: string;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    userId: string;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    isDelete: boolean;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    coverArt?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    isAvailable: boolean;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    aiAttributionUserId?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackFull
     */
    allowedApiKeys?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    audioUploadId?: string;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    previewStartSeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    bpm?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    isCustomBpm?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    musicalKey?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    isCustomMusicalKey?: boolean;
    /**
     * 
     * @type {number}
     * @memberof TrackFull
     */
    audioAnalysisErrorCount?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TrackFull
     */
    commentsDisabled?: boolean;
    /**
     * 
     * @type {object}
     * @memberof TrackFull
     */
    ddexReleaseIds?: object;
    /**
     * 
     * @type {Array<object>}
     * @memberof TrackFull
     */
    artists?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof TrackFull
     */
    resourceContributors?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof TrackFull
     */
    indirectResourceContributors?: Array<object>;
    /**
     * 
     * @type {object}
     * @memberof TrackFull
     */
    rightsController?: object;
    /**
     * 
     * @type {object}
     * @memberof TrackFull
     */
    copyrightLine?: object;
    /**
     * 
     * @type {object}
     * @memberof TrackFull
     */
    producerCopyrightLine?: object;
    /**
     * 
     * @type {string}
     * @memberof TrackFull
     */
    parentalWarningType?: string;
    /**
     * Whether or not the owner has restricted streaming behind an access gate
     * @type {boolean}
     * @memberof TrackFull
     */
    isStreamGated: boolean;
    /**
     * How to unlock stream access to the track
     * @type {AccessGate}
     * @memberof TrackFull
     */
    streamConditions?: AccessGate;
    /**
     * Whether or not the owner has restricted downloading behind an access gate
     * @type {boolean}
     * @memberof TrackFull
     */
    isDownloadGated: boolean;
    /**
     * How to unlock the track download
     * @type {AccessGate}
     * @memberof TrackFull
     */
    downloadConditions?: AccessGate;
    /**
     * 
     * @type {CoverAttribution}
     * @memberof TrackFull
     */
    coverAttribution?: CoverAttribution;
    /**
     * Indicates whether the track is owned by the user for MRI sake
     * @type {boolean}
     * @memberof TrackFull
     */
    isOwnedByUser: boolean;
}

/**
 * Check if a given object implements the TrackFull interface.
 */
export function instanceOfTrackFull(value: object): value is TrackFull {
    let isInstance = true;
    isInstance = isInstance && "artwork" in value && value["artwork"] !== undefined;
    isInstance = isInstance && "genre" in value && value["genre"] !== undefined;
    isInstance = isInstance && "id" in value && value["id"] !== undefined;
    isInstance = isInstance && "isOriginalAvailable" in value && value["isOriginalAvailable"] !== undefined;
    isInstance = isInstance && "remixOf" in value && value["remixOf"] !== undefined;
    isInstance = isInstance && "repostCount" in value && value["repostCount"] !== undefined;
    isInstance = isInstance && "favoriteCount" in value && value["favoriteCount"] !== undefined;
    isInstance = isInstance && "commentCount" in value && value["commentCount"] !== undefined;
    isInstance = isInstance && "title" in value && value["title"] !== undefined;
    isInstance = isInstance && "user" in value && value["user"] !== undefined;
    isInstance = isInstance && "duration" in value && value["duration"] !== undefined;
    isInstance = isInstance && "isDownloadable" in value && value["isDownloadable"] !== undefined;
    isInstance = isInstance && "playCount" in value && value["playCount"] !== undefined;
    isInstance = isInstance && "permalink" in value && value["permalink"] !== undefined;
    isInstance = isInstance && "access" in value && value["access"] !== undefined;
    isInstance = isInstance && "blocknumber" in value && value["blocknumber"] !== undefined;
    isInstance = isInstance && "coverArtSizes" in value && value["coverArtSizes"] !== undefined;
    isInstance = isInstance && "createdAt" in value && value["createdAt"] !== undefined;
    isInstance = isInstance && "fieldVisibility" in value && value["fieldVisibility"] !== undefined;
    isInstance = isInstance && "followeeReposts" in value && value["followeeReposts"] !== undefined;
    isInstance = isInstance && "hasCurrentUserReposted" in value && value["hasCurrentUserReposted"] !== undefined;
    isInstance = isInstance && "isScheduledRelease" in value && value["isScheduledRelease"] !== undefined;
    isInstance = isInstance && "isUnlisted" in value && value["isUnlisted"] !== undefined;
    isInstance = isInstance && "hasCurrentUserSaved" in value && value["hasCurrentUserSaved"] !== undefined;
    isInstance = isInstance && "followeeFavorites" in value && value["followeeFavorites"] !== undefined;
    isInstance = isInstance && "routeId" in value && value["routeId"] !== undefined;
    isInstance = isInstance && "trackSegments" in value && value["trackSegments"] !== undefined;
    isInstance = isInstance && "updatedAt" in value && value["updatedAt"] !== undefined;
    isInstance = isInstance && "userId" in value && value["userId"] !== undefined;
    isInstance = isInstance && "isDelete" in value && value["isDelete"] !== undefined;
    isInstance = isInstance && "isAvailable" in value && value["isAvailable"] !== undefined;
    isInstance = isInstance && "isStreamGated" in value && value["isStreamGated"] !== undefined;
    isInstance = isInstance && "isDownloadGated" in value && value["isDownloadGated"] !== undefined;
    isInstance = isInstance && "isOwnedByUser" in value && value["isOwnedByUser"] !== undefined;

    return isInstance;
}

export function TrackFullFromJSON(json: any): TrackFull {
    return TrackFullFromJSONTyped(json, false);
}

export function TrackFullFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackFull {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'artwork': TrackArtworkFromJSON(json['artwork']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'genre': json['genre'],
        'id': json['id'],
        'trackCid': !exists(json, 'track_cid') ? undefined : json['track_cid'],
        'previewCid': !exists(json, 'preview_cid') ? undefined : json['preview_cid'],
        'origFileCid': !exists(json, 'orig_file_cid') ? undefined : json['orig_file_cid'],
        'origFilename': !exists(json, 'orig_filename') ? undefined : json['orig_filename'],
        'isOriginalAvailable': json['is_original_available'],
        'mood': !exists(json, 'mood') ? undefined : json['mood'],
        'releaseDate': !exists(json, 'release_date') ? undefined : json['release_date'],
        'remixOf': FullRemixParentFromJSON(json['remix_of']),
        'repostCount': json['repost_count'],
        'favoriteCount': json['favorite_count'],
        'commentCount': json['comment_count'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'title': json['title'],
        'user': UserFullFromJSON(json['user']),
        'duration': json['duration'],
        'isDownloadable': json['is_downloadable'],
        'playCount': json['play_count'],
        'permalink': json['permalink'],
        'isStreamable': !exists(json, 'is_streamable') ? undefined : json['is_streamable'],
        'ddexApp': !exists(json, 'ddex_app') ? undefined : json['ddex_app'],
        'playlistsContainingTrack': !exists(json, 'playlists_containing_track') ? undefined : json['playlists_containing_track'],
        'pinnedCommentId': !exists(json, 'pinned_comment_id') ? undefined : json['pinned_comment_id'],
        'access': AccessFromJSON(json['access']),
        'blocknumber': json['blocknumber'],
        'createDate': !exists(json, 'create_date') ? undefined : json['create_date'],
        'coverArtSizes': json['cover_art_sizes'],
        'coverArtCids': !exists(json, 'cover_art_cids') ? undefined : CoverArtFromJSON(json['cover_art_cids']),
        'createdAt': json['created_at'],
        'creditsSplits': !exists(json, 'credits_splits') ? undefined : json['credits_splits'],
        'isrc': !exists(json, 'isrc') ? undefined : json['isrc'],
        'license': !exists(json, 'license') ? undefined : json['license'],
        'iswc': !exists(json, 'iswc') ? undefined : json['iswc'],
        'fieldVisibility': FieldVisibilityFromJSON(json['field_visibility']),
        'followeeReposts': ((json['followee_reposts'] as Array<any>).map(RepostFromJSON)),
        'hasCurrentUserReposted': json['has_current_user_reposted'],
        'isScheduledRelease': json['is_scheduled_release'],
        'isUnlisted': json['is_unlisted'],
        'hasCurrentUserSaved': json['has_current_user_saved'],
        'followeeFavorites': ((json['followee_favorites'] as Array<any>).map(FavoriteFromJSON)),
        'routeId': json['route_id'],
        'stemOf': !exists(json, 'stem_of') ? undefined : StemParentFromJSON(json['stem_of']),
        'trackSegments': ((json['track_segments'] as Array<any>).map(TrackSegmentFromJSON)),
        'updatedAt': json['updated_at'],
        'userId': json['user_id'],
        'isDelete': json['is_delete'],
        'coverArt': !exists(json, 'cover_art') ? undefined : json['cover_art'],
        'isAvailable': json['is_available'],
        'aiAttributionUserId': !exists(json, 'ai_attribution_user_id') ? undefined : json['ai_attribution_user_id'],
        'allowedApiKeys': !exists(json, 'allowed_api_keys') ? undefined : json['allowed_api_keys'],
        'audioUploadId': !exists(json, 'audio_upload_id') ? undefined : json['audio_upload_id'],
        'previewStartSeconds': !exists(json, 'preview_start_seconds') ? undefined : json['preview_start_seconds'],
        'bpm': !exists(json, 'bpm') ? undefined : json['bpm'],
        'isCustomBpm': !exists(json, 'is_custom_bpm') ? undefined : json['is_custom_bpm'],
        'musicalKey': !exists(json, 'musical_key') ? undefined : json['musical_key'],
        'isCustomMusicalKey': !exists(json, 'is_custom_musical_key') ? undefined : json['is_custom_musical_key'],
        'audioAnalysisErrorCount': !exists(json, 'audio_analysis_error_count') ? undefined : json['audio_analysis_error_count'],
        'commentsDisabled': !exists(json, 'comments_disabled') ? undefined : json['comments_disabled'],
        'ddexReleaseIds': !exists(json, 'ddex_release_ids') ? undefined : json['ddex_release_ids'],
        'artists': !exists(json, 'artists') ? undefined : json['artists'],
        'resourceContributors': !exists(json, 'resource_contributors') ? undefined : json['resource_contributors'],
        'indirectResourceContributors': !exists(json, 'indirect_resource_contributors') ? undefined : json['indirect_resource_contributors'],
        'rightsController': !exists(json, 'rights_controller') ? undefined : json['rights_controller'],
        'copyrightLine': !exists(json, 'copyright_line') ? undefined : json['copyright_line'],
        'producerCopyrightLine': !exists(json, 'producer_copyright_line') ? undefined : json['producer_copyright_line'],
        'parentalWarningType': !exists(json, 'parental_warning_type') ? undefined : json['parental_warning_type'],
        'isStreamGated': json['is_stream_gated'],
        'streamConditions': !exists(json, 'stream_conditions') ? undefined : AccessGateFromJSON(json['stream_conditions']),
        'isDownloadGated': json['is_download_gated'],
        'downloadConditions': !exists(json, 'download_conditions') ? undefined : AccessGateFromJSON(json['download_conditions']),
        'coverAttribution': !exists(json, 'cover_attribution') ? undefined : CoverAttributionFromJSON(json['cover_attribution']),
        'isOwnedByUser': json['is_owned_by_user'],
    };
}

export function TrackFullToJSON(value?: TrackFull | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'artwork': TrackArtworkToJSON(value.artwork),
        'description': value.description,
        'genre': value.genre,
        'id': value.id,
        'track_cid': value.trackCid,
        'preview_cid': value.previewCid,
        'orig_file_cid': value.origFileCid,
        'orig_filename': value.origFilename,
        'is_original_available': value.isOriginalAvailable,
        'mood': value.mood,
        'release_date': value.releaseDate,
        'remix_of': FullRemixParentToJSON(value.remixOf),
        'repost_count': value.repostCount,
        'favorite_count': value.favoriteCount,
        'comment_count': value.commentCount,
        'tags': value.tags,
        'title': value.title,
        'user': UserFullToJSON(value.user),
        'duration': value.duration,
        'is_downloadable': value.isDownloadable,
        'play_count': value.playCount,
        'permalink': value.permalink,
        'is_streamable': value.isStreamable,
        'ddex_app': value.ddexApp,
        'playlists_containing_track': value.playlistsContainingTrack,
        'pinned_comment_id': value.pinnedCommentId,
        'access': AccessToJSON(value.access),
        'blocknumber': value.blocknumber,
        'create_date': value.createDate,
        'cover_art_sizes': value.coverArtSizes,
        'cover_art_cids': CoverArtToJSON(value.coverArtCids),
        'created_at': value.createdAt,
        'credits_splits': value.creditsSplits,
        'isrc': value.isrc,
        'license': value.license,
        'iswc': value.iswc,
        'field_visibility': FieldVisibilityToJSON(value.fieldVisibility),
        'followee_reposts': ((value.followeeReposts as Array<any>).map(RepostToJSON)),
        'has_current_user_reposted': value.hasCurrentUserReposted,
        'is_scheduled_release': value.isScheduledRelease,
        'is_unlisted': value.isUnlisted,
        'has_current_user_saved': value.hasCurrentUserSaved,
        'followee_favorites': ((value.followeeFavorites as Array<any>).map(FavoriteToJSON)),
        'route_id': value.routeId,
        'stem_of': StemParentToJSON(value.stemOf),
        'track_segments': ((value.trackSegments as Array<any>).map(TrackSegmentToJSON)),
        'updated_at': value.updatedAt,
        'user_id': value.userId,
        'is_delete': value.isDelete,
        'cover_art': value.coverArt,
        'is_available': value.isAvailable,
        'ai_attribution_user_id': value.aiAttributionUserId,
        'allowed_api_keys': value.allowedApiKeys,
        'audio_upload_id': value.audioUploadId,
        'preview_start_seconds': value.previewStartSeconds,
        'bpm': value.bpm,
        'is_custom_bpm': value.isCustomBpm,
        'musical_key': value.musicalKey,
        'is_custom_musical_key': value.isCustomMusicalKey,
        'audio_analysis_error_count': value.audioAnalysisErrorCount,
        'comments_disabled': value.commentsDisabled,
        'ddex_release_ids': value.ddexReleaseIds,
        'artists': value.artists,
        'resource_contributors': value.resourceContributors,
        'indirect_resource_contributors': value.indirectResourceContributors,
        'rights_controller': value.rightsController,
        'copyright_line': value.copyrightLine,
        'producer_copyright_line': value.producerCopyrightLine,
        'parental_warning_type': value.parentalWarningType,
        'is_stream_gated': value.isStreamGated,
        'stream_conditions': AccessGateToJSON(value.streamConditions),
        'is_download_gated': value.isDownloadGated,
        'download_conditions': AccessGateToJSON(value.downloadConditions),
        'cover_attribution': CoverAttributionToJSON(value.coverAttribution),
        'is_owned_by_user': value.isOwnedByUser,
    };
}

