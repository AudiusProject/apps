/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TrendingPlaylistNotificationActionData
 */
export interface TrendingPlaylistNotificationActionData {
    /**
     * 
     * @type {number}
     * @memberof TrendingPlaylistNotificationActionData
     */
    rank: number;
    /**
     * 
     * @type {string}
     * @memberof TrendingPlaylistNotificationActionData
     */
    genre: string;
    /**
     * 
     * @type {string}
     * @memberof TrendingPlaylistNotificationActionData
     */
    playlistId: string;
    /**
     * 
     * @type {string}
     * @memberof TrendingPlaylistNotificationActionData
     */
    timeRange: TrendingPlaylistNotificationActionDataTimeRangeEnum;
}


/**
 * @export
 */
export const TrendingPlaylistNotificationActionDataTimeRangeEnum = {
    Week: 'week',
    Month: 'month',
    Year: 'year'
} as const;
export type TrendingPlaylistNotificationActionDataTimeRangeEnum = typeof TrendingPlaylistNotificationActionDataTimeRangeEnum[keyof typeof TrendingPlaylistNotificationActionDataTimeRangeEnum];


/**
 * Check if a given object implements the TrendingPlaylistNotificationActionData interface.
 */
export function instanceOfTrendingPlaylistNotificationActionData(value: object): value is TrendingPlaylistNotificationActionData {
    let isInstance = true;
    isInstance = isInstance && "rank" in value && value["rank"] !== undefined;
    isInstance = isInstance && "genre" in value && value["genre"] !== undefined;
    isInstance = isInstance && "playlistId" in value && value["playlistId"] !== undefined;
    isInstance = isInstance && "timeRange" in value && value["timeRange"] !== undefined;

    return isInstance;
}

export function TrendingPlaylistNotificationActionDataFromJSON(json: any): TrendingPlaylistNotificationActionData {
    return TrendingPlaylistNotificationActionDataFromJSONTyped(json, false);
}

export function TrendingPlaylistNotificationActionDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrendingPlaylistNotificationActionData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rank': json['rank'],
        'genre': json['genre'],
        'playlistId': json['playlist_id'],
        'timeRange': json['time_range'],
    };
}

export function TrendingPlaylistNotificationActionDataToJSON(value?: TrendingPlaylistNotificationActionData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rank': value.rank,
        'genre': value.genre,
        'playlist_id': value.playlistId,
        'time_range': value.timeRange,
    };
}

