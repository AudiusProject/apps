/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserFullArtistCoinBadge
 */
export interface UserFullArtistCoinBadge {
    /**
     * 
     * @type {string}
     * @memberof UserFullArtistCoinBadge
     */
    mint?: string;
    /**
     * 
     * @type {string}
     * @memberof UserFullArtistCoinBadge
     */
    logoUri?: string;
    /**
     * The coin symbol/ticker
     * @type {string}
     * @memberof UserFullArtistCoinBadge
     */
    ticker?: string;
}

/**
 * Check if a given object implements the UserFullArtistCoinBadge interface.
 */
export function instanceOfUserFullArtistCoinBadge(value: object): value is UserFullArtistCoinBadge {
    let isInstance = true;

    return isInstance;
}

export function UserFullArtistCoinBadgeFromJSON(json: any): UserFullArtistCoinBadge {
    return UserFullArtistCoinBadgeFromJSONTyped(json, false);
}

export function UserFullArtistCoinBadgeFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserFullArtistCoinBadge {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mint': !exists(json, 'mint') ? undefined : json['mint'],
        'logoUri': !exists(json, 'logo_uri') ? undefined : json['logo_uri'],
        'ticker': !exists(json, 'ticker') ? undefined : json['ticker'],
    };
}

export function UserFullArtistCoinBadgeToJSON(value?: UserFullArtistCoinBadge | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mint': value.mint,
        'logo_uri': value.logoUri,
        'ticker': value.ticker,
    };
}

