{
  "all": {
    "down": [
      "SERVICES=$(docker ps -aq); if [ \"$SERVICES\" != \"\" ]; then docker stop ${SERVICES} && docker rm ${SERVICES}; fi",
      "docker container prune -f",
      "docker volume prune -f",
      "docker network prune -f"
    ]
  },
  "network": {
    "up": [
      "export DOCKER_CLIENT_TIMEOUT=360",
      "export COMPOSE_HTTP_TIMEOUT=360",
      "docker network create -d bridge audius_dev"
    ],
    "down": [
      "docker network rm audius_dev"
    ]
  },
  "contracts": {
    "up": [
      "cd contracts/",
      "docker run --name audius_ganache_cli -d -p 8545:8545 --network=audius_dev trufflesuite/ganache-cli:latest -h 0.0.0.0 -l 8000000 --acctKeys contracts-ganache-accounts.json -a 100 -b 5",
      "echo 'Waiting for ganache to fully come online...'",
      "sleep 10",
      "echo 'Migrating contracts'",
      "cd contracts/; node_modules/.bin/truffle migrate --f 1 --to 3",
      "echo 'Writing flask config'",
      "cd contracts/; node_modules/.bin/truffle exec scripts/_contractsLocalSetup.js -run"
    ],
    "down": [
      "cd contracts/; npm run ganache-q"
    ]
  },
  "eth-contracts": {
    "path": "eth-contracts",
    "up": [
      "cd eth-contracts/",
      "docker run --name audius_ganache_cli_eth_contracts -d -p 8546:8545 --network=audius_dev trufflesuite/ganache-cli:v6.9.1 -h 0.0.0.0 --acctKeys eth-contracts-ganache-accounts.json -a 100",
      "echo 'Waiting for ganache to fully come online...'",
      "sleep 5",
      "echo 'Migrating eth contracts'",
      "cd eth-contracts/; node_modules/.bin/truffle migrate --f 1 --to 9"
    ],
    "down": [
      "cd eth-contracts/; npm run ganache-q"
    ]
  },
 "solana-validator": {
   "up": [
      "docker run -d --name solana --publish 8899:8899/tcp --network audius_dev --entrypoint='' solanalabs/solana:v1.7.1 sh -c 'solana-test-validator --gossip-host solana'"
   ],
    "down": [
      "docker container stop solana || true",
      "docker container rm solana || true"
    ]
 },
 "solana-programs": {
    "path": "solana-programs",
    "up": [
      "cd solana-programs/; docker run --network audius_dev -e SOLANA_HOST='http://solana:8899' -v \"$PWD:/usr/src/app\" audius/solana-programs:develop > solana-program-config.json",
      "cd solana-programs/; cat solana-program-config.json; cp solana-program-config.json ../identity-service",
      "mkdir -p ~/.audius; cd solana-programs/; cp solana-program-config.json ~/.audius/solana-program-config.json",
      "sudo chown -R $(id -u):$(id -g) solana-programs/",
      "cd solana-programs/; cat solana-program-config.json | jq .ownerWallet > test-owner.json"
    ],
    "add-sender": [
      "cd solana-programs/reward-manager/cli; cargo run create-sender --eth-operator-address $sender_address --eth-sender-address $sender_address --reward-manager $reward_manager_address"
    ]
  },
  "ipfs": {
    "up": [
      "libs/scripts/ipfs.sh up local-ipfs-node"
    ],
    "down": [
      "libs/scripts/ipfs.sh down local-ipfs-node"
    ]
  },
  "ipfs-2": {
    "up": [
      "libs/scripts/ipfs.sh up local-ipfs-node-2 6011 6012"
    ],
    "down": [
      "libs/scripts/ipfs.sh down local-ipfs-node-2"
    ]
  },
  "ipfs-3": {
    "up": [
      "libs/scripts/ipfs.sh up local-ipfs-node-3 6021 6022"
    ],
    "down": [
      "libs/scripts/ipfs.sh down local-ipfs-node-3"
    ]
  },
  "ipfs-4": {
    "up": [
      "libs/scripts/ipfs.sh up local-ipfs-node-4 6031 6032"
    ],
    "down": [
      "libs/scripts/ipfs.sh down local-ipfs-node-4"
    ]
  },
  "init-contracts-info": {
    "up": [
      "cd libs/; sh ./scripts/migrate_contracts.sh"
    ]
  },
  "init-token-versions": {
    "up": [
      "cd libs/; node initScripts/local.js init-all"
    ]
  },
  "discovery-provider": {
    "protocol": "http",
    "host": "dn1_web-server_1",
    "port": 5000,
    "up": [
      "cd libs/initScripts; node configureLocalDiscProv.js",
      "cd discovery-provider; [ ! -e celerybeat.pid ] || rm celerybeat.pid",
      "cd discovery-provider;  . compose/env/shellEnv#.sh;  docker-compose -f compose/docker-compose.db.yml -f compose/docker-compose.redis.yml -f compose/docker-compose.backend.yml -f compose/docker-compose.ipfs.yml up --build -d",
      "cd discovery-provider; . compose/env/unsetShellEnv.sh",
      "echo 'Waiting 5 seconds...'",
      "sleep 5"
    ],
    "up-web-server": [
      "cd libs/initScripts; node configureLocalDiscProv.js",
      "cd discovery-provider; . compose/env/shellEnv#.sh; docker-compose -f compose/docker-compose.redis.yml -f compose/docker-compose.web-server.yml -f compose/docker-compose.ipfs.yml up --build -d",
      "echo 'Waiting 5 seconds...'",
      "sleep 5"
    ],
    "down": [
      "cd discovery-provider; . compose/env/shellEnv#.sh; docker-compose -f compose/docker-compose.db.yml -f compose/docker-compose.redis.yml -f compose/docker-compose.backend.yml -f compose/docker-compose.ipfs.yml down",
      "cd discovery-provider; . compose/env/unsetShellEnv.sh"
    ],
    "register": [
      "cd libs/; node initScripts/local.js register-discprov #"
    ],
    "restart": [
      "cd discovery-provider; . compose/env/unsetShellEnv.sh",
      "cd discovery-provider; . compose/env/shellEnv#.sh; docker-compose -f compose/docker-compose.db.yml -f compose/docker-compose.redis.yml -f compose/docker-compose.backend.yml -f compose/docker-compose.ipfs.yml down",
      "docker volume prune -f",
      "cd libs/initScripts; node configureLocalDiscProv.js",
      "cd discovery-provider; [ ! -e celerybeat.pid ] || rm celerybeat.pid",
      "cd discovery-provider; . compose/env/shellEnv#.sh; docker-compose -f compose/docker-compose.db.yml -f compose/docker-compose.redis.yml -f compose/docker-compose.backend.yml -f compose/docker-compose.ipfs.yml up --build -d",
      "cd discovery-provider; . compose/env/unsetShellEnv.sh",
      "echo 'Waiting 5 seconds...'",
      "sleep 5"
    ]
  },
  "content-service": {
    "protocol": "http",
    "host": "localhost",
    "port": 8432,
    "up": [
      "docker-compose -f content-service/docker-compose/docker-compose.full.yml up --build -d"
    ],
    "down": [
      "docker-compose -f content-service/docker-compose/docker-compose.full.yml down"
    ]
  },
  "creator-node": {
    "protocol": "http",
    "host": "localhost",
    "port": 4000,
    "up": [
      "cd creator-node; . compose/env/shellEnv#.sh; . compose/env/commonEnv.sh; docker-compose -f compose/docker-compose.yml up --build -d",
      "cd creator-node; . compose/env/unsetShellEnv.sh"
    ],
    "down": [
      "cd creator-node; . compose/env/shellEnv#.sh;  docker-compose -f compose/docker-compose.yml down --remove-orphans"
    ],
    "restart": [
      "cd creator-node; . compose/env/unsetShellEnv.sh",
      "cd creator-node; . compose/env/shellEnv#.sh; docker-compose -f compose/docker-compose.yml down --remove-orphans",
      "cd libs/; node initScripts/local.js update-cnode-config #",
      "cd creator-node; . compose/env/shellEnv#.sh; . compose/env/commonEnv.sh; docker-compose -f compose/docker-compose.yml up --build -d",
      "cd creator-node; . compose/env/unsetShellEnv.sh"
    ],
    "register": [
      "cd libs/; node initScripts/local.js register-cnode #"
    ],
    "deregister": [
      "cd libs/; node initScripts/local.js deregister-cnode #"
    ],
    "update-delegate-wallet": [
      "cd libs/; node initScripts/local.js update-cnode-config #"
    ],
    "unset-shell-env": [
      "cd creator-node; . compose/env/unsetShellEnv.sh"
    ]
  },
  "identity-service": {
    "protocol": "http",
    "host": "audius-identity-service_identity-service_1",
    "port": 7000,
    "up": [
      "cd identity-service/; docker-compose -f compose/docker-compose.full.yml up --build -d",
      "echo 'Waiting 15 seconds...'",
      "sleep 15"
    ],
    "down": [
      "cd identity-service/; docker-compose -f compose/docker-compose.full.yml down"
    ]
  },
  "distribute": {
    "up": [
      "node libs/initScripts/local.js distribute"
    ]
  },
  "account": {
    "up": [
      "node libs/initScripts/local.js print-accounts"
    ]
  },
  "init-repos": {
    "up": [
      ". $PROTOCOL_DIR/service-commands/scripts/init-repos.sh"
    ]
  },
  "user-replica-set-manager": {
    "up": [
      "cd libs; node initScripts/local.js update-userreplicasetmanager-init-config",
      "cd contracts/; node_modules/.bin/truffle migrate --f 4 --to 4"
    ]
  }
}