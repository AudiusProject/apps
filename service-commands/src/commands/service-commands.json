{
  "all": {
    "down": [
      "audius-compose down"
    ]
  },
  "network": {
    "up": [],
    "down": []
  },
  "contracts": {
    "up": [
      "audius-compose up poa-ganache"
    ],
    "down": [
      "docker compose rm -s -f poa-ganache"
    ]
  },
  "contracts-predeployed": {
    "protocol": "http",
    "host": "localhost",
    "port": 8545,
    "health_check_endpoint": "",
    "up": [
      "audius-compose up poa-contracts"
    ],
    "down": [
      "docker compose rm -s -f poa-ganache"
    ]
  },
  "eth-contracts": {
    "path": "eth-contracts",
    "up": [
      "audius-compose up eth-ganache"
    ],
    "down": [
      "docker compose rm -s -f eth-ganache"
    ]
  },
  "eth-contracts-predeployed": {
    "protocol": "http",
    "host": "localhost",
    "port": 8546,
    "health_check_endpoint": "",
    "up": [
      "audius-compose up eth-ganache"
    ],
    "down": [
      "docker compose rm -s -f eth-ganache"
    ]
  },
  "solana-validator-predeployed": {
    "protocol": "http",
    "host": "localhost",
    "port": 8899,
    "health_check_endpoint": "",
    "up": [
      "audius-compose up solana-test-validator"
    ],
    "down": [
      "docker compose rm -s -f solana-test-validator"
    ]
  },
  "solana-validator": {
    "protocol": "http",
    "host": "localhost",
    "port": 8899,
    "health_check_endpoint": "",
    "up": [
      "audius-compose up solana-test-validator"
    ],
    "down": [
      "docker compose rm -s -f solana-test-validator"
    ]
  },
  "solana-programs": {
    "path": "solana-programs",
    "up": [],
    "add-sender": [
      "audius-compose exec solana-test-validator -- audius-reward-manager-cli create-sender --eth-operator-address $sender_address --eth-sender-address $sender_address --reward-manager $reward_manager_address"
    ]
  },
  "ipfs": {
    "up": [
      "libs/scripts/ipfs.sh up local-ipfs-node"
    ],
    "down": [
      "libs/scripts/ipfs.sh down local-ipfs-node"
    ]
  },
  "ipfs-2": {
    "up": [
      "libs/scripts/ipfs.sh up local-ipfs-node-2 6011 6012"
    ],
    "down": [
      "libs/scripts/ipfs.sh down local-ipfs-node-2"
    ]
  },
  "ipfs-3": {
    "up": [
      "libs/scripts/ipfs.sh up local-ipfs-node-3 6021 6022"
    ],
    "down": [
      "libs/scripts/ipfs.sh down local-ipfs-node-3"
    ]
  },
  "ipfs-4": {
    "up": [
      "libs/scripts/ipfs.sh up local-ipfs-node-4 6031 6032"
    ],
    "down": [
      "libs/scripts/ipfs.sh down local-ipfs-node-4"
    ]
  },
  "init-contracts-info": {
    "up": []
  },
  "init-token-versions": {
    "up": []
  },
  "discovery-provider": {
    "protocol": "http",
    "host": "dn1_web-server_1",
    "port": 5000,
    "health_check_endpoint": "health_check",
    "up": [
      "UP=true ${PROTOCOL_DIR}/discovery-provider/scripts/up.sh #"
    ],
    "up-web-server": [
      "UP_WEB_SERVER=true ${PROTOCOL_DIR}/discovery-provider/scripts/up.sh #"
    ],
    "down": [
      "cd discovery-provider; . compose/env/tmp/shellEnv#.sh; docker-compose -f compose/docker-compose.db.yml -f compose/docker-compose.elasticsearch.yml -f compose/docker-compose.redis.yml -f compose/docker-compose.backend.yml -f compose/docker-compose.ipfs.yml down",
      "cd discovery-provider; . compose/env/unsetShellEnv.sh",
      "sudo rm -rf solana-programs/claimable-tokens/cli/target",
      "sudo rm -rf solana-programs/cli/target",
      "sudo rm -rf solana-programs/reward-manager/target",
      "sudo rm -rf discovery-provider/.venv",
      "sudo rm -rf discovery-provider/.mypy_cache",
      "sudo rm -f discovery-provider/*.log"
    ],
    "register": [
      "cd service-commands/; node scripts/rewardManagerLocal.js register-discovery-node #"
    ],
    "restart": [
      "docker restart audius-protocol-discovery-provider-#"
    ]
  },
  "creator-node": {
    "protocol": "http",
    "host": "localhost",
    "port": 4000,
    "health_check_endpoint": "health_check",
    "up": [
      "${PROTOCOL_DIR}/creator-node/scripts/up.sh #"
    ],
    "down": [
      "cd creator-node; . compose/env/tmp/shellEnv#.sh; rm -rf compose/env/tmp/file-storage-#; docker-compose -f compose/docker-compose.yml down --remove-orphans"
    ],
    "restart": [
      "docker restart audius-protocol-creator-node-#"
    ],
    "register": [
      "audius-compose exec creator-node-# node scripts/register.js"
    ],
    "deregister": [
      "cd libs/; npm run init-local deregister-cnode #"
    ],
    "update-delegate-wallet": [
      "cd libs/; npm run init-local update-cnode-config #"
    ],
    "unset-shell-env": [
      "cd creator-node; . compose/env/unsetShellEnv.sh"
    ]
  },
  "identity-service": {
    "protocol": "http",
    "host": "audius-identity-service_identity-service_1",
    "port": 7000,
    "health_check_endpoint": "health_check",
    "up": [
      "audius-compose up identity-service",
      "echo 'Waiting 15 seconds...'",
      "sleep 15"
    ],
    "down": [
      "docker compose rm -s -f identity-service identity-service-db identity-service-redis"
    ]
  },
  "distribute": {
    "up": [
      "node libs/initScripts/local.js distribute"
    ]
  },
  "account": {
    "up": [
      "node libs/initScripts/local.js print-accounts"
    ]
  },
  "init-repos": {
    "up": [
      ". $PROTOCOL_DIR/service-commands/scripts/init-repos.sh"
    ]
  },
  "user-replica-set-manager": {
    "up": []
  },
  "libs": {
    "up": [
      "audius-compose up build-audius-libs"
    ],
    "down": [
      "docker compose rm -s -f build-audius-libs"
    ]
  },
  "monitoring": {
    "up": [
      "cd monitoring; scripts/up.sh"
    ],
    "down": [
      "cd monitoring; scripts/down.sh"
    ]
  },
  "logging": {
    "up": [
      "./logging/bin/start.sh"
    ],
    "down": [
      "./logging/bin/stop.sh"
    ]
  },
  "aao": {
    "up": [
      "if [[ -z \"$AAO_DIR\" ]]; then echo \"!!!ERROR: need to set AAO_DIR\"; exit 1; fi",
      "echo 'Starting AAO...'",
      "cd $AAO_DIR; ./scripts/configureLocal.sh; docker-compose -f docker-compose-dev.yml up -d",
      "cp ~/.audius/aao-config.json $PROTOCOL_DIR/identity-service",
      "sleep 5",
      "echo 'AAO Started'"
    ],
    "register": [
      "cd service-commands; ./scripts/registerAAO.sh"
    ],
    "down": [
      "if [[ -z \"$AAO_DIR\" ]]; then echo \"!!!ERROR: need to set AAO_DIR\"; exit 1; fi",
      "echo 'Stopping AAO...'",
      "cd $AAO_DIR; docker-compose -f docker-compose-dev.yml down"
    ]
  },
  "tn": {
    "up": [
      "if [[ -z \"$TN_DIR\" ]]; then echo \"!!!ERROR: need to set TN_DIR\"; exit 1; fi",
      "echo 'Starting TN...'",
      "cd $TN_DIR; . scripts/start.sh dev",
      "sleep 5",
      "echo 'TN Started, registering on chain'",
      "cd libs/; npm run init-local register-trusted-notifier"
    ],
    "restart": [
      "if [[ -z \"$TN_DIR\" ]]; then echo \"!!!ERROR: need to set TN_DIR\"; exit 1; fi",
      "cd $TN_DIR; . scripts/stop.sh dev",
      "cd $TN_DIR; . scripts/start.sh dev"
    ],
    "down": [
      "if [[ -z \"$TN_DIR\" ]]; then echo \"!!!ERROR: need to set TN_DIR\"; exit 1; fi",
      "echo 'Stopping TN...'",
      "cd $TN_DIR; . scripts/stop.sh dev"
    ]
  }
}